# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, WANG Hailin
# This file is distributed under the same license as the abqpy package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: abqpy 2018\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-10-01 09:59+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../user/output/python/examples.rst:3
msgid "Example scripts that access data from an output database"
msgstr ""

#: ../../user/output/python/examples.rst:5
msgid "The following examples illustrate how you use the output database commands to access data from an output database."
msgstr ""

#: ../../user/output/python/examples.rst:7
msgid "In addition, the Abaqus Scripting Interface examples, :doc:`/user/about/examples/read-output` and :doc:`/user/examples` illustrate how to read data from an output database."
msgstr ""

#: ../../user/output/python/examples.rst:10
msgid "Finding the maximum value of von Mises stress"
msgstr ""

#: ../../user/output/python/examples.rst:12
msgid "This example illustrates how you can iterate through an output database and search for the maximum value of von Mises stress. The script opens the output database specified by the first argument on the command line and iterates through the following:"
msgstr ""

#: ../../user/output/python/examples.rst:14
msgid "Each step."
msgstr ""

#: ../../user/output/python/examples.rst:15
msgid "Each frame in each step."
msgstr ""

#: ../../user/output/python/examples.rst:16
msgid "Each value of von Mises stress in each frame."
msgstr ""

#: ../../user/output/python/examples.rst:18
msgid "In addition, you can supply an optional assembly element set argument from the command line, in which case the script searches only the element set for the maximum value of von Mises stress."
msgstr ""

#: ../../user/output/python/examples.rst:20
msgid "The following illustrates how you can run the example script from the system prompt. The script will search the element set ALL ELEMENTS in the viewer tutorial output database for the maximum value of von Mises stress:"
msgstr ""

#: ../../user/output/python/examples.rst:28
msgid "If a command line argument is a String that contains spaces, some systems will interpret the String correctly only if it is enclosed in double quotation marks. For example, `\"ALL ELEMENTS\"`."
msgstr ""

#: ../../user/output/python/examples.rst:30
msgid "You can also run the example with only the **-help** parameter for a summary of the usage."
msgstr ""

#: ../../user/output/python/examples.rst:32
msgid "Use the following commands to retrieve the example script and the viewer tutorial output database:"
msgstr ""

#: ../../user/output/python/examples.rst:153
msgid "Creating an output database"
msgstr ""

#: ../../user/output/python/examples.rst:155
msgid "The following example illustrates how you can use the Abaqus Scripting Interface commands to do the following:"
msgstr ""

#: ../../user/output/python/examples.rst:157
msgid "Create a new output database."
msgstr ""

#: ../../user/output/python/examples.rst:158
msgid "Add model data."
msgstr ""

#: ../../user/output/python/examples.rst:159
msgid "Add field data."
msgstr ""

#: ../../user/output/python/examples.rst:160
msgid "Add history data."
msgstr ""

#: ../../user/output/python/examples.rst:161
msgid "Read history data."
msgstr ""

#: ../../user/output/python/examples.rst:162
msgid "Save the output database."
msgstr ""

#: ../../user/output/python/examples.rst:164
#: ../../user/output/python/examples.rst:435
#: ../../user/output/python/examples.rst:519
#: ../../user/output/python/examples.rst:567
#: ../../user/output/python/examples.rst:626
#: ../../user/output/python/examples.rst:693
#: ../../user/output/python/examples.rst:753
#: ../../user/output/python/examples.rst:871
msgid "Use the following command to retrieve the example script:"
msgstr ""

#: ../../user/output/python/examples.rst:424
msgid "An Abaqus Scripting Interface version of FPERT"
msgstr ""

#: ../../user/output/python/examples.rst:426
msgid "A Fortran program that reads the Abaqus results file and creates a deformed mesh from the original coordinate data and eigenvectors is described in `Creation of a perturbed mesh from original coordinate data and eigenvectors: FPERT <https://help.3ds.com/2021/English/DSSIMULIA_Established/SIMACAEEXARefMap/simaexa-c-fpert.htm?contextscope=all>`_. This example illustrates an Abaqus Scripting Interface script that reads an output database and performs similar calculations."
msgstr ""

#: ../../user/output/python/examples.rst:428
#: ../../user/output/python/examples.rst:686
msgid "The command line arguments provide the following:"
msgstr ""

#: ../../user/output/python/examples.rst:430
#: ../../user/output/python/examples.rst:688
msgid "**odbName**: The output database file name."
msgstr ""

#: ../../user/output/python/examples.rst:431
msgid "**modeList**: A list of eigenmodes to use in the perturbation."
msgstr ""

#: ../../user/output/python/examples.rst:432
msgid "**weightList**: The perturbation weighting factors."
msgstr ""

#: ../../user/output/python/examples.rst:433
msgid "**outNameUser**: The output file name (optional)."
msgstr ""

#: ../../user/output/python/examples.rst:508
msgid "Computations with FieldOutput objects"
msgstr ""

#: ../../user/output/python/examples.rst:510
msgid "This example illustrates how you can operate on FieldOutput objects and save the computed field to the output database. The example script does the following:"
msgstr ""

#: ../../user/output/python/examples.rst:512
msgid "Retrieves two specified fields from the output database."
msgstr ""

#: ../../user/output/python/examples.rst:514
msgid "Computes a new field by subtracting the fields that were retrieved."
msgstr ""

#: ../../user/output/python/examples.rst:515
msgid "Creates a new Step object in the output database."
msgstr ""

#: ../../user/output/python/examples.rst:516
msgid "Creates a new Frame object in the new step."
msgstr ""

#: ../../user/output/python/examples.rst:517
msgid "Creates a new FieldOutput object in the new frame."
msgstr ""

#: ../../user/output/python/examples.rst:518
msgid "Uses the `addData` method to add the computed field to the new FieldOutput object."
msgstr ""

#: ../../user/output/python/examples.rst:525
#: ../../user/output/python/examples.rst:573
#: ../../user/output/python/examples.rst:633
msgid "The fetch command also retrieves an input file that you can use to generate the output database that is read by the example script."
msgstr ""

#: ../../user/output/python/examples.rst:559
msgid "Computations with FieldValue objects"
msgstr ""

#: ../../user/output/python/examples.rst:561
msgid "This example illustrates how you can use the fieldValue operators to sum and average fieldValues in a region. The example script does the following:"
msgstr ""

#: ../../user/output/python/examples.rst:563
msgid "Retrieves the stress field for a specified region during the last step and frame of the output database."
msgstr ""

#: ../../user/output/python/examples.rst:564
msgid "Sums all the stress fieldValues and computes the average value."
msgstr ""

#: ../../user/output/python/examples.rst:565
msgid "For each component of stress, print the sum and the average stress."
msgstr ""

#: ../../user/output/python/examples.rst:615
msgid "Computations with HistoryOutput objects"
msgstr ""

#: ../../user/output/python/examples.rst:617
msgid "This example illustrates how you can use the historyOutput operators to compute the displacement magnitude from the components. The example script does the following:"
msgstr ""

#: ../../user/output/python/examples.rst:619
msgid "Retrieves the node of interest using a nodeSet."
msgstr ""

#: ../../user/output/python/examples.rst:620
msgid "Uses the node of interest to construct a HistoryPoint object."
msgstr ""

#: ../../user/output/python/examples.rst:621
msgid "Uses the HistoryPoint to retrieve the historyRegion."
msgstr ""

#: ../../user/output/python/examples.rst:622
msgid "Computes the displacement magnitude history from the displacement component HistoryOutput objects in the historyRegion."
msgstr ""

#: ../../user/output/python/examples.rst:623
msgid "Scales the displacement magnitude history using a predefined value."
msgstr ""

#: ../../user/output/python/examples.rst:624
msgid "Prints the displacement magnitude history."
msgstr ""

#: ../../user/output/python/examples.rst:677
msgid "Creating a new load combination from different load cases"
msgstr ""

#: ../../user/output/python/examples.rst:679
msgid "This example illustrates how you can use the frame operators to create a new load combination from existing load cases. The example script does the following:"
msgstr ""

#: ../../user/output/python/examples.rst:681
msgid "Retrieves the information describing the new load combination from the command line."
msgstr ""

#: ../../user/output/python/examples.rst:682
msgid "Retrieves the frames for each load case."
msgstr ""

#: ../../user/output/python/examples.rst:683
msgid "Computes the new stresses and displacements."
msgstr ""

#: ../../user/output/python/examples.rst:684
msgid "Saves data computed to the output database as a new load combination."
msgstr ""

#: ../../user/output/python/examples.rst:689
msgid "**stepName**: The name of the step containing the load cases."
msgstr ""

#: ../../user/output/python/examples.rst:690
msgid "**loadCaseNames**: The load case names."
msgstr ""

#: ../../user/output/python/examples.rst:691
msgid "**scaling**: The scale factors to apply to each load case."
msgstr ""

#: ../../user/output/python/examples.rst:699
#: ../../user/output/python/examples.rst:759
msgid "The fetch command also retrieves an input file that you can use to generate an output database that can be read by the example script."
msgstr ""

#: ../../user/output/python/examples.rst:743
msgid "Stress range for multiple load cases"
msgstr ""

#: ../../user/output/python/examples.rst:745
msgid "This example illustrates how you can use the envelope operations to compute the stress range over a number of load cases. The example script does the following:"
msgstr ""

#: ../../user/output/python/examples.rst:747
msgid "For each load case during a specified step, the script collects the S11 components of the stress tensor fields into a list of scalar fields."
msgstr ""

#: ../../user/output/python/examples.rst:748
msgid "Computes the maximum and minimum of the S11 stress component using the envelope calculations."
msgstr ""

#: ../../user/output/python/examples.rst:749
msgid "Computes the stress range using the maximum and minimum values of the stress component."
msgstr ""

#: ../../user/output/python/examples.rst:750
msgid "Creates a new frame in the step."
msgstr ""

#: ../../user/output/python/examples.rst:751
msgid "Writes the computed stress range into a new FieldOutput object in the new frame."
msgstr ""

#: ../../user/output/python/examples.rst:797
msgid "Transformation of field results"
msgstr ""

#: ../../user/output/python/examples.rst:799
msgid "This example illustrates how field results can be transformed to a different coordinate system. The example computes deviation of the nodal displacements with respect to a perfectly cylindrical displacement (cylinder bore distortion). The example does the following:"
msgstr ""

#: ../../user/output/python/examples.rst:801
msgid "Creates a cylindrical coordinate system."
msgstr ""

#: ../../user/output/python/examples.rst:802
msgid "Transforms the results to the new coordinate system."
msgstr ""

#: ../../user/output/python/examples.rst:803
msgid "Computes the average radial displacement."
msgstr ""

#: ../../user/output/python/examples.rst:804
msgid "Computes the distortion as the difference between radial displacement and the average radial displacement."
msgstr ""

#: ../../user/output/python/examples.rst:805
msgid "Saves the distortion field to the output database for viewing."
msgstr ""

#: ../../user/output/python/examples.rst:807
msgid "Use the following commands to retrieve the example script and an input file to create a sample output database:"
msgstr ""

#: ../../user/output/python/examples.rst:864
msgid "Viewing the analysis of a meshed beam cross-section"
msgstr ""

#: ../../user/output/python/examples.rst:866
msgid "This example illustrates how you can view the results of a meshed beam cross-section analysis that was generated using Timoshenko beams, as described in `Meshed beam cross-sections <https://help.3ds.com/2021/English/DSSIMULIA_Established/SIMACAEANLRefMap/simaanl-c-meshedsection.htm?contextscope=all>`_. Before you execute the example script, you must run two analyses that create the following output database files:"
msgstr ""

#: ../../user/output/python/examples.rst:868
msgid "An output database generated by the two-dimensional cross-section analysis. The script reads cross-section data, including the out-of-plane warping function, from this output database."
msgstr ""

#: ../../user/output/python/examples.rst:869
msgid "An output database generated by the beam analysis. The script reads generalized section strains (SE) from this output database."
msgstr ""

#: ../../user/output/python/examples.rst:877
msgid "You must run the script from Abaqus/CAE by selecting **File -> Run Script** from the main menu. The script uses `getInputs` to display a dialog box that prompts you for the name of the output databases generated by the two-dimensional cross-section analysis and by the beam analysis. The names are case-insensitive, and you can omit the `.odb` file suffix. The files must be in the local directory. The dialog box also prompts you for the following:"
msgstr ""

#: ../../user/output/python/examples.rst:879
msgid "The name of the step"
msgstr ""

#: ../../user/output/python/examples.rst:880
msgid "The increment or mode number (for a frequency analysis)"
msgstr ""

#: ../../user/output/python/examples.rst:881
msgid "The name of the load case (if any)"
msgstr ""

#: ../../user/output/python/examples.rst:882
msgid "The name of the part instance"
msgstr ""

#: ../../user/output/python/examples.rst:883
msgid "The element number"
msgstr ""

#: ../../user/output/python/examples.rst:884
msgid "The integration point number"
msgstr ""

#: ../../user/output/python/examples.rst:886
msgid "If you do not enter a value in a field, the script looks in the beam analysis output database for possible values. The script then enters a default value in the dialog box and displays information about the range of possible values in the Abaqus/CAE message area. You can leave the load case field blank if the analysis did not include load cases. The script does not continue until all the values in the dialog box are acceptable. The same values are written to a file called `compositeBeam_values.dat` in the local directory, and these values appear as defaults in the dialog box the next time you run the example script."
msgstr ""

#: ../../user/output/python/examples.rst:888
msgid "After the `getInputs` method returns acceptable values, the script reads the two output databases and writes the generated data back to the output database created by the two-dimensional cross-section analysis. If the beam cross-section mesh consists of 1-DOF warping elements, the script then displays an undeformed contour plot of S11 and uses the getInputs method again to display a dialog box with a list of the available stress and strain components (S11, S22, S33, E11, E22, and E33). If the beam cross-section mesh consists of 3-DOF warping elements, the deformed contour plot is displayed, and the full three-dimensional stress and strain components (S11, S22, S33, S12, S13, S23, E11, E22, E33, E12, E13, and E23) are available. The deformation represents the in-plane and out-of-plane warping. Click **OK** in this dialog box to cycle through the available components. Click Cancel to end the script. You can also select the component to display by starting the Visualization module and selecting `Result -> Field Output` from the main menu."
msgstr ""

#: ../../user/output/python/examples.rst:890
msgid "The example script writes new stress and strain fields. The script must provide a unique name for the generated field output because each of these fields is generated for a specific beam analysis output database and for a specific part instance, step, frame, element, and integration point. The script constructs this unique name as follows:"
msgstr ""

#: ../../user/output/python/examples.rst:892
msgid "All contour stress and strain fields for a specific beam analysis output database are written to a new frame, where the description of the frame is the name of the output database. For example, for a beam analysis output database called `beam_run17.odb`, the frame description is **Beam ODB: beam_run17**."
msgstr ""

#: ../../user/output/python/examples.rst:893
msgid "The field name is assembled from a concatenation of the **step name**, **frame index**, **instance name**, **element**, and **integration point**, followed by E or S. For example, `Step-1_4_LINEARMESHED_12_1_E`. Any spaces in a step or instance name are replaced by underscores."
msgstr ""

#: ../../user/output/python/examples.rst:895
msgid "You can run the script many times; for example, to create contour data for a particular step, increment, and integration point along each element of the beam. In this case you would also use **Result -> Field Output** to select which element to display."
msgstr ""

#: ../../user/output/python/examples.rst:897
msgid "The contour data generated by the example script are written back to the output database that was originally created by the two-dimensional, cross-section analysis. If you want to preserve this database in its original form, you must save a copy before you run the example script."
msgstr ""

#: ../../user/output/python/examples.rst:900
msgid "Using infinite elements to compute and view the results of an acoustic far-field analysis"
msgstr ""

#: ../../user/output/python/examples.rst:902
msgid "This example illustrates how you can use the Abaqus Scripting Interface to compute acoustic far-field pressure values from infinite element sets and project the results onto a spherical surface for visualization purposes. This script is designed primarily to compute the acoustic far-field pressure using a layer of infinite acoustic elements that forms a full or partial spherical surface. The script extends the acoustic analysis functionality within Abaqus/Standard, as described in `Acoustic, shock, and coupled acoustic-structural analysis <https://help.3ds.com/2021/English/DSSIMULIA_Established/SIMACAEANLRefMap/simaanl-c-acoustic.htm?contextscope=all>`_ and `Infinite elements <https://help.3ds.com/2021/English/DSSIMULIA_Established/SIMACAEELMRefMap/simaelm-c-infinite.htm?contextscope=all>`_. The script writes the acoustic far-field pressure values to an output database, and you can use Abaqus/CAE to view the far-field results."
msgstr ""

#: ../../user/output/python/examples.rst:904
msgid "The far-field pressure is defined as"
msgstr ""

#: ../../user/output/python/examples.rst:906
msgid "\\lim _{r \\rightarrow \\infty} p(r)=\\lim _{r \\rightarrow \\infty}\\left(\\frac{1}{k r} e^{-i k r} p_{F A R}\\right)\n"
"\n"
""
msgstr ""

#: ../../user/output/python/examples.rst:908
msgid "where :math:`p(r)` is the acoustic pressure at a distance :math:`r` from the reference point, :math:`k` is the wave number, and :math:`p_{F A R}` is the acoustic far-field pressure. The acoustic pressure decibel value is defined as"
msgstr ""

#: ../../user/output/python/examples.rst:910
msgid "&\\mathrm{PORdB}=20 \\log _{10}\\left(\\frac{p_{R M S}}{d B R e f}\\right) \\\\\n"
"&p_{R M S}=\\left(\\frac{|\\mathrm{POR}|}{\\sqrt{2}}\\right)"
msgstr ""

#: ../../user/output/python/examples.rst:915
msgid "where :math:`|\\mathrm{POR}|` is the magnitude of the acoustic pressure at a point, :math:`p_{R M S}` is the root mean square acoustic pressure, and :math:`d B R e f` is the decibel reference value given as user input. The far-field pressure decibel value is defined in the same manner as :math:`\\operatorname{POR} d B`, using the same reference value :math:`d B R e f)`"
msgstr ""

#: ../../user/output/python/examples.rst:918
msgid "If :math:`d B R e f=20 \\mu P a` (in SI units), POR :math:`d B` corresponds to :math:`d B S P L`"
msgstr ""

#: ../../user/output/python/examples.rst:920
msgid "The script also calculates the far-field acoustic intensity, which is defined as"
msgstr ""

#: ../../user/output/python/examples.rst:922
msgid "\\mathrm{INTEN}_{\\mathrm{FAR}}=\\left(\\frac{p_{R M S F A R}^{2}}{\\rho\\times c}\\right)\n"
"\n"
""
msgstr ""

#: ../../user/output/python/examples.rst:924
msgid "where :math:`p_{R M S F A R}` is the far-field rms pressure, :math:`\\rho` is the fluid density, and :math:`c` is the speed of sound in the medium."
msgstr ""

#: ../../user/output/python/examples.rst:926
msgid "Before you execute the script, you must run a direct-solution, steady-state dynamics acoustics analysis that includes three-dimensional acoustic infinite elements (ACIN3D3, ACIN3D4, ACIN3D6, and ACIN3D8). In addition, the output database must contain results for the following output variables:"
msgstr ""

#: ../../user/output/python/examples.rst:928
msgid "INFN, the acoustic infinite element normal vector."
msgstr ""

#: ../../user/output/python/examples.rst:929
msgid "INFR, the acoustic infinite element “radius,” used in the coordinate map for these elements."
msgstr ""

#: ../../user/output/python/examples.rst:930
msgid "PINF, the acoustic infinite element pressure coefficients."
msgstr ""

#: ../../user/output/python/examples.rst:932
msgid "Use the following command to retrieve the script:"
msgstr ""

#: ../../user/output/python/examples.rst:938
msgid "Enter the Visualization module, and display the output database in the current viewport. Run the script by selecting **File -> Run Script** from the main menu bar."
msgstr ""

#: ../../user/output/python/examples.rst:940
msgid "The script uses getInputs to display a dialog box that prompts you for the following information:"
msgstr ""

#: ../../user/output/python/examples.rst:942
msgid "The name of the element set containing the infinite elements (the name is case sensitive). By default, the script locates all the infinite elements in the model and uses them to create the spherical surface. If the script cannot find the specified element set in the output database, it displays a list of the available element sets in the message area."
msgstr ""

#: ../../user/output/python/examples.rst:944
msgid "The radius of the sphere (required). The script asks you to enter a new value if the sphere with this radius does not intersect any of the selected infinite elements."
msgstr ""

#: ../../user/output/python/examples.rst:946
msgid "The coordinates of the center of the sphere. By default, the script uses (0,0,0)."
msgstr ""

#: ../../user/output/python/examples.rst:948
msgid "The analysis steps. You can enter one of the following:"
msgstr ""

#: ../../user/output/python/examples.rst:950
msgid "An Int"
msgstr ""

#: ../../user/output/python/examples.rst:951
msgid "A comma-separated list of Ints"
msgstr ""

#: ../../user/output/python/examples.rst:952
msgid "A range; for example, 1:20"
msgstr ""

#: ../../user/output/python/examples.rst:954
msgid "You can also enter a combination of Ints and ranges; for example, 4,5,10:20,30. By default, the script reads data from all the steps. The script ignores any steps that do not perform a direct-solution, steady-state dynamics acoustics analysis or that have no results."
msgstr ""

#: ../../user/output/python/examples.rst:956
msgid "The frequencies for which output should be generated (Hz). You can enter a Float, a list of Floats, or a range. By default, the script generates output for all the frequencies in the original output database."
msgstr ""

#: ../../user/output/python/examples.rst:958
msgid "A decibel reference value (required)."
msgstr ""

#: ../../user/output/python/examples.rst:960
msgid "The name of the part instance to create (required). The script appends this name to the name of the instance containing the infinite elements being used."
msgstr ""

#: ../../user/output/python/examples.rst:962
msgid "The speed of sound (required)."
msgstr ""

#: ../../user/output/python/examples.rst:964
msgid "The fluid density (required)"
msgstr ""

#: ../../user/output/python/examples.rst:966
msgid "Whether to write data to the original output database. By default, the script writes to an output database called `current-odb-name_acvis.odb`."
msgstr ""

#: ../../user/output/python/examples.rst:968
msgid "After the `getInputs` method returns acceptable values, the script processes the elements in the specified element sets. The visualization sphere is then determined using the specified radius and center. For each element in the infinite element sets, the script creates a corresponding membrane element such that the new element is a projection of the old element onto the surface of the sphere. The projection uses the infinite element reference point and the internally calculated infinite direction normal (INFN) at each node of the element."
msgstr ""

#: ../../user/output/python/examples.rst:970
msgid "Once the new display elements have been created, the script writes results at the nodes in the set. The following output results are written back to the output database:"
msgstr ""

#: ../../user/output/python/examples.rst:972
msgid "POR, the acoustic pressure."
msgstr ""

#: ../../user/output/python/examples.rst:973
msgid "PORdB, the acoustic pressure decibel value. If the reference value used is :math:`2\\times10^{-5}` Pa, the PFARdB corresponds to dB SPL."
msgstr ""

#: ../../user/output/python/examples.rst:974
msgid "PFAR, the acoustic far-field pressure."
msgstr ""

#: ../../user/output/python/examples.rst:975
msgid "PFARdB, the far-field pressure decibel value."
msgstr ""

#: ../../user/output/python/examples.rst:976
msgid "INTEN_FAR, the far-field acoustic intensity."
msgstr ""

#: ../../user/output/python/examples.rst:978
msgid "To create the output at each node, the script first determines the point at which the node ray intersects the sphere. Using the distance from the reference point to the intersection point and the element shape functions, the required output variables are calculated at the intersection point."
msgstr ""

#: ../../user/output/python/examples.rst:980
msgid "After the script has finished writing data, it opens the output database containing the new data. For comparison, the original instance is displayed along with the new instance, but results are available only for the new instance. However, if you chose to write the results back to the original output database, the original instance and the new instance along with the original results and the new results can be displayed side-by-side. The script displays any error, warning, or information messages in the message area."
msgstr ""

#: ../../user/output/python/examples.rst:982
msgid "You can run the script more than once and continue writing data to the same output database. For example, you can run the script several times to look at the far-field pressures at various points in space, and results on several spheres will be written to the output database."
msgstr ""

#: ../../user/output/python/examples.rst:984
msgid "To see how the script operates on a single triangular-element model, use the following command to retrieve the input file:"
msgstr ""

#: ../../user/output/python/examples.rst:990
msgid "Use the following command to create the corresponding output database:"
msgstr ""

#: ../../user/output/python/examples.rst:996
msgid "The results from running the script twice using the single triangular-element model, changing the radius of the sphere, and writing the data back to the original output database are shown in :numref:`cmd-odb-api-acousticviz`"
msgstr ""

#: ../../user/output/python/examples.rst:1003
msgid "Displaying the acoustic pressure on several spheres."
msgstr ""

#: ../../user/output/python/examples.rst:1005
msgid "This model simulates the response of a sphere in \"breathing\" mode (a uniform radial expansion/compression mode). The model consists of one triangular ACIN3D3 element. Each node of the element is placed on a coordinate axis at a distance of :math:`1.0` from the origin that serves as the reference point for the infinite element. The acoustic material properties do not have physical significance; the values used are for convenience only. The loading consists of applying an in-phase pressure boundary condition to all the nodes. Under this loading and geometry, the model behaves as a spherical source (an acoustic monopole) radiating in the radial direction only. The acoustic pressure, :math:`p`, and the acoustic far-field pressure, :math:`p_{F A R}`, at a distance :math:`r` from the center of the sphere are"
msgstr ""

#: ../../user/output/python/examples.rst:1007
msgid "p(r)=p_{0}\\left(\\frac{r_{0}}{r}\\right) e^{-i k\\left(r-r_{0}\\right)}\n"
"\n"
""
msgstr ""

#: ../../user/output/python/examples.rst:1009
#: ../../user/output/python/examples.rst:1019
msgid "and"
msgstr ""

#: ../../user/output/python/examples.rst:1011
msgid "p_{F A R}(r)=p_{0} r_{0} k e^{i k r_{0}}\n"
"\n"
""
msgstr ""

#: ../../user/output/python/examples.rst:1013
msgid "where :math:`p_{0}` is the known acoustic pressure at some reference distance :math:`r_{0}` and :math:`k` is the wave number."
msgstr ""

#: ../../user/output/python/examples.rst:1015
msgid "For this single-element example, you should enter a value of :math:`1.0` for the speed of sound; thus, :math:`k=2 \\pi f`, where :math:`f` is the frequency in :math:`\\mathrm{Hz}`. :math:`r_{0}` in this model is 1 , and :math:`p_{0}` is :math:`0.001`. The equations for the acoustic pressure, :math:`p`, and the acoustic far-field pressure, :math:`p_{F A R}`, reduce to"
msgstr ""

#: ../../user/output/python/examples.rst:1017
msgid "p(r)=\\frac{0.001}{r} e^{-i k(r-1)}\n"
"\n"
""
msgstr ""

#: ../../user/output/python/examples.rst:1021
msgid "p_{F A R}(r)=0.001 k e^{i k}.\n"
"\n"
""
msgstr ""

#: ../../user/output/python/examples.rst:1024
msgid "An Abaqus Scripting Interface version of FELBOW"
msgstr ""

#: ../../user/output/python/examples.rst:1026
msgid "This example illustrates the use of an Abaqus Scripting Interface script to read selected element integration point records from an output database and to postprocess the elbow element results. The script creates X–Y data that can be plotted with the X–Y plotting capability in Abaqus/CAE. The script performs the same function as the Fortran program described in `Creation of a data file to facilitate the postprocessing of elbow element results: FELBOW <https://help.3ds.com/2021/English/DSSIMULIA_Established/SIMACAEEXARefMap/simaexa-c-felbow.htm?contextscope=all>`_."
msgstr ""

#: ../../user/output/python/examples.rst:1028
msgid "The script reads integration point data for elbow elements from an output database to visualize one of the following:"
msgstr ""

#: ../../user/output/python/examples.rst:1030
msgid "Variation of an output variable around the circumference of a given elbow element, or"
msgstr ""

#: ../../user/output/python/examples.rst:1031
msgid "Ovalization of a given elbow element."
msgstr ""

#: ../../user/output/python/examples.rst:1033
msgid "The script creates either an ASCII file containing **X - Y** data or a new output database file that can be viewed using Abaqus/CAE."
msgstr ""

#: ../../user/output/python/examples.rst:1035
msgid "To use option 2, you must ensure that the integration point coordinates (COORD) are written to the output database. For option 1 the **X** - data are data for the distance around the circumference of the elbow element, measured along the middle surface, and the **Y** - data are data for the output variable. For option 2 the **X - Y** data are the current coordinates of the middle-surface integration points around the circumference of the elbow element, projected to a local coordinate system in the plane of the deformed cross-section. The origin of the local system coincides with the center of the cross-section; the plane of the deformed cross-section is defined as the plane that contains the center of the cross-section."
msgstr ""

#: ../../user/output/python/examples.rst:1037
msgid "You should specify the name of the output database during program execution. The script prompts for more information, depending on the option that was chosen; this information includes the following:"
msgstr ""

#: ../../user/output/python/examples.rst:1039
msgid "Your choice for storing results (ASCII file or a new output database)"
msgstr ""

#: ../../user/output/python/examples.rst:1040
msgid "File name based on the above choice"
msgstr ""

#: ../../user/output/python/examples.rst:1041
msgid "The postprocessing option (1 or 2)"
msgstr ""

#: ../../user/output/python/examples.rst:1042
msgid "The part name"
msgstr ""

#: ../../user/output/python/examples.rst:1043
msgid "The step name"
msgstr ""

#: ../../user/output/python/examples.rst:1044
msgid "The frame number"
msgstr ""

#: ../../user/output/python/examples.rst:1045
msgid "The element output variable (option 1 only)"
msgstr ""

#: ../../user/output/python/examples.rst:1046
msgid "The component of the variable (option 1 only)"
msgstr ""

#: ../../user/output/python/examples.rst:1047
msgid "The section point number (option 1 only)"
msgstr ""

#: ../../user/output/python/examples.rst:1048
msgid "The element number or element set name"
msgstr ""

#: ../../user/output/python/examples.rst:1050
msgid "Before executing the script, run an analysis that creates an output database file containing the appropriate output. This analysis includes, for example, output for the elements and the integration point coordinates of the elements. Execute the script using the following command:"
msgstr ""

#: ../../user/output/python/examples.rst:1056
msgid "The script prompts for other information, such as the desired postprocessing option, part name, etc. The script processes the data and produces a text file or a new output database that contains the information required to visualize the elbow element results."
msgstr ""

#: ../../user/output/python/examples.rst:1058
msgid "`Elastic-plastic collapse of a thin-walled elbow under in-plane bending and internal pressure <https://help.3ds.com/2021/English/DSSIMULIA_Established/SIMACAEEXARefMap/simaexa-c-elbowcollapse.htm?contextscope=all>`_ contains several figures that can be created with the aid of this program."
msgstr ""
