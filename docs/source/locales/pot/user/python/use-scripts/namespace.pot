# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, WANG Hailin
# This file is distributed under the same license as the abqpy package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: abqpy 2016\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-10-30 00:31+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../user/python/use-scripts/namespace.md:1
msgid "Namespace"
msgstr ""

#: ../../user/python/use-scripts/namespace.md:3
msgid "Namespace is an important concept for the Abaqus Scripting Interface programmer. A namespace can be thought of as a program execution environment, and namespaces are independent of each other. Namespaces prevent conflict between variable names. You can use the same variable name to refer to different objects in different name spaces. {numref}`acl-all-schematic-nls-2` illustrates how commands interact with the Abaqus/CAE kernel."
msgstr ""

#: ../../user/python/use-scripts/namespace.md:11
msgid "The Abaqus Scripting Interface and the Abaqus/CAE kernel."
msgstr ""

#: ../../user/python/use-scripts/namespace.md:14
msgid "Abaqus Scripting Interface commands are issued to the Python interpreter from either the GUI, the command line interface, or a script. Abaqus/CAE executes these commands in one of two namespaces."
msgstr ""

#: ../../user/python/use-scripts/namespace.md:16
msgid "**Script namespace**"
msgstr ""

#: ../../user/python/use-scripts/namespace.md:18
msgid "Abaqus Scripting Interface commands issued from scripts and from the command line interface are executed in the script namespace. Commands issued from **File -> Run Script** are also executed in the script namespace. For example, if you enter the following statement from the command line interface to create a viewport:"
msgstr ""

#: ../../user/python/use-scripts/namespace.md:25
msgid "the variable myViewport exists only in the script namespace. The name of the script namespace is main."
msgstr ""

#: ../../user/python/use-scripts/namespace.md:27
msgid "**Journal namespace**"
msgstr ""

#: ../../user/python/use-scripts/namespace.md:29
msgid "Abaqus Scripting Interface commands issued by the GUI are executed in the journal namespace. For example, if you use the GUI to partition an edge, Abaqus/CAE writes the following statements to the replay file, abaqus.rpy:"
msgstr ""

#: ../../user/python/use-scripts/namespace.md:38
msgid "The variables defined in the replay file (p1, e, and edges, in the above example) exist only in the journal namespace. Abaqus/CAE issues an exception if you attempt to refer to one of these variables from the script namespace. For example, the following statement was issued from the command line interface and tries to partition the same edge:"
msgstr ""

#: ../../user/python/use-scripts/namespace.md:45
msgid "The name of the journal namespace is journaling."
msgstr ""

#: ../../user/python/use-scripts/namespace.md:47
msgid "The statement `from abaqus import *` described in Executing scripts imports the mdb variable into the script namespace. You can then use the mdb variable in your scripts to access the objects in the object model. Although variables in one namespace are not visible to the other namespace, the object repositories are now available in both. As a result, an object created in one namespace can still be referred to in another namespace if you use its full path (`mdb.models['Model A']...`) and its repository key."
msgstr ""

#: ../../user/python/use-scripts/namespace.md:49
msgid "For example, although the variable `p1` in the above statement cannot be accessed from the script namespace, you can still use the command line interface to access the part to which `p1` referred."
msgstr ""

#: ../../user/python/use-scripts/namespace.md:55
msgid "The model and part repositories are available in both the journal and script namespaces. You can also create your own variable `p1` from the command line interface or from a script."
msgstr ""

#: ../../user/python/use-scripts/namespace.md:61
msgid "The variable `p1` in the script namespace is independent of the variable p1 in the journal namespace."
msgstr ""
