# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, WANG Hailin
# This file is distributed under the same license as the abqpy package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: abqpy 2017\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-10-16 00:35+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../envvars.rst:3
msgid "System Environment Variables"
msgstr ""

#: ../../envvars.rst:6
msgid "``ABAQUS_BAT_PATH``"
msgstr ""

#: ../../envvars.rst:8
msgid "In order to use Abaqus command to execute the Python script and submit the job, you need to tell `abqpy` where the Abaqus command located. Usually, Abaqus command locates in a directory like this:"
msgstr ""

#: ../../envvars.rst:15
msgid "You can add the directory ``C:/SIMULIA/Commands`` to the system environment variable ``Path``, or you can create a new system variable named ``ABAQUS_BAT_PATH``, and set the value to the file path of the Abaqus command, i.e., ``C:/SIMULIA/Commands/abaqus.bat``."
msgstr ""

#: ../../envvars.rst:20
msgid "``ABAQUS_COMMAND_OPTIONS``"
msgstr ""

#: ../../envvars.rst:22
msgid "The default execution procedure invoked by `abqpy` inside the Python interpreter environment where it is installed is to run one of the two following command lines:"
msgstr ""

#: ../../envvars.rst:25
msgid "When there is a ``import abaqus`` or ``from abaqus import ...`` statement:"
msgstr ""

#: ../../envvars.rst:31
msgid "When there is a ``import odbAccess`` or ``from odbAccess import ...`` statement:"
msgstr ""

#: ../../envvars.rst:37
msgid "However, there are other execution procedures that can be run with the `abaqus` command and also another options that could be passed to these commands. To define these procedures and options you can create a new system environment variable named ``ABAQUS_COMMAND_OPTIONS``, and set a **dictionary** to this variable with the options you want to use. The values of the dictionary keys would be booleans or strings, e.g.: ``{'noGUI':True, 'database':'file.odb'}``"
msgstr ""

#: ../../envvars.rst:44
msgid "The possible options are:"
msgstr ""

#: ../../envvars.rst:46
msgid "Using ``abaqus cae`` command line options (import ``abaqus`` module):"
msgstr ""

#: ../../envvars.rst:66
msgid "Using ``abaqus python`` command line options (import ``odbAccess`` module):"
msgstr ""

#: ../../envvars.rst:75
msgid "One advantage in using this alternative is to change the options at run time inside the code."
msgstr ""

#: ../../envvars.rst:78
msgid "Example"
msgstr ""

#: ../../envvars.rst:80
msgid "The snippet bellow changes the default procedure options before calling abaqus cae command procedure, at run time."
msgstr ""

#: ../../envvars.rst:91
msgid "In this specific case, the procedure will use the graphical user interface (GUI mode) and load a *database* file, i.e., it will run the following command line."
msgstr ""
