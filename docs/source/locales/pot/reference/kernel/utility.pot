# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, WANG Hailin
# This file is distributed under the same license as the abqpy package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: abqpy 2022\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-12-18 00:21+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../reference/kernel/utility.md:1
msgid "Utility and View"
msgstr ""

#: ../../reference/kernel/utility.md:3
msgid "Utility commands are used to do the following:"
msgstr ""

#: ../../reference/kernel/utility.md:5
msgid "Create SymbolicConstant and Boolean objects."
msgstr ""

#: ../../reference/kernel/utility.md:6
msgid "Change the name of a key to a Repository object."
msgstr ""

#: ../../reference/kernel/utility.md:7
msgid "Control the use of deprecated commands."
msgstr ""

#: ../../reference/kernel/utility.md:8
msgid "Request input from the user."
msgstr ""

#: ../../reference/kernel/utility.md:9
msgid "Display status information."
msgstr ""

#: ../../reference/kernel/utility.md:10
msgid "Execute Python commands or functions."
msgstr ""

#: ../../reference/kernel/utility.md:11
msgid "Register a callback that will be invoked when certain Abaqus Scripting Interface commands are about to be executed."
msgstr ""

#: ../../reference/kernel/utility.md:12
msgid "Register a callback that will be invoked when certain Abaqus Scripting Interface objects are about to be deleted."
msgstr ""

#: ../../reference/kernel/utility.md:13
msgid "Upgrade Abaqus kernel or GUI scripts from one release of Abaqus to a later release."
msgstr ""

#: ../../reference/kernel/utility.md:15
msgid "View commands are used to transform three-dimensional views stored in Session and Viewport objects to the screen. (See Session object and Viewport object.)"
msgstr ""

#: ../../reference/kernel/utility.md:17
msgid "Other Classes"
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/AbaqusBoolean.py:docstring of abaqus.UtilityAndView.AbaqusBoolean.AbaqusBoolean:1
msgid "Bases: :py:class:`int`"
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/AbaqusBoolean.py:docstring of abaqus.UtilityAndView.AbaqusBoolean.AbaqusBoolean:1
msgid "The AbaqusBoolean object is used in a similar way to the SymbolicConstant object. If you pass an AbaqusBoolean object to the Python repr() function, the function returns the text without quotes. In effect, the text is the variable that, by convention, refers to the AbaqusBoolean object. An AbaqusBoolean object has a value of 0 or 1, and an AbaqusBoolean object can be tested in an if statement. You can use an AbaqusBoolean object as an argument to a method in place of 1 or 0. Conversely, you can pass a 0 or a 1 to an Abaqus Scripting Interface method that expects a Boolean argument, and the 0 or 1 will be coerced to the appropriate AbaqusBoolean value. There are only two possible values for an AbaqusBoolean object: 1 and 0. You can import both values from the symbolicConstants module or from the abaqus module. Abaqus Scripting Interface commands that expect an AbaqusBoolean object will also accept a Python bool (True, False), or a Python int (1, 0)."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/AbaqusBoolean.py:docstring of abaqus.UtilityAndView.AbaqusBoolean.AbaqusBoolean:16
#: ../../../../src/abaqus/UtilityAndView/BackwardCompatibility.py:docstring of abaqus.UtilityAndView.BackwardCompatibility.BackwardCompatibility:37
#: ../../../../src/abaqus/UtilityAndView/SymbolicConstant.py:docstring of abaqus.UtilityAndView.SymbolicConstant.SymbolicConstant:15
#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View:10
msgid "This object can be accessed by::"
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/AbaqusBoolean.py:docstring of abaqus.UtilityAndView.AbaqusBoolean.AbaqusBoolean:22
msgid "Check `AbaqusBoolean on help.3ds.com/2022 <https://help.3ds.com/2022/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-abaqusbooleanpyc.htm?contextscope=all>`__."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/AbaqusBoolean.py:docstring of abaqus.UtilityAndView.AbaqusBoolean.AbaqusBoolean:1
#: ../../../../src/abaqus/UtilityAndView/BackwardCompatibility.py:docstring of abaqus.UtilityAndView.BackwardCompatibility.BackwardCompatibility:1
#: ../../../../src/abaqus/UtilityAndView/Repository.py:docstring of abaqus.UtilityAndView.Repository.Repository:1
#: ../../../../src/abaqus/UtilityAndView/SymbolicConstant.py:docstring of abaqus.UtilityAndView.SymbolicConstant.SymbolicConstant:1
#: ../../../../src/abaqus/UtilityAndView/SymbolicConstant.py:docstring of abaqus.UtilityAndView.SymbolicConstant.abaqusConstants:1
#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View:1
msgid "Member Details:"
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/AbaqusBoolean.py:docstring of abaqus.UtilityAndView.AbaqusBoolean.AbaqusBoolean.__init__:1
msgid "The AbaqusBoolean method creates an AbaqusBoolean object."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/AbaqusBoolean.py:docstring of abaqus.UtilityAndView.AbaqusBoolean.AbaqusBoolean.__init__:4
#: ../../../../src/abaqus/UtilityAndView/Callback.py:docstring of abaqus.UtilityAndView.Callback.addImportCallback:6
#: ../../../../src/abaqus/UtilityAndView/Callback.py:docstring of abaqus.UtilityAndView.Callback.removeImportCallback:4
#: ../../../../src/abaqus/UtilityAndView/Customization.py:docstring of abaqus.UtilityAndView.Customization.journalMethodCall:18
#: ../../../../src/abaqus/UtilityAndView/Delete.py:docstring of abaqus.UtilityAndView.Delete.deleteObjectCallback:8
#: ../../../../src/abaqus/UtilityAndView/Method.py:docstring of abaqus.UtilityAndView.Method.addCallback:5
#: ../../../../src/abaqus/UtilityAndView/Method.py:docstring of abaqus.UtilityAndView.Method.removeCallback:5
#: ../../../../src/abaqus/UtilityAndView/SymbolicConstant.py:docstring of abaqus.UtilityAndView.SymbolicConstant.SymbolicConstant.__init__:4
#: ../../../../src/abaqus/UtilityAndView/Upgrade.py:docstring of abaqus.UtilityAndView.Upgrade.upgradeScript:9
#: ../../../../src/abaqus/UtilityAndView/User.py:docstring of abaqus.UtilityAndView.User.getWarningReply:16
#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View.__init__:6
msgid "This function can be accessed by::"
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/AbaqusBoolean.py:docstring of abaqus.UtilityAndView.AbaqusBoolean.AbaqusBoolean.__init__:9
msgid "Check `AbaqusBoolean.__init__ on help.3ds.com/2022 <https://help.3ds.com/2022/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-abaqusbooleanpyc.htm?contextscope=all#simaker-abaqusboolean__init__pyc>`__."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/AbaqusBoolean.py:docstring of abaqus.UtilityAndView.AbaqusBoolean.AbaqusBoolean.__init__:0
#: ../../../../src/abaqus/UtilityAndView/BackwardCompatibility.py:docstring of abaqus.UtilityAndView.BackwardCompatibility.BackwardCompatibility.setValues:0
#: ../../../../src/abaqus/UtilityAndView/Callback.py:docstring of abaqus.UtilityAndView.Callback.addImportCallback:0
#: ../../../../src/abaqus/UtilityAndView/Callback.py:docstring of abaqus.UtilityAndView.Callback.removeImportCallback:0
#: ../../../../src/abaqus/UtilityAndView/Customization.py:docstring of abaqus.UtilityAndView.Customization.journalMethodCall:0
#: ../../../../src/abaqus/UtilityAndView/Delete.py:docstring of abaqus.UtilityAndView.Delete.deleteObjectCallback:0
#: ../../../../src/abaqus/UtilityAndView/Method.py:docstring of abaqus.UtilityAndView.Method.addCallback:0
#: ../../../../src/abaqus/UtilityAndView/Method.py:docstring of abaqus.UtilityAndView.Method.removeCallback:0
#: ../../../../src/abaqus/UtilityAndView/Repository.py:docstring of abaqus.UtilityAndView.Repository.Repository.changeKey:0
#: ../../../../src/abaqus/UtilityAndView/SymbolicConstant.py:docstring of abaqus.UtilityAndView.SymbolicConstant.SymbolicConstant.__init__:0
#: ../../../../src/abaqus/UtilityAndView/Upgrade.py:docstring of abaqus.UtilityAndView.Upgrade.upgradeScript:0
#: ../../../../src/abaqus/UtilityAndView/User.py:docstring of abaqus.UtilityAndView.User.getWarningReply:0
#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View.__init__:0
#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View.fitView:0
#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View.next:0
#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View.pan:0
#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View.previous:0
#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View.rotate:0
#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View.setLayerTransform:0
#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View.setProjection:0
#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View.setRotationCenter:0
#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View.setValues:0
#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View.setViewpoint:0
#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View.zoom:0
#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View.zoomRectangle:0
msgid "Parameters"
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/AbaqusBoolean.py:docstring of abaqus.UtilityAndView.AbaqusBoolean.AbaqusBoolean.__init__:12
msgid "An Int specifying whether the AbaqusBoolean object will test true or false. Possible values are 0 and 1, which will create the AbaqusBoolean method OFF and ON, respectively."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/AbaqusBoolean.py:docstring of abaqus.UtilityAndView.AbaqusBoolean.AbaqusBoolean.__init__:0
#: ../../../../src/abaqus/UtilityAndView/BackwardCompatibility.py:docstring of abaqus.UtilityAndView.BackwardCompatibility.BackwardCompatibility.getDeprecatedArgsUsed:0
#: ../../../../src/abaqus/UtilityAndView/BackwardCompatibility.py:docstring of abaqus.UtilityAndView.BackwardCompatibility.BackwardCompatibility.getDeprecatedMethodsUsed:0
#: ../../../../src/abaqus/UtilityAndView/SymbolicConstant.py:docstring of abaqus.UtilityAndView.SymbolicConstant.SymbolicConstant.__init__:0
#: ../../../../src/abaqus/UtilityAndView/Upgrade.py:docstring of abaqus.UtilityAndView.Upgrade.upgradeScript:0
#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View.__init__:0
msgid "Returns"
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/AbaqusBoolean.py:docstring of abaqus.UtilityAndView.AbaqusBoolean.AbaqusBoolean.__init__:15
msgid "An AbaqusBoolean object."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/AbaqusBoolean.py:docstring of abaqus.UtilityAndView.AbaqusBoolean.AbaqusBoolean.__init__:0
#: ../../../../src/abaqus/UtilityAndView/BackwardCompatibility.py:docstring of abaqus.UtilityAndView.BackwardCompatibility.BackwardCompatibility.getDeprecatedArgsUsed:0
#: ../../../../src/abaqus/UtilityAndView/BackwardCompatibility.py:docstring of abaqus.UtilityAndView.BackwardCompatibility.BackwardCompatibility.getDeprecatedMethodsUsed:0
#: ../../../../src/abaqus/UtilityAndView/SymbolicConstant.py:docstring of abaqus.UtilityAndView.SymbolicConstant.SymbolicConstant.__init__:0
#: ../../../../src/abaqus/UtilityAndView/Upgrade.py:docstring of abaqus.UtilityAndView.Upgrade.upgradeScript:0
#: ../../../../src/abaqus/UtilityAndView/User.py:docstring of abaqus.UtilityAndView.User.getWarningReply:0
#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View.__init__:0
#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View.setValues:0
msgid "Return type"
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/AbaqusBoolean.py:docstring of abaqus.UtilityAndView.AbaqusBoolean.AbaqusBoolean.__init__:16
msgid ":class:`AbaqusBoolean`"
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/BackwardCompatibility.py:docstring of abaqus.UtilityAndView.BackwardCompatibility.BackwardCompatibility:1
#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View:1
msgid "Bases: :py:class:`object`"
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/BackwardCompatibility.py:docstring of abaqus.UtilityAndView.BackwardCompatibility.BackwardCompatibility:1
msgid "The BackwardCompatibility object enables the user to control access to deprecated commands in the Abaqus Scripting Interface and to collect data on which deprecated commands have been used. This enables the user to check that no deprecated methods, members, or arguments have been used. Data are recorded on any deprecated members, methods, or arguments that are used. The BackwardCompatibility object has no constructor. The abaqus module and the odbAccess module each have a member named backwardCompatibility. By default, the value of the **includeDeprecated** member is ON, and Abaqus will execute a script containing deprecated commands with no indication that you should update the script. You can do either of the following to change the value of the **includeDeprecated** member and to determine which commands have been deprecated:"
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/BackwardCompatibility.py:docstring of abaqus.UtilityAndView.BackwardCompatibility.BackwardCompatibility:13
msgid "From the command line interface in Abaqus/CAE or from an Abaqus Scripting Interface script that is run from within Abaqus/CAE, use the following command::"
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/BackwardCompatibility.py:docstring of abaqus.UtilityAndView.BackwardCompatibility.BackwardCompatibility:18
msgid "From an Abaqus Scripting Interface script that is run using `abaqus python` at the system prompt, use the following two commands::"
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/BackwardCompatibility.py:docstring of abaqus.UtilityAndView.BackwardCompatibility.BackwardCompatibility:24
msgid "In addition, the BackwardCompatibility object provides tools to assist you in determining the deprecated commands that have been used. For example, to determine the deprecated commands used in the script createLug.py, use the following commands::"
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/BackwardCompatibility.py:docstring of abaqus.UtilityAndView.BackwardCompatibility.BackwardCompatibility:42
msgid "Check `BackwardCompatibility on help.3ds.com/2022 <https://help.3ds.com/2022/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-backwardcompatibilitypyc.htm?contextscope=all>`__."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/BackwardCompatibility.py:docstring of abaqus.UtilityAndView.BackwardCompatibility.BackwardCompatibility.getDeprecatedArgsUsed:1
msgid "This method returns a list of deprecated arguments used since the last call to resetDeprecatedArgsUsed."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/BackwardCompatibility.py:docstring of abaqus.UtilityAndView.BackwardCompatibility.BackwardCompatibility.getDeprecatedArgsUsed:4
#: ../../../../src/abaqus/UtilityAndView/BackwardCompatibility.py:docstring of abaqus.UtilityAndView.BackwardCompatibility.BackwardCompatibility.getDeprecatedMethodsUsed:4
msgid "A list of Strings."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/BackwardCompatibility.py:docstring of abaqus.UtilityAndView.BackwardCompatibility.BackwardCompatibility.getDeprecatedArgsUsed:5
#: ../../../../src/abaqus/UtilityAndView/BackwardCompatibility.py:docstring of abaqus.UtilityAndView.BackwardCompatibility.BackwardCompatibility.getDeprecatedMethodsUsed:5
msgid ":class:`List[str]`"
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/BackwardCompatibility.py:docstring of abaqus.UtilityAndView.BackwardCompatibility.BackwardCompatibility.getDeprecatedMethodsUsed:1
msgid "This method returns a list of deprecated methods used since the last call to resetDeprecatedMethodsUsed."
msgstr ""

#: ../../docstring of abaqus.UtilityAndView.BackwardCompatibility.BackwardCompatibility.includeDeprecated:1
msgid "A Boolean specifying whether deprecated members, methods, and arguments can be seen and used. Possible values are ON and OFF. The default value is ON."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/BackwardCompatibility.py:docstring of abaqus.UtilityAndView.BackwardCompatibility.BackwardCompatibility.setValues:10
#: ../../docstring of abaqus.UtilityAndView.BackwardCompatibility.BackwardCompatibility.reportDeprecated:1
msgid "A Boolean specifying whether a warning is displayed after running a script that contains deprecated commands. The default value is True."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/BackwardCompatibility.py:docstring of abaqus.UtilityAndView.BackwardCompatibility.BackwardCompatibility.resetDeprecatedArgsUsed:1
msgid "This method clears the list of deprecated arguments used."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/BackwardCompatibility.py:docstring of abaqus.UtilityAndView.BackwardCompatibility.BackwardCompatibility.resetDeprecatedMethodsUsed:1
msgid "This method clears the list of deprecated methods used."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/BackwardCompatibility.py:docstring of abaqus.UtilityAndView.BackwardCompatibility.BackwardCompatibility.setValues:1
msgid "This method modifies the BackwardCompatibility object."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/BackwardCompatibility.py:docstring of abaqus.UtilityAndView.BackwardCompatibility.BackwardCompatibility.setValues:4
msgid "Check `BackwardCompatibility.setValues on help.3ds.com/2022 <https://help.3ds.com/2022/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-backwardcompatibilitypyc.htm?contextscope=all#simaker-backwardcompatibilitysetvaluespyc>`__."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/BackwardCompatibility.py:docstring of abaqus.UtilityAndView.BackwardCompatibility.BackwardCompatibility.setValues:7
msgid "A Boolean specifying whether deprecated members, methods, and arguments can be seen and used. The default value is ON."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/BackwardCompatibility.py:docstring of abaqus.UtilityAndView.BackwardCompatibility.BackwardCompatibility.setValues:13
#: ../../docstring of abaqus.UtilityAndView.BackwardCompatibility.BackwardCompatibility.showKeysInReport:1
msgid "A Boolean specifying whether the keys and indices are included in the report that is displayed when **reportDeprecated** is True. The default value is False."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/Callback.py:docstring of abaqus.UtilityAndView.Callback.addImportCallback:1
msgid "This function defines a function to be called when a specified Abaqus/CAE module is imported. You cannot specify a custom module. For more information, see An example of a callback function."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/Callback.py:docstring of abaqus.UtilityAndView.Callback.addImportCallback:11
msgid "Check `Callback.addImportCallback on help.3ds.com/2022 <https://help.3ds.com/2022/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-functioncallbackpyc.htm?contextscope=all#simaker-functioncallbackaddimportcallbackpyc>`__."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/Callback.py:docstring of abaqus.UtilityAndView.Callback.addImportCallback:14
msgid "A String specifying the name of a specified Abaqus/CAE module."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/Callback.py:docstring of abaqus.UtilityAndView.Callback.addImportCallback:16
msgid "A Python function to be called. The interface definition of the callback function is `def functionName(moduleName, userData)`. **moduleName** is a String. **userData** is the object passed as the **userData** argument to the addImportCallback method."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/Callback.py:docstring of abaqus.UtilityAndView.Callback.addImportCallback:20
msgid "Any Python object or None. This object is passed to the callback function."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/Callback.py:docstring of abaqus.UtilityAndView.Callback.removeImportCallback:1
msgid "This function removes a callback added in addImportCallback."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/Callback.py:docstring of abaqus.UtilityAndView.Callback.removeImportCallback:9
msgid "Check `Callback.removeImportCallback on help.3ds.com/2022 <https://help.3ds.com/2022/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-functioncallbackpyc.htm?contextscope=all#simaker-functioncallbackremoveimportcallbackpyc>`__."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/Callback.py:docstring of abaqus.UtilityAndView.Callback.removeImportCallback:12
msgid "A Python function to be called; it must be the same as the **callback** argument specified in the original call to addImportCallback."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/Callback.py:docstring of abaqus.UtilityAndView.Callback.removeImportCallback:15
msgid "Any Python object or None; it must be the same as the **userData** argument specified in the original call to addImportCallback."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/Customization.py:docstring of abaqus.UtilityAndView.Customization.journalMethodCall:1
msgid "This function may be used by a user-defined command to record itself in the Abaqus journal file. For example::"
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/Customization.py:docstring of abaqus.UtilityAndView.Customization.journalMethodCall:12
msgid "Your command should not call journalMethodCall if the command changes the mdb using built-in Abaqus Scripting Interface commands, because built-in commands are journaled by default. A command that changes the mdb customData is one example of a command that should call journalMethodCall."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/Customization.py:docstring of abaqus.UtilityAndView.Customization.journalMethodCall:23
msgid "Check `Customization.journalMethodCall on help.3ds.com/2022 <https://help.3ds.com/2022/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-functioncustomizationpyc.htm?contextscope=all#simaker-functioncustomizationjournalmethodcallpyc>`__."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/Customization.py:docstring of abaqus.UtilityAndView.Customization.journalMethodCall:26
msgid "A String specifying the path to the object."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/Customization.py:docstring of abaqus.UtilityAndView.Customization.journalMethodCall:28
msgid "A String specifying the name of the method."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/Customization.py:docstring of abaqus.UtilityAndView.Customization.journalMethodCall:30
msgid "A sequence specifying the positional arguments to be written to the journal file."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/Customization.py:docstring of abaqus.UtilityAndView.Customization.journalMethodCall:32
msgid "A Python dict object specifying the keyword arguments to be written to the journal file."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/Delete.py:docstring of abaqus.UtilityAndView.Delete.deleteObjectCallback:1
msgid "This method adds a callback function that will be invoked when the specified Abaqus Scripting Interface objects are about to be deleted. The callback is invoked only when the object is deleted using the Python statement del object. The callback is not invoked when the object is deleted using an Abaqus Scripting Interface command such as mdb.models[name].parts[name].deleteFeature()."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/Delete.py:docstring of abaqus.UtilityAndView.Delete.deleteObjectCallback:13
msgid "Check `Delete.deleteObjectCallback on help.3ds.com/2022 <https://help.3ds.com/2022/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-functiondeletepyc.htm?contextscope=all#simaker-functiondeletedeleteobjectcallbackpyc>`__."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/Delete.py:docstring of abaqus.UtilityAndView.Delete.deleteObjectCallback:16
msgid "A Python function to be called when an object matching the specified path is about to be deleted. The interface definition of the callback function is `def functionName(objectPath, userData)` where **objectPath** is the path to the object about to be deleted. **userData** is the object passed as the **userData** argument to the addCallback method."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/Delete.py:docstring of abaqus.UtilityAndView.Delete.deleteObjectCallback:22
msgid "A String specifying the path to an object or the SymbolicConstant ANY. You can include wildcards in the path to specify a pattern to be matched. Examples of valid paths are  `path='mdb.models[*]' path=\"mdb.models['Axle*'].parts[*]\"`, and `path='mdb.models[*].materials[*]'`"
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/Delete.py:docstring of abaqus.UtilityAndView.Delete.deleteObjectCallback:27
#: ../../../../src/abaqus/UtilityAndView/Method.py:docstring of abaqus.UtilityAndView.Method.addCallback:27
#: ../../../../src/abaqus/UtilityAndView/Method.py:docstring of abaqus.UtilityAndView.Method.removeCallback:27
msgid "Any type of data. This data will be passed to the callback function. The default value is None."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/Delete.py:docstring of abaqus.UtilityAndView.Delete.deleteObjectCallback:30
msgid "A Boolean specifying that the callback should be called if an object owned by the object specified by the **path** argument is about to be deleted. The default value is False."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/Method.py:docstring of abaqus.UtilityAndView.Method.addCallback:1
msgid "This method adds a callback function that will be invoked when certain Abaqus/CAE commands are about to be executed."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/Method.py:docstring of abaqus.UtilityAndView.Method.addCallback:10
msgid "Check `Method.addCallback on help.3ds.com/2022 <https://help.3ds.com/2022/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-functionmethodpyc.htm?contextscope=all#simaker-functionmethodaddcallbackpyc>`__."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/Method.py:docstring of abaqus.UtilityAndView.Method.addCallback:13
#: ../../../../src/abaqus/UtilityAndView/Method.py:docstring of abaqus.UtilityAndView.Method.removeCallback:13
msgid "An object or type object specifying which object will trigger the callback function to be invoked or the Symbolic Constant ALL_TYPES."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/Method.py:docstring of abaqus.UtilityAndView.Method.addCallback:16
#: ../../../../src/abaqus/UtilityAndView/Method.py:docstring of abaqus.UtilityAndView.Method.removeCallback:16
msgid "A String specifying the name of the method on the caller that will trigger the callback function to be invoked or the Symbolic Constant ALL_METHODS."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/Method.py:docstring of abaqus.UtilityAndView.Method.addCallback:19
msgid "A Python function to be called when a command matching the specified caller and method name is about to be executed. The interface definition of the callback function is `def functionName(callingMethod, args, keywordArgs, userData)` where **callingMethod** is the method that called this function. **args** is the sequence of non-keyword arguments that was passed to the calling method. **keywordArgs** is the dictionary of keyword arguments that was passed to the calling method. **userData** is the object passed as the **userData** argument to the addCallback method."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/Method.py:docstring of abaqus.UtilityAndView.Method.addCallback:30
msgid "A Boolean specifying that the callback should be called after the method has executed (instead of before the method is called). The default value is False, which indicates that the callback should be called before the method has executed. If **callAfter** = True, you can also access the return value of the command from within the callback by including the following statement `returnValue = getMethodReturnValue()` The getMethodReturnValue function is in the global namespace of the callback function."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/Method.py:docstring of abaqus.UtilityAndView.Method.removeCallback:1
msgid "This method removes a callback added by the addCallback method. To successfully remove a callback, all arguments must exactly match those used when the callback was added."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/Method.py:docstring of abaqus.UtilityAndView.Method.removeCallback:10
msgid "Check `Method.removeCallback on help.3ds.com/2022 <https://help.3ds.com/2022/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-functionmethodpyc.htm?contextscope=all#simaker-functionmethodremovecallbackpyc>`__."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/Method.py:docstring of abaqus.UtilityAndView.Method.removeCallback:19
msgid "A Python function to be called when a command matching the specified caller and method name is about to be executed. The interface definition of the callback function is `def functionName(callingMethod, args, keywordArgs, userData)` where **callingMethod** is the method that called this function. **args** is the sequence of nonkeyword arguments that was passed to the calling method. **keywordArgs** is the dictionary of keyword arguments that was passed to the calling method. **userData** is the object passed as the **userData** argument to the removeCallback method."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/Repository.py:docstring of abaqus.UtilityAndView.Repository.Repository:1
msgid "Bases: :py:class:`dict`"
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/Repository.py:docstring of abaqus.UtilityAndView.Repository.Repository:1
msgid "Repositories are containers that store a particular type of object; for example, the steps repository contains all the steps defined in the model. An Abaqus Scripting Interface Repository maps a key to a value. The key is usually a String, and the value is any Python object, usually an Abaqus object. A repository is similar to a Python dictionary; however, only a constructor can add an object to a repository. In addition, all of the objects in a repository are of the same base type. For more information, see Repositories. A Repository has no constructor. Abaqus creates empty repositories when you import a module. For example, Abaqus creates an empty parts repository when you import the part module. The following methods of the Repository object are standard Python dictionary methods and are not described here: The Repository object is derived from the dict object. - has_key - items - keys - values - [changeKey(...)](https://help.3ds.com/2022/english/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-utlrepositorypyc.htm?ContextScope=all#simaker-utlrepositorychangekeypyc)"
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/Repository.py:docstring of abaqus.UtilityAndView.Repository.Repository:21
msgid "Check `Repository on help.3ds.com/2022 <https://help.3ds.com/2022/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-repositorypyc.htm?contextscope=all>`__."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/Repository.py:docstring of abaqus.UtilityAndView.Repository.Repository.changeKey:1
msgid "This method changes the name of a key in a repository and the **name** member of the value object."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/Repository.py:docstring of abaqus.UtilityAndView.Repository.Repository.changeKey:5
msgid "Check `Repository.changeKey on help.3ds.com/2022 <https://help.3ds.com/2022/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-repositorypyc.htm?contextscope=all#simaker-repositorychangekeypyc>`__."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/Repository.py:docstring of abaqus.UtilityAndView.Repository.Repository.changeKey:8
msgid "A String specifying the old name of the repository key."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/Repository.py:docstring of abaqus.UtilityAndView.Repository.Repository.changeKey:10
msgid "A String specifying the new name of the repository key."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/SymbolicConstant.py:docstring of abaqus.UtilityAndView.SymbolicConstant.SymbolicConstant:1
msgid "Bases: :py:class:`str`"
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/SymbolicConstant.py:docstring of abaqus.UtilityAndView.SymbolicConstant.SymbolicConstant:1
msgid "The SymbolicConstant object represents a string in a way that can be stored in a replay file and used as an argument to Abaqus Scripting Interface methods and functions. By convention the string representation of the SymbolicConstant object is the same as its variable name. If you pass a SymbolicConstant object to the Python repr() function, the function returns the text without quotes. In effect, the text is the variable that, by convention, refers to the SymbolicConstant object. Two SymbolicConstant objects with the same text are the same Python object, although you can assign them to different variables. All of the SymbolicConstant objects that are required in Abaqus Scripting Interface methods are defined in the abaqusConstants module. Some SymbolicConstant objects and the SymbolicConstant constructor are defined in the abaqus module. The SymbolicConstant constructor is also defined in the symbolicConstants module."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/SymbolicConstant.py:docstring of abaqus.UtilityAndView.SymbolicConstant.SymbolicConstant:21
msgid "Check `SymbolicConstant on help.3ds.com/2022 <https://help.3ds.com/2022/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-symbolicconstantpyc.htm?contextscope=all>`__."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/SymbolicConstant.py:docstring of abaqus.UtilityAndView.SymbolicConstant.SymbolicConstant.__init__:1
msgid "The SymbolicConstant method creates a SymbolicConstant object."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/SymbolicConstant.py:docstring of abaqus.UtilityAndView.SymbolicConstant.SymbolicConstant.__init__:9
msgid "Check `SymbolicConstant.__init__ on help.3ds.com/2022 <https://help.3ds.com/2022/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-symbolicconstantpyc.htm?contextscope=all#simaker-symbolicconstant__init__pyc>`__."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/SymbolicConstant.py:docstring of abaqus.UtilityAndView.SymbolicConstant.SymbolicConstant.__init__:12
msgid "A String specifying the text of the SymbolicConstant object. The String must contain only capital letters, digits, or underscores and must not start with a digit."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/SymbolicConstant.py:docstring of abaqus.UtilityAndView.SymbolicConstant.SymbolicConstant.__init__:15
msgid "A SymbolicConstant object."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/SymbolicConstant.py:docstring of abaqus.UtilityAndView.SymbolicConstant.SymbolicConstant.__init__:16
msgid ":class:`SymbolicConstant`"
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/SymbolicConstant.py:docstring of abaqus.UtilityAndView.SymbolicConstant.abaqusConstants:1
msgid "Bases: :py:class:`~abaqus.UtilityAndView.SymbolicConstant.SymbolicConstant`, :py:class:`~enum.Enum`"
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/SymbolicConstant.py:docstring of abaqus.UtilityAndView.SymbolicConstant.abaqusConstants:1
msgid "An enumeration."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/Upgrade.py:docstring of abaqus.UtilityAndView.Upgrade.upgradeScript:1
msgid "This function can be used to upgrade a directory, a file, or a list of both directories and files. You can preview the changes before you choose to upgrade the file. A user interface to this function is available via the Plug-ins menu. For more information, see Upgrading a script. You can also use a simpler interface from the command line to upgrade scripts. For more information, see the summary of changed commands at the end of this guide."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/Upgrade.py:docstring of abaqus.UtilityAndView.Upgrade.upgradeScript:14
msgid "Check `Upgrade.upgradeScript on help.3ds.com/2022 <https://help.3ds.com/2022/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-functionupgradepyc.htm?contextscope=all#simaker-functionupgradeupgradescriptpyc>`__."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/Upgrade.py:docstring of abaqus.UtilityAndView.Upgrade.upgradeScript:17
msgid "A String or sequence of Strings specifying the files or directories to upgrade. If a directory path is found, it will be searched for files with the suffix .py or .guiLog. If **searchSubdirectories** is True, any directories found within a directory will also be searched."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/Upgrade.py:docstring of abaqus.UtilityAndView.Upgrade.upgradeScript:22
msgid "A Boolean specifying whether to search any subdirectories (if the file name is a directory). If **searchSubdirectories** is True, the command will search the subdirectories of any directory in **fileNames**. If **searchSubdirectories** is False, the command will search the directory but not the subdirectories. The default value is True."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/Upgrade.py:docstring of abaqus.UtilityAndView.Upgrade.upgradeScript:27
msgid "A Boolean specifying whether to make backups of the files. The default value is True. This argument is ignored if **preview** is set."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/Upgrade.py:docstring of abaqus.UtilityAndView.Upgrade.upgradeScript:30
msgid "A Boolean specifying whether to preview the changes to the file instead of changing the file. If **preview** is True, display a preview of the file changes. The default value is True.By default, the preview is displayed in a web browser. The **diffExecutable** argument allows you to specify a different application in which to preview the changes."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/Upgrade.py:docstring of abaqus.UtilityAndView.Upgrade.upgradeScript:35
msgid "A String specifying the application used to display the differences between the script and the upgraded script. The default value is an empty string, and the differences are displayed by a web browser. Examples of values for **diffExecutable** are winmerge and diff. This argument is ignored if **preview** is False."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/Upgrade.py:docstring of abaqus.UtilityAndView.Upgrade.upgradeScript:40
msgid "A String specifying the name of the log file where any warnings and changes found during the upgrade are written. The default value is asiUpgrade.log."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/Upgrade.py:docstring of abaqus.UtilityAndView.Upgrade.upgradeScript:43
msgid "A String specifying the Abaqus release from which to upgrade. The default value is EARLIEST."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/Upgrade.py:docstring of abaqus.UtilityAndView.Upgrade.upgradeScript:46
msgid "A String specifying the Abaqus release to which to upgrade. The default value is LATEST."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/Upgrade.py:docstring of abaqus.UtilityAndView.Upgrade.upgradeScript:48
msgid "A SymbolicConstant specifying the type of scripting commands to be upgraded. Possible values are KERNEL, GUI, or BOTH. If **scriptType** is KERNEL only Abaqus Scripting Interface commands will be upgraded; if **scriptType** is GUI only Abaqus GUI Toolkit commands will be upgraded. The default value is BOTH."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/Upgrade.py:docstring of abaqus.UtilityAndView.Upgrade.upgradeScript:53
msgid "The number of changes made or, if **preview** was used, the number of changes that would have been made."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/Upgrade.py:docstring of abaqus.UtilityAndView.Upgrade.upgradeScript:55
msgid ":class:`int`"
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/User.py:docstring of abaqus.UtilityAndView.User.getWarningReply:1
msgid "This method is used to obtain a reply from a user from a warning dialog box. The method displays a modal warning dialog box with a message and standard buttons. The user clicks the one of the standard buttons, the getWarningReply returns the corresponding button value and closes the dialog box. You can use a separator in the message argument to provide a multi-line message in the warning dialog box; for example::"
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/User.py:docstring of abaqus.UtilityAndView.User.getWarningReply:11
msgid "You cannot use a script that contains getWarningReply if you are running the script from the command line and passing the script name to the command line options **-start**, **-script**, **-replay**, or **-noGUI**."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/User.py:docstring of abaqus.UtilityAndView.User.getWarningReply:21
msgid "Check `User.getWarningReply on help.3ds.com/2022 <https://help.3ds.com/2022/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-functionuserpyc.htm?contextscope=all#simaker-functionusergetwarningreplypyc>`__."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/User.py:docstring of abaqus.UtilityAndView.User.getWarningReply:24
msgid "A String specifying the message in the warning dialog box."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/User.py:docstring of abaqus.UtilityAndView.User.getWarningReply:26
msgid "A Sequence of standard buttons to be displayed in the warning dialog box. Permissible values are YES, NO, YES_TO_ALL and CANCEL."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/User.py:docstring of abaqus.UtilityAndView.User.getWarningReply:29
msgid ":class:`The button that the user clicks.`"
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View:1
msgid "The Session and Viewport View objects store view settings for custom (both predefined and user-defined) views. The paradigm used to define a view is based on a camera analogy. Similar to taking a photograph with a camera, features such as camera position, view direction, orientation, depth of field, and projection are specified to transform three-dimensional views to the screen. The Layer View objects store a transformation matrix used to position the contents of the Layer within a viewport."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View:17
msgid "Check `View on help.3ds.com/2022 <https://help.3ds.com/2022/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-viewpyc.htm?contextscope=all>`__."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View.__init__:1
msgid "This method creates a View object. Note:All dimensions and coordinates are specified in the model coordinate system. Note:This method cannot be used to create a View for a Layer object."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View.__init__:11
msgid "Check `View.__init__ on help.3ds.com/2022 <https://help.3ds.com/2022/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-viewpyc.htm?contextscope=all#simaker-view__init__pyc>`__."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View.__init__:14
msgid "A String specifying the name of the view (also used as the repository key). Possible values are 'Front', 'Back', 'Top', 'Bottom', 'Left', `Right', 'Iso', 'User-1', 'User-2', 'User-3', and 'User-4'. The object member associated with this argument is a SymbolicConstant. Possible values of the **name** member are:FRONT, BACK, TOP, BOTTOM, LEFT, RIGHT, ISO, USER1, USER2, USER3, and USER4."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View.__init__:20
#: ../../docstring of abaqus.UtilityAndView.View.View.nearPlane:1
msgid "A Float specifying the distance from the camera to the near clipping plane. Possible values are **nearPlane** > 0.0."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View.__init__:23
#: ../../docstring of abaqus.UtilityAndView.View.View.farPlane:1
msgid "A Float specifying the distance from the camera to the far clipping plane when **farPlaneMode** =SPECIFY. Possible values are **farPlane** > **nearPlane**."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View.__init__:26
#: ../../docstring of abaqus.UtilityAndView.View.View.width:1
msgid "A Float specifying the width of the front clipping plane. Possible values are **width** > 0.0."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View.__init__:29
#: ../../docstring of abaqus.UtilityAndView.View.View.height:1
msgid "A Float specifying the height of the front clipping plane. Possible values are **height** > 0.0."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View.__init__:32
#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View.setProjection:10
#: ../../docstring of abaqus.UtilityAndView.View.View.projection:1
msgid "A SymbolicConstant specifying the projection mode. Possible values are PERSPECTIVE and PARALLEL."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View.__init__:35
#: ../../docstring of abaqus.UtilityAndView.View.View.cameraPosition:1
msgid "A sequence of three Floats specifying the camera position."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View.__init__:37
#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View.setViewpoint:11
#: ../../docstring of abaqus.UtilityAndView.View.View.cameraUpVector:1
msgid "A sequence of three Floats specifying the camera's up vector (the screen's positive **Y**-axis). The initial value is (0, 0, 0)."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View.__init__:40
#: ../../docstring of abaqus.UtilityAndView.View.View.cameraTarget:1
msgid "A sequence of three Floats specifying the center of the scene."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View.__init__:42
#: ../../docstring of abaqus.UtilityAndView.View.View.viewOffsetX:1
msgid "A Float specifying the amount to pan the model in the screen **X**-direction as a fraction of the viewport width. A positive value pans the model to the right. A negative value pans the model to the left.The*viewOffsetX* and **viewOffsetY** arguments allow you to pan the view without changing the position of the camera or the target (*cameraPosition* and **cameraTarget** arguments to the View method). The resulting change in the view allows you to pan a perspective display without producing an apparent rotation of the model."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View.__init__:49
#: ../../docstring of abaqus.UtilityAndView.View.View.viewOffsetY:1
msgid "A Float specifying the amount to pan the model in the screen **Y**-direction as a fraction of the viewport height. A positive value pans the model upward. A negative value pans the model downward."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View.__init__:53
#: ../../docstring of abaqus.UtilityAndView.View.View.autoFit:1
msgid "A Boolean specifying whether the view is auto-fit when applied."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View.__init__:55
#: ../../docstring of abaqus.UtilityAndView.View.View.movieMode:1
msgid "A Boolean specifying whether or not the camera is in movie mode. The default value is OFF."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View.__init__:58
msgid "A View object."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View.__init__:59
msgid ":class:`View`"
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View.__init__:0
#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View.setProjection:0
#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View.setRotationCenter:0
#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View.setValues:0
#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View.zoom:0
msgid "Raises"
msgstr ""

#: ../../docstring of abaqus.UtilityAndView.View.View.displayedObjectScreenHeight:1
msgid "A Float specifying the height in viewport millimeters of the bounding rectangle around the viewport contents. This value does not include annotations or symbols and it is not clipped to the size of the viewport window."
msgstr ""

#: ../../docstring of abaqus.UtilityAndView.View.View.displayedObjectScreenWidth:1
msgid "A Float specifying the width in viewport millimeters of the bounding rectangle around the viewport contents. This value does not include annotations or symbols and it is not clipped to the size of the viewport window."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View.fitView:1
msgid "This method scales the displayable object (such as a part, the assembly, or an **X - Y** plot) to fit the viewport."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View.fitView:5
msgid "Check `View.fitView on help.3ds.com/2022 <https://help.3ds.com/2022/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-viewpyc.htm?contextscope=all#simaker-viewfitviewpyc>`__."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View.fitView:8
#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View.next:10
msgid "A Boolean specifying the viewport should refresh immediately after the command is processed. This is typically only used when writing a script and it is desirable to show intermediate results before the script completes. The default value is False."
msgstr ""

#: ../../docstring of abaqus.UtilityAndView.View.View.layerTransform:1
msgid "A tuple of Floats specifying a transformation matrix used to position the contents of the Layer within a viewport."
msgstr ""

#: ../../docstring of abaqus.UtilityAndView.View.View.name:1
msgid "A String specifying the name of the view (also used as the repository key). Possible values are 'Front', 'Back', 'Top', 'Bottom', 'Left', 'Right', 'Iso', 'User-1', 'User-2', 'User-3', and 'User-4'. The object member associated with this argument is a SymbolicConstant. Possible values of the **name** member are: FRONT, BACK, TOP, BOTTOM, LEFT, RIGHT, ISO, USER1, USER2, USER3, and USER4."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View.next:1
msgid "This method restores the view in the viewport to the next view setting in the list. (There is a list of eight views stored for each viewport.) If there is no next view, no action is taken. Note:This method is not available for a Layer View."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View.next:7
msgid "Check `View.next on help.3ds.com/2022 <https://help.3ds.com/2022/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-viewpyc.htm?contextscope=all#simaker-viewnextpyc>`__."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View.pan:1
msgid "This method pans the view in the viewport using absolute, not relative, mode."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View.pan:4
msgid "Check `View.pan on help.3ds.com/2022 <https://help.3ds.com/2022/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-viewpyc.htm?contextscope=all#simaker-viewpanpyc>`__."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View.pan:7
msgid "A Float specifying the amount to pan the model in the screen **X**-direction as a fraction of the viewport width. A positive value pans the model to the right. A negative value pans the model to the left. The default value is 0.0."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View.pan:11
msgid "A Float specifying the amount to pan the model in the screen **Y**-direction as a fraction of the viewport height. A positive value pans the model upward. A negative value pans the model downward. The default value is 0.0."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View.pan:15
msgid "A Boolean specifying the alternate mode of the pan view manipulation should be used. The default value is OFF. This argument is ignored for a Layer View."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View.pan:18
#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View.previous:10
#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View.rotate:26
#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View.setLayerTransform:14
#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View.setProjection:13
#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View.setValues:19
#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View.setViewpoint:14
#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View.zoom:21
#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View.zoomRectangle:13
msgid "A Boolean specifying the viewport should refresh immediately after the command is processed. This argument is typically used only when writing a script and it is desirable to show intermediate results before the script completes. The default value is False."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View.previous:1
msgid "This method restores the view in the viewport to the previous view setting in the list. (There is a list of eight views stored for each viewport.) If there is no previous view, no action is taken. Note:This method is not available for a Layer View."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View.previous:7
msgid "Check `View.previous on help.3ds.com/2022 <https://help.3ds.com/2022/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-viewpyc.htm?contextscope=all#simaker-viewpreviouspyc>`__."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View.rotate:1
msgid "This method rotates the view in the viewport. If a center of rotation has been previously specified and **asMovie** is OFF then this method will honor that rotation center."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View.rotate:6
msgid "Check `View.rotate on help.3ds.com/2022 <https://help.3ds.com/2022/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-viewpyc.htm?contextscope=all#simaker-viewrotatepyc>`__."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View.rotate:9
msgid "A Float specifying the degrees to rotate about the **X**-axis. The default value is 0.0."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View.rotate:11
msgid "A Float specifying the degrees to rotate about the **Y**-axis. The default value is 0.0."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View.rotate:13
msgid "A Float specifying the degrees to rotate about the*Z*-axis. The default value is 0.0."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View.rotate:15
msgid "A SymbolicConstant specifying the rotation mode. Possible values are:  * TOTAL : Set the view to (0, 0, 1), then rotate about the screen's axes (an absolute rotation). * SCREEN : Rotate incrementally about the screen's axes (a relative rotation). * MODEL : Rotate incrementally about the model's axes (a relative rotation).  The default value is MODEL."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View.rotate:15
msgid "A SymbolicConstant specifying the rotation mode. Possible values are:"
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View.rotate:17
msgid "TOTAL : Set the view to (0, 0, 1), then rotate about the screen's axes (an absolute rotation)."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View.rotate:18
msgid "SCREEN : Rotate incrementally about the screen's axes (a relative rotation)."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View.rotate:19
msgid "MODEL : Rotate incrementally about the model's axes (a relative rotation)."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View.rotate:21
msgid "The default value is MODEL."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View.rotate:23
msgid "A Boolean specifying the alternate mode of the rotate view manipulation should be used. The default value is OFF."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View.setLayerTransform:1
msgid "This method modifies the transformation used to position a Layer. Note:This method is not available for Session and Viewport Views."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View.setLayerTransform:5
msgid "Check `View.setLayerTransform on help.3ds.com/2022 <https://help.3ds.com/2022/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-viewpyc.htm?contextscope=all#simaker-viewsetlayertransformpyc>`__."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View.setLayerTransform:8
msgid "A sequence of 16 Floats specifying the transformation matrix."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View.setLayerTransform:10
msgid "A View object from which the view settings are to be copied. If the **layerTransform** argument is also supplied to setLayerTransform, it will override the values in the View object specified by **view**."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View.setProjection:1
msgid "This method modifies the appearance of three-dimensional models in the viewport. Choosing PERSPECTIVE makes a model appear more realistic by decreasing the apparent size of features that are farther away from the viewing point. Note:This method is not available for a Layer View."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View.setProjection:7
msgid "Check `View.setProjection on help.3ds.com/2022 <https://help.3ds.com/2022/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-viewpyc.htm?contextscope=all#simaker-viewsetprojectionpyc>`__."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View.setRotationCenter:1
msgid "This method sets the center of rotation to the specified location."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View.setRotationCenter:4
msgid "Check `View.setRotationCenter on help.3ds.com/2022 <https://help.3ds.com/2022/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-viewpyc.htm?contextscope=all#simaker-viewsetrotationcenterpyc>`__."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View.setRotationCenter:7
msgid "A sequence of a String and an Int specifying a part instance name and a node label or a sequence of 3 Floats specifying a point."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View.setRotationCenter:10
msgid "rotationCenter cannot be set using a part instance and node label unless the     displayed object is an ODB."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View.setValues:1
msgid "This method modifies the View object."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View.setValues:4
msgid "This method is not available for a Layer View."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View.setValues:6
msgid "The optional arguments to `setValues` are the same as the arguments to the View method, except for the `name` and `autoFit` arguments. In addition, `setValues` has the following optional arguments:"
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View.setValues:12
msgid "Check `View.setValues on help.3ds.com/2022 <https://help.3ds.com/2022/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-viewpyc.htm?contextscope=all#simaker-viewsetvaluespyc>`__."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View.setValues:15
msgid "A View object from which the view settings are to be copied. If other arguments are also supplied to `setValues`, they will override the values in the View object specified by `view`."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View.setValues:24
msgid "A Float specifying the viewing angle of the camera. Possible values are 0.0 < filedOfViewAngle < 180.0."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View.setValues:27
msgid "A SymbolicConstant specifying how the distance from the camera to the far clipping plane is set. Possible values are AUTOCOMPUTE and SPECIFY."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View.setValues:30
msgid ":class:`None.`"
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View.setViewpoint:1
msgid "This method sets the camera's position in the viewport. Note:This method is not available for a Layer View."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View.setViewpoint:5
msgid "Check `View.setViewpoint on help.3ds.com/2022 <https://help.3ds.com/2022/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-viewpyc.htm?contextscope=all#simaker-viewsetviewpointpyc>`__."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View.setViewpoint:8
msgid "A sequence of three Floats specifying the viewing vector (from the camera to the origin of the model)."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View.zoom:1
msgid "This method magnifies the view in the viewport."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View.zoom:4
msgid "Check `View.zoom on help.3ds.com/2022 <https://help.3ds.com/2022/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-viewpyc.htm?contextscope=all#simaker-viewzoompyc>`__."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View.zoom:7
msgid "A Float specifying the amount to zoom. Possible values are 0.000001 ≤ **zoomFactor** ≤ 1000000. A **zoomFactor** less than one reduces the image. A **zoomFactor** greater than one enlarges the image."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View.zoom:11
msgid "A SymbolicConstant specifying the way the zoom is executed. Possible values are:  * ABSOLUTE : Execute fitView, then zoom. * RELATIVE : Zoom from the current camera settings.  The default value is ABSOLUTE."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View.zoom:11
msgid "A SymbolicConstant specifying the way the zoom is executed. Possible values are:"
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View.zoom:13
msgid "ABSOLUTE : Execute fitView, then zoom."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View.zoom:14
msgid "RELATIVE : Zoom from the current camera settings."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View.zoom:16
msgid "The default value is ABSOLUTE."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View.zoom:18
msgid "A Boolean specifying the alternate mode of the zoom view manipulation should be used. The default value is OFF. This argument is ignored for a Layer View."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View.zoomRectangle:1
msgid "This method fills the viewport with the graphics located within the given rectangle."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View.zoomRectangle:4
msgid "Check `View.zoomRectangle on help.3ds.com/2022 <https://help.3ds.com/2022/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-viewpyc.htm?contextscope=all#simaker-viewzoomrectanglepyc>`__."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View.zoomRectangle:7
msgid "A pair of Floats specifying the*X*- and **Y**-coordinates of one corner of the rectangle in fractions of the viewport width and height."
msgstr ""

#: ../../../../src/abaqus/UtilityAndView/View.py:docstring of abaqus.UtilityAndView.View.View.zoomRectangle:10
msgid "A pair of Floats specifying the*X*- and **Y**-coordinates of the other corner of the rectangle in fractions of the viewport width and height."
msgstr ""
