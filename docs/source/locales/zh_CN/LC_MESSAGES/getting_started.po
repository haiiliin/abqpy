msgid ""
msgstr ""
"Project-Id-Version: abqpy\nReport-Msgid-Bugs-To: \nPOT-Creation-Date: "
"2023-05-09 05:33+0000\nPO-Revision-Date: 2023-05-10 12:02\nLast-"
"Translator: \nLanguage-Team: Chinese Simplified\nMIME-Version: "
"1.0\nContent-Type: text/plain; charset=UTF-8\nContent-Transfer-Encoding: "
"8bit\nPlural-Forms: nplurals=1; plural=0;\nX-Crowdin-Project: abqpy\nX-"
"Crowdin-Project-ID: 586189\nX-Crowdin-Language: zh-CN\nX-Crowdin-File: "
"/[haiiliin.abqpy] 2023/docs/source/locales/pot/getting_started.pot\nX-"
"Crowdin-File-ID: 957\nLanguage: zh_CN\n"

#: ../../getting_started.md:1
msgid "Getting Started"
msgstr "入门指南"

#: ../../getting_started.md:3
msgid "Introduction"
msgstr "简介"

#: ../../getting_started.md:5
msgid ""
"`abqpy` is a Python package providing type hints for Python scripting of "
"Abaqus, you can use it to write you Python script of Abaqus fluently, even"
" without doing anything in Abaqus. It also provides some simple APIs to "
"execute the Abaqus commands so that you can run your Python script to "
"build the model, submit the job and extract the output data in just one "
"Python script, even without opening the Abaqus/CAE."
msgstr ""
"`abqpy` 是一个 Python 包，提供了一些类型提示，用于快速编写你的 Abaqus/Python "
"脚本，即便不打开 Abaqus/CAE。它还提供了一些简单的 API 用于调用 Abaqus 命令执行你的"
" Python 脚本，以便使用 Python 脚本快速构建 Abaqus 模型，并提交作业给 Abaqus "
"进行计算，并从计算结果中提取数据。"

#: ../../getting_started.md:11
msgid "Installation"
msgstr "安装"

#: ../../getting_started.md:13
msgid ""
"Make sure <a href=\"https://www.python.org/downloads/\"> <img "
"src=\"https://img.shields.io/badge/Python-3.7%2B-brightgreen\" "
"align=center /> </a> and  <a href=\"https://www.3ds.com/products-"
"services/simulia/products/abaqus/\"> <img "
"src=\"https://img.shields.io/badge/Abaqus-2016%2B-brightgreen\" "
"align=center /> </a> are installed on your computer before installing "
"`abqpy`."
msgstr ""

#: ../../getting_started.md:17
msgid "You can install `abqpy` with the following commands."
msgstr ""

#: ../../getting_started.md:0
msgid "Install with pip"
msgstr ""

#: ../../getting_started.md:0
msgid "Install from source"
msgstr ""

#: ../../getting_started.md:0
msgid "Install with jupyter notebook support"
msgstr ""

#: ../../getting_started.md:44
msgid ""
"You are recommended to install the corresponding version of Abaqus and "
"`abqpy` to avoid any compatibility issues."
msgstr ""

#: ../../getting_started.md:47
msgid "Two Python interpreters"
msgstr "两个 Python 解释器"

#: ../../getting_started.md:49
msgid ""
"Before we go any further, it is necessary for us to understand two Python "
"interpreters."
msgstr "在我们进一步讨论之前，我们有必要了解两个 Python 解释器。"

#: ../../getting_started.md:51
msgid ""
"When we use the Abaqus/CAE graphical user interface (GUI) to create a "
"model and to visualize the results, commands are issued internally by "
"Abaqus/CAE after every operation. These commands reflect the geometry you "
"created along with the options and settings you selected from each dialog "
"box. The GUI generates commands in an object-oriented programming language"
" called Python. The commands issued by the GUI are sent to the Abaqus/CAE "
"kernel. The kernel interprets the commands and uses the options and "
"settings to create an internal representation of our model. The kernel is "
"the brains behind Abaqus/CAE. The GUI is the interface between the user "
"and the kernel."
msgstr ""
"当我们使用 Abaqus/CAE 图形用户界面（GUI）创建模型并可视化结果时，命令由 Abaqus/CAE"
" 在每次操作后在内部发出。"
"这些命令反映您创建的几何图形以及从每个对话框中选择的选项和设置。GUI 使用名为 "
"Python 的面向对象编程语言生成命令。GUI 发出的命令将发送到 Abaqus/CAE 内核。"
"内核解释命令，并使用选项和设置来创建模型的内部表示。内核是 Abaqus/CAE 背后的大脑。"
"GUI 是用户和内核之间的接口。"

#: ../../getting_started.md:60
msgid ""
"In a word, Abaqus use Python language to interact with the Abaqus kernel, "
"everything that can be done in Abaqus/CAE, can also be done using Python "
"script. Abaqus has already installed a Python interpreter so that "
"Abaqus/CAE can use it to interact with the Abaqus kernel."
msgstr ""
"总之，Abaqus 使用 Python 语言与 Abaqus 内核进行交互，所有可以在 Abaqus/CAE 中 "
"完成的事情，也可以使用 Python 脚本完成。Abaqus  已经安装了一个 Python 解释器，以便"
" Abaqus/CAE 可以使用它与 Abaqus 内核进行交互。"

#: ../../getting_started.md:64
msgid ""
"For some reasons, we cannot directly use the Python interpreter inside "
"Abaqus to build an Abaqus model. But fortunately, we can use the commands "
"provided by Abaqus to access it. i.e."
msgstr ""
"由于某些原因，我们不能直接使用 Abaqus 内部的 Python 解释器来构建 Abaqus 模型。"
"但幸运的是，我们可以使用 Abaqus 提供的命令来访问它。即："

#: ../../getting_started.md:85
msgid ""
"Usually, we can use the noGUI-file or script-file to execute our Python "
"script in Abaqus."
msgstr ""
"通常，我们可以使用 noGUI-file 或 script-file 选项在 Abaqu 中执行我们的 Python "
"脚本。"

#: ../../getting_started.md:87
msgid ""
"Another Python interpreter, is the Python interpreter installed by "
"ourselves, where `abqpy` is installed. `abqpy` provides a bridge to "
"connect our Python script to Abaqus Python interpreter, it provides type "
"hints for Python scripting for Abaqus, enabling us to write a Abaqus "
"Python script quickly."
msgstr ""
"另一个 Python 解释器是我们自己安装的 Python 解释器，其中安装了 `abqpy`。`abqpy` "
"提供了一个将我们的 Python 脚本连接到 Abaqus Python 解释器的桥梁，它为 Abaqus 的 "
"Python 脚本提供了类型提示，使我们能够快速编写 Abaqus Python 脚本。"

#: ../../getting_started.md:92
msgid "How does this package work?"
msgstr "这个包是如何工作的？"

#: ../../getting_started.md:94
msgid ""
"`abqpy` is just a package to provide type hints for Abaqus/Python "
"scripting, it is installed outside Abaqus/Python environment, you can use "
"`abqpy` to write your Abaqus/Python scripts, and run the scripts inside "
"Abaqus on your own. However, with the help of Abaqus command, an easier "
"way can be achieved: **you can actually run the script using your own "
"Python interpreter without opening Abaqus**, which is achieved via the "
"**abaqus** command like this:"
msgstr ""
"`abqpy` 只是一个为 Abaqus/Python 脚本提供类型提示的包，它安装在 Abaqus/Python "
"环境之外，你可以使用 `abqpy` 来编写你的 Abaqus/Python 脚本，并自己在 Abaqus "
"里面运行脚本。但是，在 Abaqus 命令的帮助下，可以实现一种更简单的方法：** "
"您实际上可以使用自己的 Python 解释器运行脚本而无需打开 Abaqus**，这是通过 "
"**abaqus** 命令实现的，如下所示："

#: ../../getting_started.md:103
msgid "The secret is hided in the {py:func}`~abqpy.run.run` function:"
msgstr ""

#: ../../getting_started.md:119
msgid ""
"In this package, the {py:mod}`~abaqus` module is reimplemented to "
"automatically call this function. If you import this module in the top of "
"your script (i.e., `from abaqus import *`), your Python interpreter (not "
"Abaqus Python interpreter) will call this function and use the **abaqus** "
"command to submit the script to Abaqus. After it is submitted to Abaqus, "
"{py:func}`~abqpy.run.run` will exit the interpreter, because the script "
"will already run in Abaqus Python interpreter."
msgstr ""

#: ../../getting_started.md:124
msgid ""
"In the output script, we might not want to always use the "
"{py:mod}`~abaqus` module, because it needs the Abaqus/CAE kernel (and its "
"license). Instead, we use the module {py:mod}`~odbAccess` (i.e., `from "
"odbAccess import *`), which requires only the Abaqus Python interpreter. "
"Then, another similar **abaqus** command line is needed:"
msgstr ""

#: ../../getting_started.md:132
msgid ""
"So, the {py:mod}`~odbAccess` module is also reimplemented to call the "
"{py:func}`~abqpy.run.run` function with the argument `cae = False`."
msgstr ""

#: ../../getting_started.md:134
msgid ""
"In summary, the {py:func}`~abqpy.run.run` function will be called when you"
" import one of the two modules ({py:mod}`~abaqus` or "
"{py:mod}`~odbAccess`). It will pass the argument `cae = True` in "
"{py:mod}`~abaqus` module and `cae = False` in {py:mod}`~odbAccess` module."
" Therefore, if you want to run your Python script in Abaqus Python "
"environment, please make sure to import one of these modules on the top of"
" your script."
msgstr ""

#: ../../getting_started.md:139
msgid "Write your Abaqus/Python script"
msgstr ""

#: ../../getting_started.md:141
msgid ""
"After installing the `abqpy` package, you can start writing your own "
"Abaqus/Python script to build your model. You can refer [abqpy/examples at"
" main · "
"haiiliin/abqpy](https://github.com/haiiliin/abqpy/tree/main/examples) for "
"some script examples. Or you may go {doc}`/tutorials` for a simple "
"tutorial. For more documentation about Abaqus/Python scripting, please "
"check {doc}`/reference/index` for more detailed API references."
msgstr ""

#: ../../getting_started.md:147
msgid "Setup your Abaqus Environment"
msgstr ""

#: ../../getting_started.md:149
msgid ""
"Make sure the `abaqus` command is available in the command line (i.e., you"
" can run `abaqus` in the command line), otherwise, add a new system "
"variable named `ABAQUS_BAT_PATH`, and set the value to the file path of "
"the Abaqus command, for example, `C:/SIMULIA/Commands/abaqus.bat`."
msgstr ""

#: ../../getting_started.md:153
msgid "Run your Abaqus/Python script"
msgstr ""

#: ../../getting_started.md:155
msgid ""
"Now you can just run your Abaqus/Python script using your own Python "
"interpreter that `abqpy` is installed."
msgstr ""

#: ../../getting_started.md:158
msgid ""
"`abqpy` does not support debugging since Abaqus does not provide a "
"debugger for Python scripting outside Abaqus/CAE. If you run the script "
"under the debug mode, the script will not be submitted to Abaqus, but it "
"will run in the Python interpreter where `abqpy` is installed. Since "
"`abqpy` does not implement the whole Abaqus/Python APIs, the script may "
"not (and most likely) run correctly. However, for some simple scripts, it "
"may work, in this way you can use the debugger to check the variables in "
"the Abaqus API roughly. But still, the script will not be submitted to "
"Abaqus."
msgstr ""

#: ../../getting_started.md:166
#: ../../getting_started.md:168
msgid "Create an Abaqus Model"
msgstr ""

#: ../../getting_started.md:174
#: ../../getting_started.md:176
msgid "Extract Output Data"
msgstr ""

#: ../../getting_started.md:182
msgid "Comments"
msgstr ""

