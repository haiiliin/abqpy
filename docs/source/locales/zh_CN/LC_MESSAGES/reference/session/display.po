# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, WANG Hailin
# This file is distributed under the same license as the abqpy package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: abqpy \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-10-31 07:34+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.3\n"

#: ../../reference/session/display.md:1
msgid "Display Group"
msgstr ""

#: ../../reference/session/display.md:3
msgid ""
"Display group commands are used to select a subset of the entities "
"displayed in the viewport."
msgstr ""

#: ../../reference/session/display.md:5
msgid "Create display groups"
msgstr ""

#: abaqus.DisplayGroup.DisplayGroupSession.DisplayGroupSession:1 of
msgid "Bases: :py:class:`~abaqus.Session.SessionBase.SessionBase`"
msgstr ""

#: abaqus.DisplayGroup.DisplayGroup.DisplayGroup
#: abaqus.DisplayGroup.DisplayGroupInstance.DisplayGroupInstance
#: abaqus.DisplayGroup.DisplayGroupSession.DisplayGroupSession
#: abaqus.DisplayGroup.LeafFromConstraintNames.LeafFromConstraintNames
#: abaqus.DisplayGroup.LeafFromDatums.LeafFromDatums
#: abaqus.DisplayGroup.LeafFromDisplayGroup.LeafFromDisplayGroup
#: abaqus.DisplayGroup.LeafFromElementLabels.LeafFromElementLabels
#: abaqus.DisplayGroup.LeafFromElementSets.LeafFromElementSets
#: abaqus.DisplayGroup.LeafFromElementVarRange.LeafFromElementVarRange
#: abaqus.DisplayGroup.LeafFromGeometry.LeafFromGeometry
#: abaqus.DisplayGroup.LeafFromInstance.LeafFromInstance
#: abaqus.DisplayGroup.LeafFromInstanceElementLabels.LeafFromInstanceElementLabels
#: abaqus.DisplayGroup.LeafFromInstanceNodeLabels.LeafFromInstanceNodeLabels
#: abaqus.DisplayGroup.LeafFromMeshElementLabels.LeafFromMeshElementLabels
#: abaqus.DisplayGroup.LeafFromMeshNodeLabels.LeafFromMeshNodeLabels
#: abaqus.DisplayGroup.LeafFromMeshSurfaceSets.LeafFromMeshSurfaceSets
#: abaqus.DisplayGroup.LeafFromModelElemLabels.LeafFromModelElemLabels
#: abaqus.DisplayGroup.LeafFromModelNodeLabels.LeafFromModelNodeLabels
#: abaqus.DisplayGroup.LeafFromNodeLabels.LeafFromNodeLabels
#: abaqus.DisplayGroup.LeafFromNodeSets.LeafFromNodeSets
#: abaqus.DisplayGroup.LeafFromNodeVarRange.LeafFromNodeVarRange
#: abaqus.DisplayGroup.LeafFromOdbEdgePick.LeafFromOdbEdgePick
#: abaqus.DisplayGroup.LeafFromOdbElementLayups.LeafFromOdbElementLayups
#: abaqus.DisplayGroup.LeafFromOdbElementMaterials.LeafFromOdbElementMaterials
#: abaqus.DisplayGroup.LeafFromOdbElementPick.LeafFromOdbElementPick
#: abaqus.DisplayGroup.LeafFromOdbElementPlies.LeafFromOdbElementPlies
#: abaqus.DisplayGroup.LeafFromOdbElementSections.LeafFromOdbElementSections
#: abaqus.DisplayGroup.LeafFromOdbElementTypes.LeafFromOdbElementTypes
#: abaqus.DisplayGroup.LeafFromOdbNodePick.LeafFromOdbNodePick
#: abaqus.DisplayGroup.LeafFromPartElementLabels.LeafFromPartElementLabels
#: abaqus.DisplayGroup.LeafFromPartInstance.LeafFromPartInstance
#: abaqus.DisplayGroup.LeafFromPartNodeLabels.LeafFromPartNodeLabels
#: abaqus.DisplayGroup.LeafFromReferencePoint.LeafFromReferencePoint
#: abaqus.DisplayGroup.LeafFromSets.LeafFromSets
#: abaqus.DisplayGroup.LeafFromSurfaceSets.LeafFromSurfaceSets
#: abaqus.DisplayGroup.LeafFromSurfaceVarRange.LeafFromSurfaceVarRange of
msgid "Public Data Attributes:"
msgstr ""

#: ../../None:72:<autosummary>:1
msgid ""
":py:obj:`attachedToGui "
"<abaqus.Session.SessionBase.SessionBase.attachedToGui>`\\"
msgstr ""

#: ../../None:72:<autosummary>:1
msgid "A Boolean specifying whether an Abaqus interactive session is running."
msgstr ""

#: ../../None:72:<autosummary>:1
msgid ""
":py:obj:`replayInProgress "
"<abaqus.Session.SessionBase.SessionBase.replayInProgress>`\\"
msgstr ""

#: ../../None:72:<autosummary>:1
msgid "A Boolean specifying whether Abaqus is executing a replay file."
msgstr ""

#: ../../None:72:<autosummary>:1
msgid ""
":py:obj:`kernelMemoryFootprint "
"<abaqus.Session.SessionBase.SessionBase.kernelMemoryFootprint>`\\"
msgstr ""

#: ../../None:72:<autosummary>:1
msgid ""
"A Float specifying the memory usage value for the Abaqus/CAE kernel "
"process in megabytes."
msgstr ""

#: ../../None:72:<autosummary>:1
msgid ""
":py:obj:`kernelMemoryMaxFootprint "
"<abaqus.Session.SessionBase.SessionBase.kernelMemoryMaxFootprint>`\\"
msgstr ""

#: ../../None:72:<autosummary>:1
msgid ""
"A Float specifying the maximum value for the memory usage for the "
"Abaqus/CAE kernel process in megabytes."
msgstr ""

#: ../../None:72:<autosummary>:1
msgid ""
":py:obj:`kernelMemoryLimit "
"<abaqus.Session.SessionBase.SessionBase.kernelMemoryLimit>`\\"
msgstr ""

#: ../../None:72:<autosummary>:1
msgid ""
"A Float specifying the limit for the memory use for the Abaqus/CAE kernel"
" process in megabytes."
msgstr ""

#: ../../None:72:<autosummary>:1
msgid ":py:obj:`colors <abaqus.Session.SessionBase.SessionBase.colors>`\\"
msgstr ""

#: ../../None:72:<autosummary>:1
msgid "A repository of Color objects."
msgstr ""

#: ../../None:72:<autosummary>:1
msgid ""
":py:obj:`journalOptions "
"<abaqus.Session.SessionBase.SessionBase.journalOptions>`\\"
msgstr ""

#: ../../None:72:<autosummary>:1
msgid ""
"A JournalOptions object specifying how to record selection of geometry in"
" the journal and replay files."
msgstr ""

#: ../../None:72:<autosummary>:1
msgid ""
":py:obj:`memoryReductionOptions "
"<abaqus.Session.SessionBase.SessionBase.memoryReductionOptions>`\\"
msgstr ""

#: ../../None:72:<autosummary>:1
msgid ""
"A MemoryReductionOptions object specifying options for running in reduced"
" memory mode."
msgstr ""

#: ../../None:72:<autosummary>:1
msgid ":py:obj:`nodeQuery <abaqus.Session.SessionBase.SessionBase.nodeQuery>`\\"
msgstr ""

#: ../../None:72:<autosummary>:1
msgid "A NodeQuery object specifying nodes and their coordinates in a path."
msgstr ""

#: ../../None:72:<autosummary>:1
msgid ""
":py:obj:`sketcherOptions "
"<abaqus.Session.SessionBase.SessionBase.sketcherOptions>`\\"
msgstr ""

#: ../../None:72:<autosummary>:1
msgid ""
"A ConstrainedSketcherOptions object specifying common options for all "
"sketches."
msgstr ""

#: ../../None:72:<autosummary>:1
msgid ""
":py:obj:`viewerOptions "
"<abaqus.Session.SessionBase.SessionBase.viewerOptions>`\\"
msgstr ""

#: ../../None:72:<autosummary>:1
msgid "A ViewerOptions object."
msgstr ""

#: ../../None:72:<autosummary>:1
msgid ""
":py:obj:`animationOptions "
"<abaqus.Session.SessionBase.SessionBase.animationOptions>`\\"
msgstr ""

#: ../../None:72:<autosummary>:1
msgid "An AnimationOptions object."
msgstr ""

#: ../../None:72:<autosummary>:1
msgid ":py:obj:`aviOptions <abaqus.Session.SessionBase.SessionBase.aviOptions>`\\"
msgstr ""

#: ../../None:72:<autosummary>:1
msgid "An AVIOptions object."
msgstr ""

#: ../../None:72:<autosummary>:1
msgid ""
":py:obj:`imageAnimationOptions "
"<abaqus.Session.SessionBase.SessionBase.imageAnimationOptions>`\\"
msgstr ""

#: ../../None:72:<autosummary>:1
msgid "An ImageAnimationOptions object."
msgstr ""

#: ../../None:72:<autosummary>:1
msgid ""
":py:obj:`imageAnimation "
"<abaqus.Session.SessionBase.SessionBase.imageAnimation>`\\"
msgstr ""

#: ../../None:72:<autosummary>:1
msgid "An ImageAnimation object."
msgstr ""

#: ../../None:72:<autosummary>:1
msgid ""
":py:obj:`quickTimeOptions "
"<abaqus.Session.SessionBase.SessionBase.quickTimeOptions>`\\"
msgstr ""

#: ../../None:72:<autosummary>:1
msgid "A QuickTimeOptions object."
msgstr ""

#: ../../None:72:<autosummary>:1
msgid ":py:obj:`viewports <abaqus.Session.SessionBase.SessionBase.viewports>`\\"
msgstr ""

#: ../../None:72:<autosummary>:1
msgid "A repository of Viewport objects."
msgstr ""

#: ../../None:72:<autosummary>:1
msgid ":py:obj:`customData <abaqus.Session.SessionBase.SessionBase.customData>`\\"
msgstr ""

#: ../../None:72:<autosummary>:1
msgid "A RepositorySupport object."
msgstr ""

#: ../../None:72:<autosummary>:1
msgid ""
":py:obj:`defaultFieldReportOptions "
"<abaqus.Session.SessionBase.SessionBase.defaultFieldReportOptions>`\\"
msgstr ""

#: ../../None:72:<autosummary>:1
msgid "A FieldReportOptions object."
msgstr ""

#: ../../None:72:<autosummary>:1
msgid ""
":py:obj:`defaultFreeBodyReportOptions "
"<abaqus.Session.SessionBase.SessionBase.defaultFreeBodyReportOptions>`\\"
msgstr ""

#: ../../None:72:<autosummary>:1
msgid "A FreeBodyReportOptions object."
msgstr ""

#: ../../None:72:<autosummary>:1
msgid ""
":py:obj:`fieldReportOptions "
"<abaqus.Session.SessionBase.SessionBase.fieldReportOptions>`\\"
msgstr ""

#: ../../None:72:<autosummary>:1
msgid ""
":py:obj:`freeBodyReportOptions "
"<abaqus.Session.SessionBase.SessionBase.freeBodyReportOptions>`\\"
msgstr ""

#: ../../None:72:<autosummary>:1
msgid ":py:obj:`odbs <abaqus.Session.SessionBase.SessionBase.odbs>`\\"
msgstr ""

#: ../../None:72:<autosummary>:1
msgid "A repository of Odb objects."
msgstr ""

#: ../../None:72:<autosummary>:1
msgid ""
":py:obj:`scratchOdbs "
"<abaqus.Session.SessionBase.SessionBase.scratchOdbs>`\\"
msgstr ""

#: ../../None:72:<autosummary>:1
msgid "A repository of ScratchOdb objects."
msgstr ""

#: ../../None:72:<autosummary>:1
msgid ""
":py:obj:`defaultOdbDisplay "
"<abaqus.Session.SessionBase.SessionBase.defaultOdbDisplay>`\\"
msgstr ""

#: ../../None:72:<autosummary>:1
msgid "A DefaultOdbDisplay object."
msgstr ""

#: ../../None:72:<autosummary>:1
msgid ""
":py:obj:`defaultPlot "
"<abaqus.Session.SessionBase.SessionBase.defaultPlot>`\\"
msgstr ""

#: ../../None:72:<autosummary>:1
msgid "A DefaultPlot object."
msgstr ""

#: ../../None:72:<autosummary>:1
msgid ""
":py:obj:`defaultChartOptions "
"<abaqus.Session.SessionBase.SessionBase.defaultChartOptions>`\\"
msgstr ""

#: ../../None:72:<autosummary>:1
msgid "A DefaultChartOptions object."
msgstr ""

#: ../../None:72:<autosummary>:1
msgid ":py:obj:`odbData <abaqus.Session.SessionBase.SessionBase.odbData>`\\"
msgstr ""

#: ../../None:72:<autosummary>:1
msgid "A repository of OdbData objects."
msgstr ""

#: ../../None:72:<autosummary>:1
msgid ":py:obj:`mdbData <abaqus.Session.SessionBase.SessionBase.mdbData>`\\"
msgstr ""

#: ../../None:72:<autosummary>:1
msgid "A repository of MdbData objects."
msgstr ""

#: ../../None:72:<autosummary>:1
msgid ":py:obj:`paths <abaqus.Session.SessionBase.SessionBase.paths>`\\"
msgstr ""

#: ../../None:72:<autosummary>:1
msgid "A repository of Path objects."
msgstr ""

#: ../../None:72:<autosummary>:1
msgid ":py:obj:`freeBodies <abaqus.Session.SessionBase.SessionBase.freeBodies>`\\"
msgstr ""

#: ../../None:72:<autosummary>:1
msgid "A repository of FreeBody objects."
msgstr ""

#: ../../None:72:<autosummary>:1
msgid ":py:obj:`streams <abaqus.Session.SessionBase.SessionBase.streams>`\\"
msgstr ""

#: ../../None:72:<autosummary>:1
msgid "A repository of Stream objects."
msgstr ""

#: ../../None:72:<autosummary>:1
msgid ":py:obj:`spectrums <abaqus.Session.SessionBase.SessionBase.spectrums>`\\"
msgstr ""

#: ../../None:72:<autosummary>:1
msgid "A repository of Spectrum objects."
msgstr ""

#: ../../None:72:<autosummary>:1
msgid ""
":py:obj:`currentProbeValues "
"<abaqus.Session.SessionBase.SessionBase.currentProbeValues>`\\"
msgstr ""

#: ../../None:72:<autosummary>:1
msgid "A CurrentProbeValues object."
msgstr ""

#: ../../None:72:<autosummary>:1
msgid ""
":py:obj:`defaultProbeOptions "
"<abaqus.Session.SessionBase.SessionBase.defaultProbeOptions>`\\"
msgstr ""

#: ../../None:72:<autosummary>:1
msgid "A ProbeOptions object."
msgstr ""

#: ../../None:72:<autosummary>:1
msgid ""
":py:obj:`probeOptions "
"<abaqus.Session.SessionBase.SessionBase.probeOptions>`\\"
msgstr ""

#: ../../None:72:<autosummary>:1
msgid ""
":py:obj:`probeReport "
"<abaqus.Session.SessionBase.SessionBase.probeReport>`\\"
msgstr ""

#: ../../None:72:<autosummary>:1
msgid "A ProbeReport object."
msgstr ""

#: ../../None:72:<autosummary>:1
msgid ""
":py:obj:`defaultProbeReport "
"<abaqus.Session.SessionBase.SessionBase.defaultProbeReport>`\\"
msgstr ""

#: ../../None:72:<autosummary>:1
msgid ""
":py:obj:`selectedProbeValues "
"<abaqus.Session.SessionBase.SessionBase.selectedProbeValues>`\\"
msgstr ""

#: ../../None:72:<autosummary>:1
msgid "A SelectedProbeValues object."
msgstr ""

#: ../../None:72:<autosummary>:1
msgid ""
":py:obj:`printOptions "
"<abaqus.Session.SessionBase.SessionBase.printOptions>`\\"
msgstr ""

#: ../../None:72:<autosummary>:1
msgid "A PrintOptions object."
msgstr ""

#: ../../None:72:<autosummary>:1
msgid ":py:obj:`epsOptions <abaqus.Session.SessionBase.SessionBase.epsOptions>`\\"
msgstr ""

#: ../../None:72:<autosummary>:1
msgid "An EpsOptions object."
msgstr ""

#: ../../None:72:<autosummary>:1
msgid ""
":py:obj:`pageSetupOptions "
"<abaqus.Session.SessionBase.SessionBase.pageSetupOptions>`\\"
msgstr ""

#: ../../None:72:<autosummary>:1
msgid "A PageSetupOptions object."
msgstr ""

#: ../../None:72:<autosummary>:1
msgid ":py:obj:`pngOptions <abaqus.Session.SessionBase.SessionBase.pngOptions>`\\"
msgstr ""

#: ../../None:72:<autosummary>:1
msgid "A PngOptions object."
msgstr ""

#: ../../None:72:<autosummary>:1
msgid ":py:obj:`psOptions <abaqus.Session.SessionBase.SessionBase.psOptions>`\\"
msgstr ""

#: ../../None:72:<autosummary>:1
msgid "A PsOptions object."
msgstr ""

#: ../../None:72:<autosummary>:1
msgid ":py:obj:`svgOptions <abaqus.Session.SessionBase.SessionBase.svgOptions>`\\"
msgstr ""

#: ../../None:72:<autosummary>:1
msgid "A SvgOptions object."
msgstr ""

#: ../../None:72:<autosummary>:1
msgid ""
":py:obj:`tiffOptions "
"<abaqus.Session.SessionBase.SessionBase.tiffOptions>`\\"
msgstr ""

#: ../../None:72:<autosummary>:1
msgid "A TiffOptions object."
msgstr ""

#: ../../None:72:<autosummary>:1
msgid ":py:obj:`autoColors <abaqus.Session.SessionBase.SessionBase.autoColors>`\\"
msgstr ""

#: ../../None:72:<autosummary>:1
msgid ""
"An AutoColors object specifying the color palette to be used for color "
"coding."
msgstr ""

#: ../../None:72:<autosummary>:1
msgid ":py:obj:`xyColors <abaqus.Session.SessionBase.SessionBase.xyColors>`\\"
msgstr ""

#: ../../None:72:<autosummary>:1
msgid ""
"An AutoColors object specifying the color palette to be used forXYCurve "
"objects."
msgstr ""

#: ../../None:72:<autosummary>:1
msgid ""
":py:obj:`xyDataObjects "
"<abaqus.Session.SessionBase.SessionBase.xyDataObjects>`\\"
msgstr ""

#: ../../None:72:<autosummary>:1
msgid "A repository of XYData objects."
msgstr ""

#: ../../None:72:<autosummary>:1
msgid ":py:obj:`curves <abaqus.Session.SessionBase.SessionBase.curves>`\\"
msgstr ""

#: ../../None:72:<autosummary>:1
msgid "A repository of XYCurve objects."
msgstr ""

#: ../../None:72:<autosummary>:1
msgid ":py:obj:`xyPlots <abaqus.Session.SessionBase.SessionBase.xyPlots>`\\"
msgstr ""

#: ../../None:72:<autosummary>:1
msgid "A repository of XYPlot objects."
msgstr ""

#: ../../None:72:<autosummary>:1
msgid ":py:obj:`charts <abaqus.Session.SessionBase.SessionBase.charts>`\\"
msgstr ""

#: ../../None:72:<autosummary>:1
msgid "A repository of Chart objects."
msgstr ""

#: ../../None:72:<autosummary>:1
msgid ""
":py:obj:`defaultXYReportOptions "
"<abaqus.Session.SessionBase.SessionBase.defaultXYReportOptions>`\\"
msgstr ""

#: ../../None:72:<autosummary>:1
msgid "An XYReportOptions object."
msgstr ""

#: ../../None:72:<autosummary>:1
msgid ""
":py:obj:`xyReportOptions "
"<abaqus.Session.SessionBase.SessionBase.xyReportOptions>`\\"
msgstr ""

#: ../../None:72:<autosummary>:1
msgid ":py:obj:`views <abaqus.Session.SessionBase.SessionBase.views>`\\"
msgstr ""

#: ../../None:72:<autosummary>:1
msgid "A repository of View objects."
msgstr ""

#: ../../None:72:<autosummary>:1
msgid ""
":py:obj:`networkDatabaseConnectors "
"<abaqus.Session.SessionBase.SessionBase.networkDatabaseConnectors>`\\"
msgstr ""

#: ../../None:72:<autosummary>:1
msgid "A repository of NetworkDatabaseConnector objects."
msgstr ""

#: ../../None:72:<autosummary>:1
msgid ""
":py:obj:`displayGroups "
"<abaqus.Session.SessionBase.SessionBase.displayGroups>`\\"
msgstr ""

#: ../../None:72:<autosummary>:1
msgid "A repository of DisplayGroup objects."
msgstr ""

#: ../../None:72:<autosummary>:1
msgid ""
":py:obj:`graphicsInfo "
"<abaqus.Session.SessionBase.SessionBase.graphicsInfo>`\\"
msgstr ""

#: ../../None:72:<autosummary>:1
msgid "A GraphicsInfo object."
msgstr ""

#: ../../None:72:<autosummary>:1
msgid ""
":py:obj:`defaultGraphicsOptions "
"<abaqus.Session.SessionBase.SessionBase.defaultGraphicsOptions>`\\"
msgstr ""

#: ../../None:72:<autosummary>:1
msgid "A GraphicsOptions object."
msgstr ""

#: ../../None:72:<autosummary>:1
msgid ""
":py:obj:`graphicsOptions "
"<abaqus.Session.SessionBase.SessionBase.graphicsOptions>`\\"
msgstr ""

#: ../../None:72:<autosummary>:1
msgid ""
":py:obj:`defaultViewportAnnotationOptions "
"<abaqus.Session.SessionBase.SessionBase.defaultViewportAnnotationOptions>`\\"
msgstr ""

#: ../../None:72:<autosummary>:1
msgid "A ViewportAnnotationOptions object."
msgstr ""

#: ../../None:72:<autosummary>:1
msgid ":py:obj:`queues <abaqus.Session.SessionBase.SessionBase.queues>`\\"
msgstr ""

#: ../../None:72:<autosummary>:1
msgid "A repository of Queue objects."
msgstr ""

#: ../../None:72:<autosummary>:1
msgid ""
":py:obj:`currentViewportName "
"<abaqus.Session.SessionBase.SessionBase.currentViewportName>`\\"
msgstr ""

#: ../../None:72:<autosummary>:1
msgid "A String specifying the name of the current viewport."
msgstr ""

#: ../../None:72:<autosummary>:1
msgid ""
":py:obj:`sessionState "
"<abaqus.Session.SessionBase.SessionBase.sessionState>`\\"
msgstr ""

#: ../../None:72:<autosummary>:1
msgid "A Dictionary object specifying the viewports and their associated models."
msgstr ""

#: ../../None:72:<autosummary>:1
msgid ":py:obj:`images <abaqus.Session.SessionBase.SessionBase.images>`\\"
msgstr ""

#: ../../None:72:<autosummary>:1
msgid "A repository of Image objects."
msgstr ""

#: ../../None:72:<autosummary>:1
msgid ":py:obj:`movies <abaqus.Session.SessionBase.SessionBase.movies>`\\"
msgstr ""

#: ../../None:72:<autosummary>:1
msgid "A repository of Movie objects."
msgstr ""

#: ../../None:72:<autosummary>:1
msgid ""
":py:obj:`defaultLightOptions "
"<abaqus.Session.SessionBase.SessionBase.defaultLightOptions>`\\"
msgstr ""

#: ../../None:72:<autosummary>:1
msgid "A LightOptions object."
msgstr ""

#: ../../None:72:<autosummary>:1
msgid ""
":py:obj:`drawingArea "
"<abaqus.Session.SessionBase.SessionBase.drawingArea>`\\"
msgstr ""

#: ../../None:72:<autosummary>:1
msgid "A DrawingArea object."
msgstr ""

#: ../../None:72:<autosummary>:1
msgid ""
":py:obj:`defaultMesherOptions "
"<abaqus.Session.SessionBase.SessionBase.defaultMesherOptions>`\\"
msgstr ""

#: ../../None:72:<autosummary>:1
msgid ""
"A MesherOptions object specifying how to control default settings in the "
"Mesh module."
msgstr ""

#: ../../None:72:<autosummary>:1
msgid ":py:obj:`drawings <abaqus.Session.SessionBase.SessionBase.drawings>`\\"
msgstr ""

#: ../../None:72:<autosummary>:1
msgid "A repository of Drawing objects."
msgstr ""

#: abaqus.DisplayGroup.DisplayGroup.DisplayGroup
#: abaqus.DisplayGroup.DisplayGroupInstance.DisplayGroupInstance
#: abaqus.DisplayGroup.DisplayGroupInstanceRepository.DisplayGroupInstanceRepository
#: abaqus.DisplayGroup.DisplayGroupSession.DisplayGroupSession
#: abaqus.DisplayGroup.Leaf.Leaf
#: abaqus.DisplayGroup.LeafFromConstraintNames.LeafFromConstraintNames
#: abaqus.DisplayGroup.LeafFromDatums.LeafFromDatums
#: abaqus.DisplayGroup.LeafFromDisplayGroup.LeafFromDisplayGroup
#: abaqus.DisplayGroup.LeafFromElementLabels.LeafFromElementLabels
#: abaqus.DisplayGroup.LeafFromElementSets.LeafFromElementSets
#: abaqus.DisplayGroup.LeafFromElementVarRange.LeafFromElementVarRange
#: abaqus.DisplayGroup.LeafFromGeometry.LeafFromGeometry
#: abaqus.DisplayGroup.LeafFromInstance.LeafFromInstance
#: abaqus.DisplayGroup.LeafFromInstanceElementLabels.LeafFromInstanceElementLabels
#: abaqus.DisplayGroup.LeafFromInstanceNodeLabels.LeafFromInstanceNodeLabels
#: abaqus.DisplayGroup.LeafFromMeshElementLabels.LeafFromMeshElementLabels
#: abaqus.DisplayGroup.LeafFromMeshNodeLabels.LeafFromMeshNodeLabels
#: abaqus.DisplayGroup.LeafFromMeshSurfaceSets.LeafFromMeshSurfaceSets
#: abaqus.DisplayGroup.LeafFromModelElemLabels.LeafFromModelElemLabels
#: abaqus.DisplayGroup.LeafFromModelNodeLabels.LeafFromModelNodeLabels
#: abaqus.DisplayGroup.LeafFromNodeLabels.LeafFromNodeLabels
#: abaqus.DisplayGroup.LeafFromNodeSets.LeafFromNodeSets
#: abaqus.DisplayGroup.LeafFromNodeVarRange.LeafFromNodeVarRange
#: abaqus.DisplayGroup.LeafFromOdbEdgePick.LeafFromOdbEdgePick
#: abaqus.DisplayGroup.LeafFromOdbElementLayups.LeafFromOdbElementLayups
#: abaqus.DisplayGroup.LeafFromOdbElementMaterials.LeafFromOdbElementMaterials
#: abaqus.DisplayGroup.LeafFromOdbElementPick.LeafFromOdbElementPick
#: abaqus.DisplayGroup.LeafFromOdbElementPlies.LeafFromOdbElementPlies
#: abaqus.DisplayGroup.LeafFromOdbElementSections.LeafFromOdbElementSections
#: abaqus.DisplayGroup.LeafFromOdbElementTypes.LeafFromOdbElementTypes
#: abaqus.DisplayGroup.LeafFromOdbNodePick.LeafFromOdbNodePick
#: abaqus.DisplayGroup.LeafFromPartElementLabels.LeafFromPartElementLabels
#: abaqus.DisplayGroup.LeafFromPartInstance.LeafFromPartInstance
#: abaqus.DisplayGroup.LeafFromPartNodeLabels.LeafFromPartNodeLabels
#: abaqus.DisplayGroup.LeafFromReferencePoint.LeafFromReferencePoint
#: abaqus.DisplayGroup.LeafFromSets.LeafFromSets
#: abaqus.DisplayGroup.LeafFromSurfaceSets.LeafFromSurfaceSets
#: abaqus.DisplayGroup.LeafFromSurfaceVarRange.LeafFromSurfaceVarRange of
msgid "Public Methods:"
msgstr ""

#: ../../None:3:<autosummary>:1
msgid ""
":py:obj:`DisplayGroup "
"<abaqus.DisplayGroup.DisplayGroupSession.DisplayGroupSession.DisplayGroup>`\\"
" \\(name\\, leaf\\)"
msgstr ""

#: ../../None:10:<autosummary>:1 ../../None:3:<autosummary>:1
#: abaqus.DisplayGroup.DisplayGroup.DisplayGroup.__init__:1
#: abaqus.DisplayGroup.DisplayGroupSession.DisplayGroupSession.DisplayGroup:1
#: of
msgid "This method creates a DisplayGroup object."
msgstr ""

#: ../../None:17:<autosummary>:1
msgid ""
":py:obj:`setValues <abaqus.Session.SessionBase.SessionBase.setValues>`\\ "
"\\(\\[kernelMemoryLimit\\]\\)"
msgstr ""

#: ../../None:17:<autosummary>:1
msgid "This method modifies the Session object."
msgstr ""

#: ../../None:17:<autosummary>:1
msgid ""
":py:obj:`enableCADConnection "
"<abaqus.Session.SessionBase.SessionBase.enableCADConnection>`\\ "
"\\(CADName\\[\\, portNum\\]\\)"
msgstr ""

#: ../../None:17:<autosummary>:1
msgid ""
"This method enables the Abaqus/CAE listening port for the specified "
"**CAD** system."
msgstr ""

#: ../../None:17:<autosummary>:1
msgid ""
":py:obj:`isCADConnectionEnabled "
"<abaqus.Session.SessionBase.SessionBase.isCADConnectionEnabled>`\\ \\(\\)"
msgstr ""

#: ../../None:17:<autosummary>:1
msgid "This method checks the status of CAD Connection."
msgstr ""

#: ../../None:17:<autosummary>:1
msgid ""
":py:obj:`disableCADConnection "
"<abaqus.Session.SessionBase.SessionBase.disableCADConnection>`\\ "
"\\(CADName\\)"
msgstr ""

#: ../../None:17:<autosummary>:1
msgid ""
"This method disables an associative import CAD connection that was "
"enabled."
msgstr ""

#: ../../None:17:<autosummary>:1
msgid ""
":py:obj:`enableParameterUpdate "
"<abaqus.Session.SessionBase.SessionBase.enableParameterUpdate>`\\ "
"\\(CADName\\, CADVersion\\[\\, ...\\]\\)"
msgstr ""

#: ../../None:17:<autosummary>:1
msgid ""
"This method enables parameter updates for ProE and NX by establishing a "
"connection with the listening port previously setup by the CAD "
"application."
msgstr ""

#: ../../None:17:<autosummary>:1
msgid ""
":py:obj:`setCADPortNumber "
"<abaqus.Session.SessionBase.SessionBase.setCADPortNumber>`\\ "
"\\(CADName\\, Port\\)"
msgstr ""

#: ../../None:17:<autosummary>:1
msgid ""
"This method enables parameter updates for CATIA V5 and CATIA V6 by "
"establishing a connection with the listening port previously setup by the"
" CAD application."
msgstr ""

#: ../../None:17:<autosummary>:1
msgid ""
":py:obj:`updateCADParameters "
"<abaqus.Session.SessionBase.SessionBase.updateCADParameters>`\\ "
"\\(modelName\\, CADName\\, ...\\)"
msgstr ""

#: ../../None:17:<autosummary>:1
msgid ""
"This method updates the parameters for the specified model using the "
"specified parameter file."
msgstr ""

#: ../../None:17:<autosummary>:1
msgid ""
":py:obj:`disableParameterUpdate "
"<abaqus.Session.SessionBase.SessionBase.disableParameterUpdate>`\\ "
"\\(CADName\\)"
msgstr ""

#: ../../None:17:<autosummary>:1
msgid "This method disables an associative CAD connection using parameters."
msgstr ""

#: ../../None:17:<autosummary>:1
msgid ""
":py:obj:`printToFile "
"<abaqus.Session.SessionBase.SessionBase.printToFile>`\\ \\(fileName\\[\\,"
" format\\, ...\\]\\)"
msgstr ""

#: ../../None:17:<autosummary>:1
msgid ""
"This method prints canvas objects to a file using the attributes stored "
"in the PrintOptions object and the appropriate format options object."
msgstr ""

#: ../../None:17:<autosummary>:1
msgid ""
":py:obj:`printToPrinter "
"<abaqus.Session.SessionBase.SessionBase.printToPrinter>`\\ "
"\\(\\[printCommand\\, numCopies\\, ...\\]\\)"
msgstr ""

#: ../../None:17:<autosummary>:1
msgid ""
"This method prints canvas objects to a Windows printer or to a PostScript"
" printer."
msgstr ""

#: ../../None:17:<autosummary>:1
msgid ""
":py:obj:`saveOptions "
"<abaqus.Session.SessionBase.SessionBase.saveOptions>`\\ \\(directory\\)"
msgstr ""

#: ../../None:17:<autosummary>:1
msgid "This method saves your customized display settings."
msgstr ""

#: ../../None:17:<autosummary>:1
msgid ""
":py:obj:`writeVrmlFile "
"<abaqus.Session.SessionBase.SessionBase.writeVrmlFile>`\\ "
"\\(fileName\\[\\, format\\, canvasObjects\\]\\)"
msgstr ""

#: ../../None:17:<autosummary>:1
msgid "This method exports the current viewport objects to a file."
msgstr ""

#: ../../None:17:<autosummary>:1
msgid ""
":py:obj:`write3DXMLFile "
"<abaqus.Session.SessionBase.SessionBase.write3DXMLFile>`\\ "
"\\(fileName\\[\\, format\\, canvasObjects\\]\\)"
msgstr ""

#: ../../None:17:<autosummary>:1
msgid ""
":py:obj:`writeOBJFile "
"<abaqus.Session.SessionBase.SessionBase.writeOBJFile>`\\ "
"\\(fileName\\[\\, canvasObjects\\]\\)"
msgstr ""

#: ../../None:17:<autosummary>:1
msgid ""
":py:obj:`openOdb <abaqus.Session.SessionBase.SessionBase.openOdb>`\\ "
"\\(name\\[\\, path\\, readOnly\\]\\)"
msgstr ""

#: ../../None:17:<autosummary>:1
msgid ""
"This method opens an existing output database (`.odb`) file and creates a"
" new Odb object. This method is accessed only via the session object "
"inside Abaqus/CAE and adds the new Odb object to the session.odbs "
"repository. This method allows you to open multiple output databases at "
"the same time and to use the repository key to specify a particular "
"output database. For example::."
msgstr ""

#: abaqus.DisplayGroup.DisplayGroup.DisplayGroup:1
#: abaqus.DisplayGroup.DisplayGroupArray.DisplayGroupArray:1
#: abaqus.DisplayGroup.DisplayGroupInstance.DisplayGroupInstance:1
#: abaqus.DisplayGroup.DisplayGroupInstanceRepository.DisplayGroupInstanceRepository:1
#: abaqus.DisplayGroup.DisplayGroupSession.DisplayGroupSession:1
#: abaqus.DisplayGroup.Leaf.Leaf:1
#: abaqus.DisplayGroup.LeafFromConstraintNames.LeafFromConstraintNames:1
#: abaqus.DisplayGroup.LeafFromDatums.LeafFromDatums:1
#: abaqus.DisplayGroup.LeafFromDisplayGroup.LeafFromDisplayGroup:1
#: abaqus.DisplayGroup.LeafFromElementLabels.LeafFromElementLabels:1
#: abaqus.DisplayGroup.LeafFromElementSets.LeafFromElementSets:1
#: abaqus.DisplayGroup.LeafFromElementVarRange.LeafFromElementVarRange:1
#: abaqus.DisplayGroup.LeafFromGeometry.LeafFromGeometry:1
#: abaqus.DisplayGroup.LeafFromInstance.LeafFromInstance:1
#: abaqus.DisplayGroup.LeafFromInstanceElementLabels.LeafFromInstanceElementLabels:1
#: abaqus.DisplayGroup.LeafFromInstanceNodeLabels.LeafFromInstanceNodeLabels:1
#: abaqus.DisplayGroup.LeafFromMeshElementLabels.LeafFromMeshElementLabels:1
#: abaqus.DisplayGroup.LeafFromMeshNodeLabels.LeafFromMeshNodeLabels:1
#: abaqus.DisplayGroup.LeafFromMeshSurfaceSets.LeafFromMeshSurfaceSets:1
#: abaqus.DisplayGroup.LeafFromModelElemLabels.LeafFromModelElemLabels:1
#: abaqus.DisplayGroup.LeafFromModelNodeLabels.LeafFromModelNodeLabels:1
#: abaqus.DisplayGroup.LeafFromNodeLabels.LeafFromNodeLabels:1
#: abaqus.DisplayGroup.LeafFromNodeSets.LeafFromNodeSets:1
#: abaqus.DisplayGroup.LeafFromNodeVarRange.LeafFromNodeVarRange:1
#: abaqus.DisplayGroup.LeafFromOdbEdgePick.LeafFromOdbEdgePick:1
#: abaqus.DisplayGroup.LeafFromOdbElementLayups.LeafFromOdbElementLayups:1
#: abaqus.DisplayGroup.LeafFromOdbElementMaterials.LeafFromOdbElementMaterials:1
#: abaqus.DisplayGroup.LeafFromOdbElementPick.LeafFromOdbElementPick:1
#: abaqus.DisplayGroup.LeafFromOdbElementPlies.LeafFromOdbElementPlies:1
#: abaqus.DisplayGroup.LeafFromOdbElementSections.LeafFromOdbElementSections:1
#: abaqus.DisplayGroup.LeafFromOdbElementTypes.LeafFromOdbElementTypes:1
#: abaqus.DisplayGroup.LeafFromOdbNodePick.LeafFromOdbNodePick:1
#: abaqus.DisplayGroup.LeafFromPartElementLabels.LeafFromPartElementLabels:1
#: abaqus.DisplayGroup.LeafFromPartInstance.LeafFromPartInstance:1
#: abaqus.DisplayGroup.LeafFromPartNodeLabels.LeafFromPartNodeLabels:1
#: abaqus.DisplayGroup.LeafFromReferencePoint.LeafFromReferencePoint:1
#: abaqus.DisplayGroup.LeafFromSets.LeafFromSets:1
#: abaqus.DisplayGroup.LeafFromSurfaceSets.LeafFromSurfaceSets:1
#: abaqus.DisplayGroup.LeafFromSurfaceVarRange.LeafFromSurfaceVarRange:1 of
msgid "Member Details:"
msgstr ""

#: abaqus.DisplayGroup.DisplayGroup.DisplayGroup.__init__:4
#: abaqus.DisplayGroup.DisplayGroupSession.DisplayGroupSession.DisplayGroup:4
#: abaqus.DisplayGroup.Leaf.Leaf.__init__:4
#: abaqus.DisplayGroup.LeafFromConstraintNames.LeafFromConstraintNames.__init__:5
#: abaqus.DisplayGroup.LeafFromDatums.LeafFromDatums.__init__:5
#: abaqus.DisplayGroup.LeafFromDisplayGroup.LeafFromDisplayGroup.__init__:4
#: abaqus.DisplayGroup.LeafFromElementLabels.LeafFromElementLabels.__init__:5
#: abaqus.DisplayGroup.LeafFromElementSets.LeafFromElementSets.__init__:4
#: abaqus.DisplayGroup.LeafFromElementVarRange.LeafFromElementVarRange.__init__:4
#: abaqus.DisplayGroup.LeafFromGeometry.LeafFromGeometry.__init__:7
#: abaqus.DisplayGroup.LeafFromInstance.LeafFromInstance.__init__:4
#: abaqus.DisplayGroup.LeafFromInstanceElementLabels.LeafFromInstanceElementLabels.__init__:5
#: abaqus.DisplayGroup.LeafFromInstanceNodeLabels.LeafFromInstanceNodeLabels.__init__:5
#: abaqus.DisplayGroup.LeafFromMeshElementLabels.LeafFromMeshElementLabels.__init__:5
#: abaqus.DisplayGroup.LeafFromMeshNodeLabels.LeafFromMeshNodeLabels.__init__:5
#: abaqus.DisplayGroup.LeafFromMeshSurfaceSets.LeafFromMeshSurfaceSets.__init__:4
#: abaqus.DisplayGroup.LeafFromModelElemLabels.LeafFromModelElemLabels.__init__:5
#: abaqus.DisplayGroup.LeafFromModelNodeLabels.LeafFromModelNodeLabels.__init__:5
#: abaqus.DisplayGroup.LeafFromNodeLabels.LeafFromNodeLabels.__init__:5
#: abaqus.DisplayGroup.LeafFromNodeSets.LeafFromNodeSets.__init__:4
#: abaqus.DisplayGroup.LeafFromNodeVarRange.LeafFromNodeVarRange.__init__:4
#: abaqus.DisplayGroup.LeafFromOdbEdgePick.LeafFromOdbEdgePick.__init__:6
#: abaqus.DisplayGroup.LeafFromOdbElementLayups.LeafFromOdbElementLayups.__init__:5
#: abaqus.DisplayGroup.LeafFromOdbElementMaterials.LeafFromOdbElementMaterials.__init__:5
#: abaqus.DisplayGroup.LeafFromOdbElementPick.LeafFromOdbElementPick.__init__:6
#: abaqus.DisplayGroup.LeafFromOdbElementPlies.LeafFromOdbElementPlies.__init__:5
#: abaqus.DisplayGroup.LeafFromOdbElementSections.LeafFromOdbElementSections.__init__:5
#: abaqus.DisplayGroup.LeafFromOdbElementTypes.LeafFromOdbElementTypes.__init__:5
#: abaqus.DisplayGroup.LeafFromOdbNodePick.LeafFromOdbNodePick.__init__:6
#: abaqus.DisplayGroup.LeafFromPartElementLabels.LeafFromPartElementLabels.__init__:5
#: abaqus.DisplayGroup.LeafFromPartInstance.LeafFromPartInstance.__init__:4
#: abaqus.DisplayGroup.LeafFromPartNodeLabels.LeafFromPartNodeLabels.__init__:5
#: abaqus.DisplayGroup.LeafFromReferencePoint.LeafFromReferencePoint.__init__:4
#: abaqus.DisplayGroup.LeafFromSets.LeafFromSets.__init__:4
#: abaqus.DisplayGroup.LeafFromSurfaceSets.LeafFromSurfaceSets.__init__:4
#: abaqus.DisplayGroup.LeafFromSurfaceVarRange.LeafFromSurfaceVarRange.__init__:4
#: of
msgid "This function can be accessed by::"
msgstr ""

#: abaqus.DisplayGroup.DisplayGroup.DisplayGroup:19
#: abaqus.DisplayGroup.DisplayGroupSession.DisplayGroupSession.DisplayGroup:9
#: of
msgid ""
"Check `DisplayGroup on help.3ds.com/2020 "
"<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-displaygrouppyc.htm?contextscope=all>`__."
msgstr ""

#: abaqus.DisplayGroup.DisplayGroup.DisplayGroup.__init__
#: abaqus.DisplayGroup.DisplayGroup.DisplayGroup.add
#: abaqus.DisplayGroup.DisplayGroup.DisplayGroup.either
#: abaqus.DisplayGroup.DisplayGroup.DisplayGroup.intersect
#: abaqus.DisplayGroup.DisplayGroup.DisplayGroup.remove
#: abaqus.DisplayGroup.DisplayGroup.DisplayGroup.replace
#: abaqus.DisplayGroup.DisplayGroupInstance.DisplayGroupInstance.setValues
#: abaqus.DisplayGroup.DisplayGroupInstanceRepository.DisplayGroupInstanceRepository.syncOptions
#: abaqus.DisplayGroup.DisplayGroupSession.DisplayGroupSession.DisplayGroup
#: abaqus.DisplayGroup.Leaf.Leaf.__init__
#: abaqus.DisplayGroup.LeafFromConstraintNames.LeafFromConstraintNames.__init__
#: abaqus.DisplayGroup.LeafFromDatums.LeafFromDatums.__init__
#: abaqus.DisplayGroup.LeafFromDisplayGroup.LeafFromDisplayGroup.__init__
#: abaqus.DisplayGroup.LeafFromElementLabels.LeafFromElementLabels.__init__
#: abaqus.DisplayGroup.LeafFromElementSets.LeafFromElementSets.__init__
#: abaqus.DisplayGroup.LeafFromElementVarRange.LeafFromElementVarRange.__init__
#: abaqus.DisplayGroup.LeafFromGeometry.LeafFromGeometry.__init__
#: abaqus.DisplayGroup.LeafFromInstance.LeafFromInstance.__init__
#: abaqus.DisplayGroup.LeafFromInstanceElementLabels.LeafFromInstanceElementLabels.__init__
#: abaqus.DisplayGroup.LeafFromInstanceNodeLabels.LeafFromInstanceNodeLabels.__init__
#: abaqus.DisplayGroup.LeafFromMeshElementLabels.LeafFromMeshElementLabels.__init__
#: abaqus.DisplayGroup.LeafFromMeshNodeLabels.LeafFromMeshNodeLabels.__init__
#: abaqus.DisplayGroup.LeafFromMeshSurfaceSets.LeafFromMeshSurfaceSets.__init__
#: abaqus.DisplayGroup.LeafFromModelElemLabels.LeafFromModelElemLabels.__init__
#: abaqus.DisplayGroup.LeafFromModelNodeLabels.LeafFromModelNodeLabels.__init__
#: abaqus.DisplayGroup.LeafFromNodeLabels.LeafFromNodeLabels.__init__
#: abaqus.DisplayGroup.LeafFromNodeSets.LeafFromNodeSets.__init__
#: abaqus.DisplayGroup.LeafFromNodeVarRange.LeafFromNodeVarRange.__init__
#: abaqus.DisplayGroup.LeafFromOdbEdgePick.LeafFromOdbEdgePick.__init__
#: abaqus.DisplayGroup.LeafFromOdbElementLayups.LeafFromOdbElementLayups.__init__
#: abaqus.DisplayGroup.LeafFromOdbElementMaterials.LeafFromOdbElementMaterials.__init__
#: abaqus.DisplayGroup.LeafFromOdbElementPick.LeafFromOdbElementPick.__init__
#: abaqus.DisplayGroup.LeafFromOdbElementPlies.LeafFromOdbElementPlies.__init__
#: abaqus.DisplayGroup.LeafFromOdbElementSections.LeafFromOdbElementSections.__init__
#: abaqus.DisplayGroup.LeafFromOdbElementTypes.LeafFromOdbElementTypes.__init__
#: abaqus.DisplayGroup.LeafFromOdbNodePick.LeafFromOdbNodePick.__init__
#: abaqus.DisplayGroup.LeafFromPartElementLabels.LeafFromPartElementLabels.__init__
#: abaqus.DisplayGroup.LeafFromPartInstance.LeafFromPartInstance.__init__
#: abaqus.DisplayGroup.LeafFromPartNodeLabels.LeafFromPartNodeLabels.__init__
#: abaqus.DisplayGroup.LeafFromReferencePoint.LeafFromReferencePoint.__init__
#: abaqus.DisplayGroup.LeafFromSets.LeafFromSets.__init__
#: abaqus.DisplayGroup.LeafFromSurfaceSets.LeafFromSurfaceSets.__init__
#: abaqus.DisplayGroup.LeafFromSurfaceVarRange.LeafFromSurfaceVarRange.__init__
#: of
msgid "Parameters"
msgstr ""

#: ../../None:5:<autosummary>:1 ../../None:8:<autosummary>:1 ../../docstring
#: abaqus.DisplayGroup.DisplayGroup.DisplayGroup.__init__:12
#: abaqus.DisplayGroup.DisplayGroup.DisplayGroup.name:1
#: abaqus.DisplayGroup.DisplayGroupInstance.DisplayGroupInstance.name:1
#: abaqus.DisplayGroup.DisplayGroupInstanceRepository.DisplayGroupInstanceRepository.syncOptions:8
#: abaqus.DisplayGroup.DisplayGroupSession.DisplayGroupSession.DisplayGroup:12
#: of
msgid "A String specifying the repository key."
msgstr ""

#: abaqus.DisplayGroup.DisplayGroup.DisplayGroup.__init__:14
#: abaqus.DisplayGroup.DisplayGroupSession.DisplayGroupSession.DisplayGroup:14
#: of
msgid "A Leaf object specifying the items in the display group."
msgstr ""

#: abaqus.DisplayGroup.DisplayGroup.DisplayGroup.__init__
#: abaqus.DisplayGroup.DisplayGroupInstance.DisplayGroupInstance.elements
#: abaqus.DisplayGroup.DisplayGroupInstance.DisplayGroupInstance.nodes
#: abaqus.DisplayGroup.DisplayGroupSession.DisplayGroupSession.DisplayGroup
#: abaqus.DisplayGroup.Leaf.Leaf.__init__
#: abaqus.DisplayGroup.LeafFromDatums.LeafFromDatums.__init__
#: abaqus.DisplayGroup.LeafFromDisplayGroup.LeafFromDisplayGroup.__init__
#: abaqus.DisplayGroup.LeafFromElementLabels.LeafFromElementLabels.__init__
#: abaqus.DisplayGroup.LeafFromElementSets.LeafFromElementSets.__init__
#: abaqus.DisplayGroup.LeafFromElementVarRange.LeafFromElementVarRange.__init__
#: abaqus.DisplayGroup.LeafFromGeometry.LeafFromGeometry.__init__
#: abaqus.DisplayGroup.LeafFromInstance.LeafFromInstance.__init__
#: abaqus.DisplayGroup.LeafFromInstanceElementLabels.LeafFromInstanceElementLabels.__init__
#: abaqus.DisplayGroup.LeafFromInstanceNodeLabels.LeafFromInstanceNodeLabels.__init__
#: abaqus.DisplayGroup.LeafFromMeshElementLabels.LeafFromMeshElementLabels.__init__
#: abaqus.DisplayGroup.LeafFromMeshNodeLabels.LeafFromMeshNodeLabels.__init__
#: abaqus.DisplayGroup.LeafFromMeshSurfaceSets.LeafFromMeshSurfaceSets.__init__
#: abaqus.DisplayGroup.LeafFromModelElemLabels.LeafFromModelElemLabels.__init__
#: abaqus.DisplayGroup.LeafFromModelNodeLabels.LeafFromModelNodeLabels.__init__
#: abaqus.DisplayGroup.LeafFromNodeLabels.LeafFromNodeLabels.__init__
#: abaqus.DisplayGroup.LeafFromNodeSets.LeafFromNodeSets.__init__
#: abaqus.DisplayGroup.LeafFromNodeVarRange.LeafFromNodeVarRange.__init__
#: abaqus.DisplayGroup.LeafFromOdbEdgePick.LeafFromOdbEdgePick.__init__
#: abaqus.DisplayGroup.LeafFromOdbElementLayups.LeafFromOdbElementLayups.__init__
#: abaqus.DisplayGroup.LeafFromOdbElementMaterials.LeafFromOdbElementMaterials.__init__
#: abaqus.DisplayGroup.LeafFromOdbElementPick.LeafFromOdbElementPick.__init__
#: abaqus.DisplayGroup.LeafFromOdbElementPlies.LeafFromOdbElementPlies.__init__
#: abaqus.DisplayGroup.LeafFromOdbElementSections.LeafFromOdbElementSections.__init__
#: abaqus.DisplayGroup.LeafFromOdbElementTypes.LeafFromOdbElementTypes.__init__
#: abaqus.DisplayGroup.LeafFromOdbNodePick.LeafFromOdbNodePick.__init__
#: abaqus.DisplayGroup.LeafFromPartElementLabels.LeafFromPartElementLabels.__init__
#: abaqus.DisplayGroup.LeafFromPartInstance.LeafFromPartInstance.__init__
#: abaqus.DisplayGroup.LeafFromPartNodeLabels.LeafFromPartNodeLabels.__init__
#: abaqus.DisplayGroup.LeafFromReferencePoint.LeafFromReferencePoint.__init__
#: abaqus.DisplayGroup.LeafFromSets.LeafFromSets.__init__
#: abaqus.DisplayGroup.LeafFromSurfaceSets.LeafFromSurfaceSets.__init__
#: abaqus.DisplayGroup.LeafFromSurfaceVarRange.LeafFromSurfaceVarRange.__init__
#: of
msgid "Returns"
msgstr ""

#: abaqus.DisplayGroup.DisplayGroup.DisplayGroup.__init__:16
#: abaqus.DisplayGroup.DisplayGroupSession.DisplayGroupSession.DisplayGroup:16
#: of
msgid "A DisplayGroup object."
msgstr ""

#: abaqus.DisplayGroup.DisplayGroup.DisplayGroup.__init__
#: abaqus.DisplayGroup.DisplayGroupInstance.DisplayGroupInstance.elements
#: abaqus.DisplayGroup.DisplayGroupInstance.DisplayGroupInstance.nodes
#: abaqus.DisplayGroup.DisplayGroupSession.DisplayGroupSession.DisplayGroup
#: abaqus.DisplayGroup.Leaf.Leaf.__init__
#: abaqus.DisplayGroup.LeafFromConstraintNames.LeafFromConstraintNames.__init__
#: abaqus.DisplayGroup.LeafFromDatums.LeafFromDatums.__init__
#: abaqus.DisplayGroup.LeafFromDisplayGroup.LeafFromDisplayGroup.__init__
#: abaqus.DisplayGroup.LeafFromElementLabels.LeafFromElementLabels.__init__
#: abaqus.DisplayGroup.LeafFromElementSets.LeafFromElementSets.__init__
#: abaqus.DisplayGroup.LeafFromElementVarRange.LeafFromElementVarRange.__init__
#: abaqus.DisplayGroup.LeafFromGeometry.LeafFromGeometry.__init__
#: abaqus.DisplayGroup.LeafFromInstance.LeafFromInstance.__init__
#: abaqus.DisplayGroup.LeafFromInstanceElementLabels.LeafFromInstanceElementLabels.__init__
#: abaqus.DisplayGroup.LeafFromInstanceNodeLabels.LeafFromInstanceNodeLabels.__init__
#: abaqus.DisplayGroup.LeafFromMeshElementLabels.LeafFromMeshElementLabels.__init__
#: abaqus.DisplayGroup.LeafFromMeshNodeLabels.LeafFromMeshNodeLabels.__init__
#: abaqus.DisplayGroup.LeafFromMeshSurfaceSets.LeafFromMeshSurfaceSets.__init__
#: abaqus.DisplayGroup.LeafFromModelElemLabels.LeafFromModelElemLabels.__init__
#: abaqus.DisplayGroup.LeafFromModelNodeLabels.LeafFromModelNodeLabels.__init__
#: abaqus.DisplayGroup.LeafFromNodeLabels.LeafFromNodeLabels.__init__
#: abaqus.DisplayGroup.LeafFromNodeSets.LeafFromNodeSets.__init__
#: abaqus.DisplayGroup.LeafFromNodeVarRange.LeafFromNodeVarRange.__init__
#: abaqus.DisplayGroup.LeafFromOdbEdgePick.LeafFromOdbEdgePick.__init__
#: abaqus.DisplayGroup.LeafFromOdbElementLayups.LeafFromOdbElementLayups.__init__
#: abaqus.DisplayGroup.LeafFromOdbElementMaterials.LeafFromOdbElementMaterials.__init__
#: abaqus.DisplayGroup.LeafFromOdbElementPick.LeafFromOdbElementPick.__init__
#: abaqus.DisplayGroup.LeafFromOdbElementPlies.LeafFromOdbElementPlies.__init__
#: abaqus.DisplayGroup.LeafFromOdbElementSections.LeafFromOdbElementSections.__init__
#: abaqus.DisplayGroup.LeafFromOdbElementTypes.LeafFromOdbElementTypes.__init__
#: abaqus.DisplayGroup.LeafFromOdbNodePick.LeafFromOdbNodePick.__init__
#: abaqus.DisplayGroup.LeafFromPartElementLabels.LeafFromPartElementLabels.__init__
#: abaqus.DisplayGroup.LeafFromPartInstance.LeafFromPartInstance.__init__
#: abaqus.DisplayGroup.LeafFromPartNodeLabels.LeafFromPartNodeLabels.__init__
#: abaqus.DisplayGroup.LeafFromReferencePoint.LeafFromReferencePoint.__init__
#: abaqus.DisplayGroup.LeafFromSets.LeafFromSets.__init__
#: abaqus.DisplayGroup.LeafFromSurfaceSets.LeafFromSurfaceSets.__init__
#: abaqus.DisplayGroup.LeafFromSurfaceVarRange.LeafFromSurfaceVarRange.__init__
#: of
msgid "Return type"
msgstr ""

#: abaqus.DisplayGroup.DisplayGroup.DisplayGroup.__init__:17
#: abaqus.DisplayGroup.DisplayGroupSession.DisplayGroupSession.DisplayGroup:17
#: of
msgid ":class:`DisplayGroup`"
msgstr ""

#: ../../reference/session/display.md:17
msgid "Other Classes"
msgstr ""

#: abaqus.DisplayGroup.DisplayGroup.DisplayGroup:1
#: abaqus.DisplayGroup.DisplayGroupInstance.DisplayGroupInstance:1
#: abaqus.DisplayGroup.DisplayGroupInstanceRepository.DisplayGroupInstanceRepository:1
#: abaqus.DisplayGroup.Leaf.Leaf:1 of
msgid "Bases: :py:class:`object`"
msgstr ""

#: abaqus.DisplayGroup.DisplayGroup.DisplayGroup:1 of
msgid ""
"DisplayGroup objects are used to select a subset of the entities "
"displayed in the viewport."
msgstr ""

#: abaqus.DisplayGroup.DisplayGroup.DisplayGroup:5
#: abaqus.DisplayGroup.DisplayGroupInstance.DisplayGroupInstance:7
#: abaqus.DisplayGroup.DisplayGroupInstanceRepository.DisplayGroupInstanceRepository:6
#: abaqus.DisplayGroup.Leaf.Leaf:9
#: abaqus.DisplayGroup.LeafFromConstraintNames.LeafFromConstraintNames:9
#: abaqus.DisplayGroup.LeafFromDatums.LeafFromDatums:8
#: abaqus.DisplayGroup.LeafFromDisplayGroup.LeafFromDisplayGroup:7
#: abaqus.DisplayGroup.LeafFromElementLabels.LeafFromElementLabels:9
#: abaqus.DisplayGroup.LeafFromElementSets.LeafFromElementSets:8
#: abaqus.DisplayGroup.LeafFromElementVarRange.LeafFromElementVarRange:8
#: abaqus.DisplayGroup.LeafFromGeometry.LeafFromGeometry:8
#: abaqus.DisplayGroup.LeafFromInstance.LeafFromInstance:8
#: abaqus.DisplayGroup.LeafFromInstanceElementLabels.LeafFromInstanceElementLabels:8
#: abaqus.DisplayGroup.LeafFromInstanceNodeLabels.LeafFromInstanceNodeLabels:8
#: abaqus.DisplayGroup.LeafFromMeshElementLabels.LeafFromMeshElementLabels:8
#: abaqus.DisplayGroup.LeafFromMeshNodeLabels.LeafFromMeshNodeLabels:8
#: abaqus.DisplayGroup.LeafFromMeshSurfaceSets.LeafFromMeshSurfaceSets:8
#: abaqus.DisplayGroup.LeafFromModelElemLabels.LeafFromModelElemLabels:8
#: abaqus.DisplayGroup.LeafFromModelNodeLabels.LeafFromModelNodeLabels:8
#: abaqus.DisplayGroup.LeafFromNodeLabels.LeafFromNodeLabels:8
#: abaqus.DisplayGroup.LeafFromNodeSets.LeafFromNodeSets:8
#: abaqus.DisplayGroup.LeafFromNodeVarRange.LeafFromNodeVarRange:8
#: abaqus.DisplayGroup.LeafFromOdbEdgePick.LeafFromOdbEdgePick:8
#: abaqus.DisplayGroup.LeafFromOdbElementLayups.LeafFromOdbElementLayups:8
#: abaqus.DisplayGroup.LeafFromOdbElementMaterials.LeafFromOdbElementMaterials:8
#: abaqus.DisplayGroup.LeafFromOdbElementPick.LeafFromOdbElementPick:8
#: abaqus.DisplayGroup.LeafFromOdbElementPlies.LeafFromOdbElementPlies:8
#: abaqus.DisplayGroup.LeafFromOdbElementSections.LeafFromOdbElementSections:8
#: abaqus.DisplayGroup.LeafFromOdbElementTypes.LeafFromOdbElementTypes:8
#: abaqus.DisplayGroup.LeafFromOdbNodePick.LeafFromOdbNodePick:8
#: abaqus.DisplayGroup.LeafFromPartElementLabels.LeafFromPartElementLabels:8
#: abaqus.DisplayGroup.LeafFromPartInstance.LeafFromPartInstance:8
#: abaqus.DisplayGroup.LeafFromPartNodeLabels.LeafFromPartNodeLabels:8
#: abaqus.DisplayGroup.LeafFromReferencePoint.LeafFromReferencePoint:8
#: abaqus.DisplayGroup.LeafFromSets.LeafFromSets:8
#: abaqus.DisplayGroup.LeafFromSurfaceSets.LeafFromSurfaceSets:8
#: abaqus.DisplayGroup.LeafFromSurfaceVarRange.LeafFromSurfaceVarRange:8 of
msgid "This object can be accessed by::"
msgstr ""

#: ../../None:8:<autosummary>:1
msgid ""
":py:obj:`canUndo "
"<abaqus.DisplayGroup.DisplayGroup.DisplayGroup.canUndo>`\\"
msgstr ""

#: ../../None:8:<autosummary>:1 ../../docstring
#: abaqus.DisplayGroup.DisplayGroup.DisplayGroup.canUndo:1 of
msgid "A Boolean specifying whether Undo is possible or not."
msgstr ""

#: ../../None:8:<autosummary>:1
msgid ""
":py:obj:`canRedo "
"<abaqus.DisplayGroup.DisplayGroup.DisplayGroup.canRedo>`\\"
msgstr ""

#: ../../None:8:<autosummary>:1 ../../docstring
#: abaqus.DisplayGroup.DisplayGroup.DisplayGroup.canRedo:1 of
msgid "A Boolean specifying whether Redo is possible or not."
msgstr ""

#: ../../None:8:<autosummary>:1
msgid ":py:obj:`name <abaqus.DisplayGroup.DisplayGroup.DisplayGroup.name>`\\"
msgstr ""

#: ../../None:8:<autosummary>:1
msgid ":py:obj:`module <abaqus.DisplayGroup.DisplayGroup.DisplayGroup.module>`\\"
msgstr ""

#: ../../None:8:<autosummary>:1
msgid ""
"A SymbolicConstant specifying the module in which the display group has "
"been created."
msgstr ""

#: ../../None:8:<autosummary>:1
msgid ""
":py:obj:`modelName "
"<abaqus.DisplayGroup.DisplayGroup.DisplayGroup.modelName>`\\"
msgstr ""

#: ../../None:8:<autosummary>:1 ../../docstring
#: abaqus.DisplayGroup.DisplayGroup.DisplayGroup.modelName:1 of
msgid ""
"A String specifying the name of the model to which the display group "
"belongs when the module is part- or assembly-based."
msgstr ""

#: ../../None:8:<autosummary>:1
msgid ""
":py:obj:`partName "
"<abaqus.DisplayGroup.DisplayGroup.DisplayGroup.partName>`\\"
msgstr ""

#: ../../None:8:<autosummary>:1 ../../docstring
#: abaqus.DisplayGroup.DisplayGroup.DisplayGroup.partName:1 of
msgid ""
"A String specifying the name of the part to which the display group "
"belongs when the module is part-based."
msgstr ""

#: ../../None:10:<autosummary>:1
msgid ""
":py:obj:`__init__ "
"<abaqus.DisplayGroup.DisplayGroup.DisplayGroup.__init__>`\\ \\(name\\, "
"leaf\\)"
msgstr ""

#: ../../None:10:<autosummary>:1
msgid ""
":py:obj:`add <abaqus.DisplayGroup.DisplayGroup.DisplayGroup.add>`\\ "
"\\(leaf\\)"
msgstr ""

#: ../../None:10:<autosummary>:1
#: abaqus.DisplayGroup.DisplayGroup.DisplayGroup.add:1 of
msgid "This method adds the specified items to the display group."
msgstr ""

#: ../../None:10:<autosummary>:1
msgid ""
":py:obj:`either <abaqus.DisplayGroup.DisplayGroup.DisplayGroup.either>`\\"
" \\(leaf\\)"
msgstr ""

#: ../../None:10:<autosummary>:1
#: abaqus.DisplayGroup.DisplayGroup.DisplayGroup.either:1 of
msgid ""
"This method redefines the display group to be only those items that are "
"not shared by the **leaf** argument and by the display group."
msgstr ""

#: ../../None:10:<autosummary>:1
msgid ""
":py:obj:`intersect "
"<abaqus.DisplayGroup.DisplayGroup.DisplayGroup.intersect>`\\ \\(leaf\\)"
msgstr ""

#: ../../None:10:<autosummary>:1
#: abaqus.DisplayGroup.DisplayGroup.DisplayGroup.intersect:1 of
msgid ""
"This method redefines the display group to be only those items that are "
"shared by the **leaf** argument and the display group."
msgstr ""

#: ../../None:10:<autosummary>:1
msgid ""
":py:obj:`redoLast "
"<abaqus.DisplayGroup.DisplayGroup.DisplayGroup.redoLast>`\\ \\(\\)"
msgstr ""

#: ../../None:10:<autosummary>:1
#: abaqus.DisplayGroup.DisplayGroup.DisplayGroup.redoLast:1 of
msgid "This method redoes the last undone operation on the display group."
msgstr ""

#: ../../None:10:<autosummary>:1
msgid ""
":py:obj:`remove <abaqus.DisplayGroup.DisplayGroup.DisplayGroup.remove>`\\"
" \\(leaf\\)"
msgstr ""

#: ../../None:10:<autosummary>:1
#: abaqus.DisplayGroup.DisplayGroup.DisplayGroup.remove:1 of
msgid "This method removes the specified items from the display group."
msgstr ""

#: ../../None:10:<autosummary>:1
msgid ""
":py:obj:`replace "
"<abaqus.DisplayGroup.DisplayGroup.DisplayGroup.replace>`\\ \\(leaf\\)"
msgstr ""

#: ../../None:10:<autosummary>:1
#: abaqus.DisplayGroup.DisplayGroup.DisplayGroup.replace:1 of
msgid ""
"This method replaces the contents of the display group with the specified"
" items."
msgstr ""

#: ../../None:10:<autosummary>:1
msgid ""
":py:obj:`undoLast "
"<abaqus.DisplayGroup.DisplayGroup.DisplayGroup.undoLast>`\\ \\(\\)"
msgstr ""

#: ../../None:10:<autosummary>:1
#: abaqus.DisplayGroup.DisplayGroup.DisplayGroup.undoLast:1 of
msgid "This method undoes the last operation performed on the display group."
msgstr ""

#: abaqus.DisplayGroup.DisplayGroup.DisplayGroup.__init__:9 of
msgid ""
"Check `DisplayGroup.__init__ on help.3ds.com/2020 "
"<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-displaygrouppyc.htm?contextscope=all"
"#simaker-displaygroup__init__pyc>`__."
msgstr ""

#: abaqus.DisplayGroup.DisplayGroup.DisplayGroup.add:4 of
msgid ""
"Check `DisplayGroup.add on help.3ds.com/2020 "
"<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-displaygrouppyc.htm?contextscope=all"
"#simaker-displaygroupaddpyc>`__."
msgstr ""

#: abaqus.DisplayGroup.DisplayGroup.DisplayGroup.add:7 of
msgid "A Leaf object specifying the items to add to the display group."
msgstr ""

#: abaqus.DisplayGroup.DisplayGroup.DisplayGroup.either:5 of
msgid ""
"Check `DisplayGroup.either on help.3ds.com/2020 "
"<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-displaygrouppyc.htm?contextscope=all"
"#simaker-displaygroupeitherpyc>`__."
msgstr ""

#: abaqus.DisplayGroup.DisplayGroup.DisplayGroup.either:8 of
msgid "A Leaf object specifying the items to be excluded from the display group."
msgstr ""

#: abaqus.DisplayGroup.DisplayGroup.DisplayGroup.intersect:5 of
msgid ""
"Check `DisplayGroup.intersect on help.3ds.com/2020 "
"<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-displaygrouppyc.htm?contextscope=all"
"#simaker-displaygroupintersectpyc>`__."
msgstr ""

#: abaqus.DisplayGroup.DisplayGroup.DisplayGroup.intersect:8 of
msgid "A Leaf object specifying the items to be included in the display group."
msgstr ""

#: ../../docstring abaqus.DisplayGroup.DisplayGroup.DisplayGroup.module:1 of
msgid ""
"A SymbolicConstant specifying the module in which the display group has "
"been created. The possible values are PART, ASSEMBLY, PART_ASSEMBLY, ODB,"
" and ALL."
msgstr ""

#: abaqus.DisplayGroup.DisplayGroup.DisplayGroup.remove:4 of
msgid ""
"Check `DisplayGroup.remove on help.3ds.com/2020 "
"<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-displaygrouppyc.htm?contextscope=all"
"#simaker-displaygroupremovepyc>`__."
msgstr ""

#: abaqus.DisplayGroup.DisplayGroup.DisplayGroup.remove:7 of
msgid "A Leaf object specifying the items to remove from the display group."
msgstr ""

#: abaqus.DisplayGroup.DisplayGroup.DisplayGroup.replace:4 of
msgid ""
"Check `DisplayGroup.replace on help.3ds.com/2020 "
"<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-displaygrouppyc.htm?contextscope=all"
"#simaker-displaygroupreplacepyc>`__."
msgstr ""

#: abaqus.DisplayGroup.DisplayGroup.DisplayGroup.replace:7 of
msgid ""
"A Leaf object specifying the items with which to replace the current "
"display group contents."
msgstr ""

#: abaqus.DisplayGroup.DisplayGroupInstance.DisplayGroupInstance:1 of
msgid ""
"A DisplayGroupInstance object stores the IDs of the entities displayed in"
" a viewport. The DisplayGroupInstance object has no constructor. When you"
" set a display group to be plotted in a viewport, Abaqus/CAE creates a "
"DisplayGroupInstance object for each display group and places it in the "
"DisplayGroupInstanceRepository object."
msgstr ""

#: abaqus.DisplayGroup.DisplayGroupInstance.DisplayGroupInstance:20 of
msgid ""
"Check `DisplayGroupInstance on help.3ds.com/2020 "
"<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-displaygroupinstancepyc.htm?contextscope=all>`__."
msgstr ""

#: ../../None:5:<autosummary>:1
msgid ""
":py:obj:`name "
"<abaqus.DisplayGroup.DisplayGroupInstance.DisplayGroupInstance.name>`\\"
msgstr ""

#: ../../None:5:<autosummary>:1
msgid ""
":py:obj:`lockOptions "
"<abaqus.DisplayGroup.DisplayGroupInstance.DisplayGroupInstance.lockOptions>`\\"
msgstr ""

#: ../../None:5:<autosummary>:1
msgid ""
"A Boolean specifying whether the display options stored on the "
"DisplayGroupInstance object should be synchronized with changes to the "
"viewport display options."
msgstr ""

#: ../../None:5:<autosummary>:1
msgid ""
":py:obj:`odbDisplayOptions "
"<abaqus.DisplayGroup.DisplayGroupInstance.DisplayGroupInstance.odbDisplayOptions>`\\"
msgstr ""

#: ../../None:5:<autosummary>:1 ../../docstring
#: abaqus.DisplayGroup.DisplayGroupInstance.DisplayGroupInstance.odbDisplayOptions:1
#: of
msgid ""
"An OdbDisplayOptions object specifying this member is available only for "
"DisplayGroupInstance objects that are members of the DisplayGroupInstance"
" repository member of the OdbDisplay object."
msgstr ""

#: ../../None:5:<autosummary>:1
msgid ""
":py:obj:`nodes "
"<abaqus.DisplayGroup.DisplayGroupInstance.DisplayGroupInstance.nodes>`\\ "
"\\(\\)"
msgstr ""

#: ../../None:5:<autosummary>:1
msgid ""
"This method is used to obtain the list of nodes present in the "
"DisplayGroupInstance object."
msgstr ""

#: ../../None:5:<autosummary>:1
msgid ""
":py:obj:`elements "
"<abaqus.DisplayGroup.DisplayGroupInstance.DisplayGroupInstance.elements>`\\"
" \\(\\)"
msgstr ""

#: ../../None:5:<autosummary>:1
msgid ""
"This method returns the list of elements present in the "
"DisplayGroupInstance object."
msgstr ""

#: ../../None:5:<autosummary>:1
msgid ""
":py:obj:`setValues "
"<abaqus.DisplayGroup.DisplayGroupInstance.DisplayGroupInstance.setValues>`\\"
" \\(\\[lockOptions\\]\\)"
msgstr ""

#: ../../None:5:<autosummary>:1
msgid "This method modifies the DisplayGroupInstance object."
msgstr ""

#: abaqus.DisplayGroup.DisplayGroupInstance.DisplayGroupInstance.elements:1 of
msgid ""
"This method returns the list of elements present in the "
"DisplayGroupInstance object. The elements method returns a Dictionary "
"object that uses part instance names for the keys. The value of the items"
" in the Dictionary object is a List of user element labels that belong to"
" the part instance and are contained in the DisplayGroupInstance object. "
"This method is available only for DisplayGroupInstance objects that are "
"members of the DisplayGroupInstance repository member of the OdbDisplay "
"object."
msgstr ""

#: abaqus.DisplayGroup.DisplayGroupInstance.DisplayGroupInstance.elements:8
#: abaqus.DisplayGroup.DisplayGroupInstance.DisplayGroupInstance.nodes:8 of
msgid "A Dictionary object."
msgstr ""

#: abaqus.DisplayGroup.DisplayGroupInstance.DisplayGroupInstance.elements:9
#: abaqus.DisplayGroup.DisplayGroupInstance.DisplayGroupInstance.nodes:9 of
msgid ":class:`dict`"
msgstr ""

#: ../../docstring
#: abaqus.DisplayGroup.DisplayGroupInstance.DisplayGroupInstance.lockOptions:1
#: abaqus.DisplayGroup.DisplayGroupInstance.DisplayGroupInstance.setValues:9 of
msgid ""
"A Boolean specifying whether the display options stored on the "
"DisplayGroupInstance object should be synchronized with changes to the "
"viewport display options. This member is available only for "
"DisplayGroupInstance objects that are members of the DisplayGroupInstance"
" repository member of the OdbDisplay object. The default value is OFF."
msgstr ""

#: abaqus.DisplayGroup.DisplayGroupInstance.DisplayGroupInstance.nodes:1 of
msgid ""
"This method is used to obtain the list of nodes present in the "
"DisplayGroupInstance object. It returns a Dictionary object keyed by part"
" instance names, the value of which is a list of user node labels "
"belonging to the part instance and contained in the DisplayGroupInstance "
"object. This method is available only for DisplayGroupInstance objects "
"that are members of the DisplayGroupInstance repository member of "
"OdbDisplay object."
msgstr ""

#: abaqus.DisplayGroup.DisplayGroupInstance.DisplayGroupInstance.setValues:1 of
msgid ""
"This method modifies the DisplayGroupInstance object. The setValues "
"method is available only for DisplayGroupInstance objects that are "
"members of the DisplayGroupInstance repository member of the OdbDisplay "
"object."
msgstr ""

#: abaqus.DisplayGroup.DisplayGroupInstance.DisplayGroupInstance.setValues:6 of
msgid ""
"Check `DisplayGroupInstance.setValues on help.3ds.com/2020 "
"<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-displaygroupinstancepyc.htm?contextscope=all"
"#simaker-displaygroupinstancesetvaluespyc>`__."
msgstr ""

#: abaqus.DisplayGroup.DisplayGroupInstanceRepository.DisplayGroupInstanceRepository:1
#: of
msgid ""
"The DisplayGroupInstanceRepository object stores DisplayGroupInstance "
"objects. In addition to all the standard Python repository methods, the "
"DisplayGroupInstance repository defines additional methods as described "
"below."
msgstr ""

#: abaqus.DisplayGroup.DisplayGroupInstanceRepository.DisplayGroupInstanceRepository:13
#: of
msgid ""
"Check `DisplayGroupInstanceRepository on help.3ds.com/2020 "
"<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-displaygroupinstancerepositorypyc.htm?contextscope=all>`__."
msgstr ""

#: ../../None:3:<autosummary>:1
msgid ""
":py:obj:`syncOptions "
"<abaqus.DisplayGroup.DisplayGroupInstanceRepository.DisplayGroupInstanceRepository.syncOptions>`\\"
" \\(name\\[\\, updateInstances\\]\\)"
msgstr ""

#: ../../None:3:<autosummary>:1
#: abaqus.DisplayGroup.DisplayGroupInstanceRepository.DisplayGroupInstanceRepository.syncOptions:1
#: of
msgid ""
"This method synchronizes the display options stored on the OdbDisplay "
"object with the display options stored on the DisplayGroupInstance "
"object."
msgstr ""

#: abaqus.DisplayGroup.DisplayGroupInstanceRepository.DisplayGroupInstanceRepository.syncOptions:5
#: of
msgid ""
"Check `DisplayGroupInstanceRepository.syncOptions on help.3ds.com/2020 "
"<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-displaygroupinstancerepositorypyc.htm?contextscope=all"
"#simaker-displaygroupinstancerepositorysyncoptionspyc>`__."
msgstr ""

#: abaqus.DisplayGroup.DisplayGroupInstanceRepository.DisplayGroupInstanceRepository.syncOptions:10
#: of
msgid ""
"A Boolean specifying whether to synchronize the display options on all "
"the DisplayGroupInstance objects stored in the "
"DisplayGroupInstanceRepository for which **lockOptions** is OFF. The "
"default value of **updateInstances** is ON."
msgstr ""

#: abaqus.DisplayGroup.Leaf.Leaf:1 of
msgid ""
"Leaf objects are used to specify the items in a display group. Leaf "
"objects are constructed as temporary objects, which are then used as "
"arguments to DisplayGroup commands. Leaf objects have similarities to Set"
" objects; however, Leaf objects are evaluated when the DisplayGroup "
"expression is evaluated, and they can have SymbolicConstant values (which"
" are also evaluated when the DisplayGroup expression is evaluated)."
msgstr ""

#: abaqus.DisplayGroup.Leaf.Leaf:15 of
msgid ""
"Check `Leaf on help.3ds.com/2020 "
"<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leafpyc.htm?contextscope=all>`__."
msgstr ""

#: ../../None:3:<autosummary>:1
msgid ""
":py:obj:`__init__ <abaqus.DisplayGroup.Leaf.Leaf.__init__>`\\ "
"\\(leafType\\)"
msgstr ""

#: ../../None:3:<autosummary>:1 abaqus.DisplayGroup.Leaf.Leaf.__init__:1 of
msgid "This method creates a Leaf object."
msgstr ""

#: abaqus.DisplayGroup.Leaf.Leaf.__init__:9 of
msgid ""
"Check `Leaf.__init__ on help.3ds.com/2020 "
"<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leafpyc.htm?contextscope=all"
"#simaker-leaf__init__pyc>`__."
msgstr ""

#: ../../docstring abaqus.DisplayGroup.Leaf.Leaf.__init__:12
#: abaqus.DisplayGroup.Leaf.Leaf.leafType:1
#: abaqus.DisplayGroup.LeafFromDatums.LeafFromDatums.leafType:1
#: abaqus.DisplayGroup.LeafFromDisplayGroup.LeafFromDisplayGroup.leafType:1
#: abaqus.DisplayGroup.LeafFromElementLabels.LeafFromElementLabels.leafType:1
#: abaqus.DisplayGroup.LeafFromElementSets.LeafFromElementSets.leafType:1
#: abaqus.DisplayGroup.LeafFromElementVarRange.LeafFromElementVarRange.leafType:1
#: abaqus.DisplayGroup.LeafFromGeometry.LeafFromGeometry.leafType:1
#: abaqus.DisplayGroup.LeafFromInstance.LeafFromInstance.leafType:1
#: abaqus.DisplayGroup.LeafFromInstanceElementLabels.LeafFromInstanceElementLabels.leafType:1
#: abaqus.DisplayGroup.LeafFromInstanceNodeLabels.LeafFromInstanceNodeLabels.leafType:1
#: abaqus.DisplayGroup.LeafFromMeshElementLabels.LeafFromMeshElementLabels.leafType:1
#: abaqus.DisplayGroup.LeafFromMeshNodeLabels.LeafFromMeshNodeLabels.leafType:1
#: abaqus.DisplayGroup.LeafFromMeshSurfaceSets.LeafFromMeshSurfaceSets.leafType:1
#: abaqus.DisplayGroup.LeafFromModelElemLabels.LeafFromModelElemLabels.leafType:1
#: abaqus.DisplayGroup.LeafFromModelNodeLabels.LeafFromModelNodeLabels.leafType:1
#: abaqus.DisplayGroup.LeafFromNodeLabels.LeafFromNodeLabels.leafType:1
#: abaqus.DisplayGroup.LeafFromNodeSets.LeafFromNodeSets.leafType:1
#: abaqus.DisplayGroup.LeafFromNodeVarRange.LeafFromNodeVarRange.leafType:1
#: abaqus.DisplayGroup.LeafFromOdbEdgePick.LeafFromOdbEdgePick.leafType:1
#: abaqus.DisplayGroup.LeafFromOdbElementLayups.LeafFromOdbElementLayups.leafType:1
#: abaqus.DisplayGroup.LeafFromOdbElementMaterials.LeafFromOdbElementMaterials.leafType:1
#: abaqus.DisplayGroup.LeafFromOdbElementPick.LeafFromOdbElementPick.leafType:1
#: abaqus.DisplayGroup.LeafFromOdbElementPlies.LeafFromOdbElementPlies.leafType:1
#: abaqus.DisplayGroup.LeafFromOdbElementSections.LeafFromOdbElementSections.leafType:1
#: abaqus.DisplayGroup.LeafFromOdbElementTypes.LeafFromOdbElementTypes.leafType:1
#: abaqus.DisplayGroup.LeafFromOdbNodePick.LeafFromOdbNodePick.leafType:1
#: abaqus.DisplayGroup.LeafFromPartElementLabels.LeafFromPartElementLabels.leafType:1
#: abaqus.DisplayGroup.LeafFromPartInstance.LeafFromPartInstance.leafType:1
#: abaqus.DisplayGroup.LeafFromPartNodeLabels.LeafFromPartNodeLabels.leafType:1
#: abaqus.DisplayGroup.LeafFromReferencePoint.LeafFromReferencePoint.leafType:1
#: abaqus.DisplayGroup.LeafFromSets.LeafFromSets.leafType:1
#: abaqus.DisplayGroup.LeafFromSurfaceSets.LeafFromSurfaceSets.leafType:1
#: abaqus.DisplayGroup.LeafFromSurfaceVarRange.LeafFromSurfaceVarRange.leafType:1
#: of
msgid ""
"A SymbolicConstant specifying the leaf type. Possible values are "
"EMPTY_LEAF, DEFAULT_MODEL, ALL_ELEMENTS, ALL_NODES, and ALL_SURFACES."
msgstr ""

#: abaqus.DisplayGroup.Leaf.Leaf.__init__:15 of
msgid "A Leaf object."
msgstr ""

#: abaqus.DisplayGroup.Leaf.Leaf.__init__:16 of
msgid ":class:`Leaf`"
msgstr ""

#: abaqus.DisplayGroup.LeafFromConstraintNames.LeafFromConstraintNames:1
#: abaqus.DisplayGroup.LeafFromDatums.LeafFromDatums:1
#: abaqus.DisplayGroup.LeafFromDisplayGroup.LeafFromDisplayGroup:1
#: abaqus.DisplayGroup.LeafFromElementLabels.LeafFromElementLabels:1
#: abaqus.DisplayGroup.LeafFromElementSets.LeafFromElementSets:1
#: abaqus.DisplayGroup.LeafFromElementVarRange.LeafFromElementVarRange:1
#: abaqus.DisplayGroup.LeafFromGeometry.LeafFromGeometry:1
#: abaqus.DisplayGroup.LeafFromInstance.LeafFromInstance:1
#: abaqus.DisplayGroup.LeafFromInstanceElementLabels.LeafFromInstanceElementLabels:1
#: abaqus.DisplayGroup.LeafFromInstanceNodeLabels.LeafFromInstanceNodeLabels:1
#: abaqus.DisplayGroup.LeafFromMeshElementLabels.LeafFromMeshElementLabels:1
#: abaqus.DisplayGroup.LeafFromMeshNodeLabels.LeafFromMeshNodeLabels:1
#: abaqus.DisplayGroup.LeafFromMeshSurfaceSets.LeafFromMeshSurfaceSets:1
#: abaqus.DisplayGroup.LeafFromModelElemLabels.LeafFromModelElemLabels:1
#: abaqus.DisplayGroup.LeafFromModelNodeLabels.LeafFromModelNodeLabels:1
#: abaqus.DisplayGroup.LeafFromNodeLabels.LeafFromNodeLabels:1
#: abaqus.DisplayGroup.LeafFromNodeSets.LeafFromNodeSets:1
#: abaqus.DisplayGroup.LeafFromNodeVarRange.LeafFromNodeVarRange:1
#: abaqus.DisplayGroup.LeafFromOdbEdgePick.LeafFromOdbEdgePick:1
#: abaqus.DisplayGroup.LeafFromOdbElementLayups.LeafFromOdbElementLayups:1
#: abaqus.DisplayGroup.LeafFromOdbElementMaterials.LeafFromOdbElementMaterials:1
#: abaqus.DisplayGroup.LeafFromOdbElementPick.LeafFromOdbElementPick:1
#: abaqus.DisplayGroup.LeafFromOdbElementPlies.LeafFromOdbElementPlies:1
#: abaqus.DisplayGroup.LeafFromOdbElementSections.LeafFromOdbElementSections:1
#: abaqus.DisplayGroup.LeafFromOdbElementTypes.LeafFromOdbElementTypes:1
#: abaqus.DisplayGroup.LeafFromOdbNodePick.LeafFromOdbNodePick:1
#: abaqus.DisplayGroup.LeafFromPartElementLabels.LeafFromPartElementLabels:1
#: abaqus.DisplayGroup.LeafFromPartInstance.LeafFromPartInstance:1
#: abaqus.DisplayGroup.LeafFromPartNodeLabels.LeafFromPartNodeLabels:1
#: abaqus.DisplayGroup.LeafFromReferencePoint.LeafFromReferencePoint:1
#: abaqus.DisplayGroup.LeafFromSets.LeafFromSets:1
#: abaqus.DisplayGroup.LeafFromSurfaceSets.LeafFromSurfaceSets:1
#: abaqus.DisplayGroup.LeafFromSurfaceVarRange.LeafFromSurfaceVarRange:1 of
msgid "Bases: :py:class:`~abaqus.DisplayGroup.Leaf.Leaf`"
msgstr ""

#: abaqus.DisplayGroup.LeafFromConstraintNames.LeafFromConstraintNames:1 of
msgid ""
"The LeafFromConstraintNames object can be used whenever a Leaf object is "
"expected as an argument. A Leaf object is used used to specify the items "
"in a display group. Leaf objects are constructed as temporary objects "
"that are used as arguments to DisplayGroup (DisplayGroup object) "
"commands. The LeafFromConstraintNames object is derived from the Leaf "
"object."
msgstr ""

#: abaqus.DisplayGroup.LeafFromConstraintNames.LeafFromConstraintNames:13 of
msgid "The `LeafFromConstraintNames` class was added."
msgstr ""

#: abaqus.DisplayGroup.LeafFromConstraintNames.LeafFromConstraintNames:17 of
msgid ""
"Check `LeafFromConstraintNames on help.3ds.com/2020 "
"<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffromconstraintnamespyc.htm?contextscope=all>`__."
msgstr ""

#: ../../None:3:<autosummary>:1
msgid ""
":py:obj:`leafType "
"<abaqus.DisplayGroup.LeafFromConstraintNames.LeafFromConstraintNames.leafType>`\\"
msgstr ""

#: ../../None:3:<autosummary>:1 ../../None:6:<autosummary>:1
msgid "A SymbolicConstant specifying the leaf type."
msgstr ""

#: ../../None:3:<autosummary>:1
msgid ""
":py:obj:`__init__ "
"<abaqus.DisplayGroup.LeafFromConstraintNames.LeafFromConstraintNames.__init__>`\\"
" \\(name\\, type\\)"
msgstr ""

#: ../../None:3:<autosummary>:1
msgid "This method creates a Leaf object from a sequence of constraint objects."
msgstr ""

#: abaqus.DisplayGroup.LeafFromConstraintNames.LeafFromConstraintNames.__init__:1
#: of
msgid ""
"This method creates a Leaf object from a sequence of constraint objects. "
"Leaf objects specify the items in a display group."
msgstr ""

#: abaqus.DisplayGroup.LeafFromConstraintNames.LeafFromConstraintNames.__init__:10
#: of
msgid ""
"Check `LeafFromConstraintNames.__init__ on help.3ds.com/2020 "
"<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffromconstraintnamespyc.htm?contextscope=all"
"#simaker-leaffromconstraintnames__init__pyc>`__."
msgstr ""

#: abaqus.DisplayGroup.LeafFromConstraintNames.LeafFromConstraintNames.__init__:13
#: of
msgid "A sequence of tuples of name objects."
msgstr ""

#: abaqus.DisplayGroup.LeafFromConstraintNames.LeafFromConstraintNames.__init__:15
#: of
msgid ""
"A SymbolicConstant specifying the Leaf type. Possible values are TIE, "
"SHELL_TO_SOLID_COUPLING, DISTRIBUTING_COUPLING, KINEMATIC_COUPLING, "
"RIGID_BODY, and MPC."
msgstr ""

#: abaqus.DisplayGroup.LeafFromConstraintNames.LeafFromConstraintNames.__init__:18
#: of
msgid ":class:`A LeafFromConstraintNames object.`"
msgstr ""

#: ../../docstring
#: abaqus.DisplayGroup.LeafFromConstraintNames.LeafFromConstraintNames.leafType:1
#: of
msgid ""
"A SymbolicConstant specifying the leaf type. Possible values are TIE, "
"SHELL_TO_SOLID_COUPLING, DISTRIBUTING_COUPLING, KINEMATIC_COUPLING, "
"RIGID_BODY, and MPC."
msgstr ""

#: abaqus.DisplayGroup.LeafFromDatums.LeafFromDatums:1 of
msgid ""
"The LeafFromDatums object can be used whenever a Leaf object is expected "
"as an argument. Leaf objects are used to specify the items in a display "
"group. Leaf objects are constructed as temporary objects, which are then "
"used as arguments to DisplayGroup commands. The LeafFromDatums object is "
"derived from the Leaf object."
msgstr ""

#: abaqus.DisplayGroup.LeafFromDatums.LeafFromDatums:13 of
msgid ""
"Check `LeafFromDatums on help.3ds.com/2020 "
"<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffromdatumspyc.htm?contextscope=all>`__."
msgstr ""

#: ../../None:3:<autosummary>:1
msgid ""
":py:obj:`leafType "
"<abaqus.DisplayGroup.LeafFromDatums.LeafFromDatums.leafType>`\\"
msgstr ""

#: ../../None:3:<autosummary>:1
msgid ""
":py:obj:`__init__ "
"<abaqus.DisplayGroup.LeafFromDatums.LeafFromDatums.__init__>`\\ "
"\\(datumSeq\\)"
msgstr ""

#: ../../None:3:<autosummary>:1
msgid "This method creates a Leaf object from a sequence of datum objects."
msgstr ""

#: abaqus.DisplayGroup.LeafFromDatums.LeafFromDatums.__init__:1 of
msgid ""
"This method creates a Leaf object from a sequence of datum objects. Leaf "
"objects specify the items in a display group."
msgstr ""

#: abaqus.DisplayGroup.LeafFromDatums.LeafFromDatums.__init__:10 of
msgid ""
"Check `LeafFromDatums.__init__ on help.3ds.com/2020 "
"<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffromdatumspyc.htm?contextscope=all"
"#simaker-leaffromdatums__init__pyc>`__."
msgstr ""

#: abaqus.DisplayGroup.LeafFromDatums.LeafFromDatums.__init__:13 of
msgid "A sequence of datum objects."
msgstr ""

#: abaqus.DisplayGroup.LeafFromDatums.LeafFromDatums.__init__:15 of
msgid "A LeafFromDatums object."
msgstr ""

#: abaqus.DisplayGroup.LeafFromDatums.LeafFromDatums.__init__:16 of
msgid ":class:`LeafFromDatums`"
msgstr ""

#: abaqus.DisplayGroup.LeafFromDisplayGroup.LeafFromDisplayGroup:1 of
msgid ""
"The LeafFromDisplayGroup object can be used whenever a Leaf object is "
"expected as an argument. Leaf objects are used to specify the items in a "
"display group. Leaf objects are constructed as temporary objects, which "
"are then used as arguments to DisplayGroup commands.The "
"LeafFromDisplayGroup object is derived from the Leaf object."
msgstr ""

#: abaqus.DisplayGroup.LeafFromDisplayGroup.LeafFromDisplayGroup:13 of
msgid ""
"Check `LeafFromDisplayGroup on help.3ds.com/2020 "
"<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffromdisplaygrouppyc.htm?contextscope=all>`__."
msgstr ""

#: ../../None:3:<autosummary>:1
msgid ""
":py:obj:`leafType "
"<abaqus.DisplayGroup.LeafFromDisplayGroup.LeafFromDisplayGroup.leafType>`\\"
msgstr ""

#: ../../None:3:<autosummary>:1
msgid ""
":py:obj:`__init__ "
"<abaqus.DisplayGroup.LeafFromDisplayGroup.LeafFromDisplayGroup.__init__>`\\"
" \\(displayGroup\\)"
msgstr ""

#: ../../None:3:<autosummary>:1
#: abaqus.DisplayGroup.LeafFromDisplayGroup.LeafFromDisplayGroup.__init__:1 of
msgid ""
"This method creates a Leaf object from a sequence of Display Group "
"objects."
msgstr ""

#: abaqus.DisplayGroup.LeafFromDisplayGroup.LeafFromDisplayGroup.__init__:9 of
msgid ""
"Check `LeafFromDisplayGroup.__init__ on help.3ds.com/2020 "
"<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffromdisplaygrouppyc.htm?contextscope=all"
"#simaker-leaffromdisplaygroup__init__pyc>`__."
msgstr ""

#: ../../docstring
#: abaqus.DisplayGroup.LeafFromDisplayGroup.LeafFromDisplayGroup.__init__:12
#: abaqus.DisplayGroup.LeafFromDisplayGroup.LeafFromDisplayGroup.displayGroup:1
#: of
msgid "A DisplayGroupArray object."
msgstr ""

#: abaqus.DisplayGroup.LeafFromDisplayGroup.LeafFromDisplayGroup.__init__:14 of
msgid "A LeafFromDisplayGroup object."
msgstr ""

#: abaqus.DisplayGroup.LeafFromDisplayGroup.LeafFromDisplayGroup.__init__:15 of
msgid ":class:`LeafFromDisplayGroup`"
msgstr ""

#: abaqus.DisplayGroup.LeafFromElementLabels.LeafFromElementLabels:1 of
msgid ""
"The LeafFromElementLabels object can be used whenever a Leaf object is "
"expected as an argument. Leaf objects are used to specify the items in a "
"display group. Leaf objects are constructed as temporary objects, which "
"are then used as arguments to DisplayGroup commands. The "
"LeafFromElementLabels object is derived from the Leaf object. This page "
"discusses:"
msgstr ""

#: abaqus.DisplayGroup.LeafFromElementLabels.LeafFromElementLabels:14 of
msgid ""
"Check `LeafFromElementLabels on help.3ds.com/2020 "
"<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffromelementlabelspyc.htm?contextscope=all>`__."
msgstr ""

#: ../../None:3:<autosummary>:1
msgid ""
":py:obj:`leafType "
"<abaqus.DisplayGroup.LeafFromElementLabels.LeafFromElementLabels.leafType>`\\"
msgstr ""

#: ../../None:3:<autosummary>:1
msgid ""
":py:obj:`__init__ "
"<abaqus.DisplayGroup.LeafFromElementLabels.LeafFromElementLabels.__init__>`\\"
" \\(partInstanceName\\, elementLabels\\)"
msgstr ""

#: ../../None:3:<autosummary>:1
#: abaqus.DisplayGroup.LeafFromElementLabels.LeafFromElementLabels.__init__:1
#: of
msgid ""
"This method creates a Leaf object from a sequence of element labels that "
"belong to a single part instance."
msgstr ""

#: abaqus.DisplayGroup.LeafFromElementLabels.LeafFromElementLabels.__init__:10
#: of
msgid ""
"Check `LeafFromElementLabels.__init__ on help.3ds.com/2020 "
"<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffromelementlabelspyc.htm?contextscope=all"
"#simaker-leaffromelementlabels__init__pyc>`__."
msgstr ""

#: ../../docstring
#: abaqus.DisplayGroup.LeafFromElementLabels.LeafFromElementLabels.__init__:13
#: abaqus.DisplayGroup.LeafFromElementLabels.LeafFromElementLabels.partInstanceName:1
#: of
msgid ""
"A String specifying the name of the part instance to which "
"**elementLabels** refers."
msgstr ""

#: ../../docstring
#: abaqus.DisplayGroup.LeafFromElementLabels.LeafFromElementLabels.__init__:15
#: abaqus.DisplayGroup.LeafFromElementLabels.LeafFromElementLabels.elementLabels:1
#: of
msgid ""
"A sequence of Strings specifying expressions that denote element labels. "
"The expression can be any of the following:An Int specifying a single "
"element label; for example, `1`.A String specifying a single element "
"label; for example, `'7'`.A String specifying a sequence of element "
"labels; for example, `'3:5'` and `'3:15:3'`."
msgstr ""

#: abaqus.DisplayGroup.LeafFromElementLabels.LeafFromElementLabels.__init__:20
#: of
msgid "A LeafFromElementLabels object."
msgstr ""

#: abaqus.DisplayGroup.LeafFromElementLabels.LeafFromElementLabels.__init__:21
#: of
msgid ":class:`LeafFromElementLabels`"
msgstr ""

#: abaqus.DisplayGroup.LeafFromElementSets.LeafFromElementSets:1 of
msgid ""
"The LeafFromElementSets object can be used whenever a Leaf object is "
"expected as an argument. Leaf objects are used to specify the items in a "
"display group. Leaf objects are constructed as temporary objects, which "
"are then used as arguments to DisplayGroup commands. The "
"LeafFromElementSets object is derived from the Leaf object."
msgstr ""

#: abaqus.DisplayGroup.LeafFromElementSets.LeafFromElementSets:13 of
msgid ""
"Check `LeafFromElementSets on help.3ds.com/2020 "
"<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffromelementsetspyc.htm?contextscope=all>`__."
msgstr ""

#: ../../None:3:<autosummary>:1
msgid ""
":py:obj:`leafType "
"<abaqus.DisplayGroup.LeafFromElementSets.LeafFromElementSets.leafType>`\\"
msgstr ""

#: ../../None:3:<autosummary>:1
msgid ""
":py:obj:`__init__ "
"<abaqus.DisplayGroup.LeafFromElementSets.LeafFromElementSets.__init__>`\\"
" \\(elementSets\\)"
msgstr ""

#: ../../None:3:<autosummary>:1
#: abaqus.DisplayGroup.LeafFromElementSets.LeafFromElementSets.__init__:1 of
msgid "This method creates a Leaf object from a sequence of element sets."
msgstr ""

#: abaqus.DisplayGroup.LeafFromElementSets.LeafFromElementSets.__init__:9 of
msgid ""
"Check `LeafFromElementSets.__init__ on help.3ds.com/2020 "
"<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffromelementsetspyc.htm?contextscope=all"
"#simaker-leaffromelementsets__init__pyc>`__."
msgstr ""

#: ../../docstring
#: abaqus.DisplayGroup.LeafFromElementSets.LeafFromElementSets.__init__:12
#: abaqus.DisplayGroup.LeafFromElementSets.LeafFromElementSets.elementSets:1 of
msgid ""
"A sequence of Strings specifying element sets or a String specifying a "
"single element set."
msgstr ""

#: abaqus.DisplayGroup.LeafFromElementSets.LeafFromElementSets.__init__:15 of
msgid "A LeafFromElementSets object."
msgstr ""

#: abaqus.DisplayGroup.LeafFromElementSets.LeafFromElementSets.__init__:16 of
msgid ":class:`LeafFromElementSets`"
msgstr ""

#: abaqus.DisplayGroup.LeafFromElementVarRange.LeafFromElementVarRange:1 of
msgid ""
"The LeafFromElementVarRange object can be used whenever a Leaf object is "
"expected as an argument. Leaf objects are used to specify the items in a "
"display group. Leaf objects are constructed as temporary objects, which "
"are then used as arguments to DisplayGroup commands. The "
"LeafFromElementVarRange object is derived from the Leaf object."
msgstr ""

#: abaqus.DisplayGroup.LeafFromElementVarRange.LeafFromElementVarRange:13 of
msgid ""
"Check `LeafFromElementVarRange on help.3ds.com/2020 "
"<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffromelementvarrangepyc.htm?contextscope=all>`__."
msgstr ""

#: ../../None:6:<autosummary>:1
msgid ""
":py:obj:`leafType "
"<abaqus.DisplayGroup.LeafFromElementVarRange.LeafFromElementVarRange.leafType>`\\"
msgstr ""

#: ../../None:6:<autosummary>:1
msgid ""
":py:obj:`minimumRange "
"<abaqus.DisplayGroup.LeafFromElementVarRange.LeafFromElementVarRange.minimumRange>`\\"
msgstr ""

#: ../../None:6:<autosummary>:1
msgid "A Float specifying the minimum value for the variable range."
msgstr ""

#: ../../None:6:<autosummary>:1
msgid ""
":py:obj:`maximumRange "
"<abaqus.DisplayGroup.LeafFromElementVarRange.LeafFromElementVarRange.maximumRange>`\\"
msgstr ""

#: ../../None:6:<autosummary>:1
msgid "A Float specifying the maximum value for the variable range."
msgstr ""

#: ../../None:6:<autosummary>:1
msgid ""
":py:obj:`insideRange "
"<abaqus.DisplayGroup.LeafFromElementVarRange.LeafFromElementVarRange.insideRange>`\\"
msgstr ""

#: ../../None:6:<autosummary>:1
msgid "A Boolean specifying the method used to evaluate the range."
msgstr ""

#: ../../None:3:<autosummary>:1
msgid ""
":py:obj:`__init__ "
"<abaqus.DisplayGroup.LeafFromElementVarRange.LeafFromElementVarRange.__init__>`\\"
" \\(\\[minimumRange\\, maximumRange\\, ...\\]\\)"
msgstr ""

#: ../../None:3:<autosummary>:1
#: abaqus.DisplayGroup.LeafFromElementVarRange.LeafFromElementVarRange.__init__:1
#: of
msgid ""
"This method creates a Leaf object from elements with values lying in a "
"variable range."
msgstr ""

#: abaqus.DisplayGroup.LeafFromElementVarRange.LeafFromElementVarRange.__init__:9
#: of
msgid ""
"Check `LeafFromElementVarRange.__init__ on help.3ds.com/2020 "
"<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffromelementvarrangepyc.htm?contextscope=all"
"#simaker-leaffromelementvarrange__init__pyc>`__."
msgstr ""

#: ../../docstring
#: abaqus.DisplayGroup.LeafFromElementVarRange.LeafFromElementVarRange.__init__:12
#: abaqus.DisplayGroup.LeafFromElementVarRange.LeafFromElementVarRange.minimumRange:1
#: abaqus.DisplayGroup.LeafFromNodeVarRange.LeafFromNodeVarRange.__init__:12
#: abaqus.DisplayGroup.LeafFromNodeVarRange.LeafFromNodeVarRange.minimumRange:1
#: abaqus.DisplayGroup.LeafFromSurfaceVarRange.LeafFromSurfaceVarRange.__init__:12
#: abaqus.DisplayGroup.LeafFromSurfaceVarRange.LeafFromSurfaceVarRange.minimumRange:1
#: of
msgid ""
"A Float specifying the minimum value for the variable range. The default "
"value is −3.40282346639E38."
msgstr ""

#: ../../docstring
#: abaqus.DisplayGroup.LeafFromElementVarRange.LeafFromElementVarRange.__init__:15
#: abaqus.DisplayGroup.LeafFromElementVarRange.LeafFromElementVarRange.maximumRange:1
#: abaqus.DisplayGroup.LeafFromNodeVarRange.LeafFromNodeVarRange.__init__:15
#: abaqus.DisplayGroup.LeafFromNodeVarRange.LeafFromNodeVarRange.maximumRange:1
#: abaqus.DisplayGroup.LeafFromSurfaceVarRange.LeafFromSurfaceVarRange.__init__:15
#: abaqus.DisplayGroup.LeafFromSurfaceVarRange.LeafFromSurfaceVarRange.maximumRange:1
#: of
msgid ""
"A Float specifying the maximum value for the variable range. The default "
"value is 3.40282346639e+038."
msgstr ""

#: ../../docstring
#: abaqus.DisplayGroup.LeafFromElementVarRange.LeafFromElementVarRange.__init__:18
#: abaqus.DisplayGroup.LeafFromElementVarRange.LeafFromElementVarRange.insideRange:1
#: abaqus.DisplayGroup.LeafFromNodeVarRange.LeafFromNodeVarRange.__init__:18
#: abaqus.DisplayGroup.LeafFromNodeVarRange.LeafFromNodeVarRange.insideRange:1
#: abaqus.DisplayGroup.LeafFromSurfaceVarRange.LeafFromSurfaceVarRange.__init__:18
#: abaqus.DisplayGroup.LeafFromSurfaceVarRange.LeafFromSurfaceVarRange.insideRange:1
#: of
msgid ""
"A Boolean specifying the method used to evaluate the range. If "
"**insideRange** = ON, the range falls inside the specified minimum and "
"maximum values. The default value is ON."
msgstr ""

#: abaqus.DisplayGroup.LeafFromElementVarRange.LeafFromElementVarRange.__init__:21
#: of
msgid "A LeafFromElementVarRange object."
msgstr ""

#: abaqus.DisplayGroup.LeafFromElementVarRange.LeafFromElementVarRange.__init__:22
#: of
msgid ":class:`LeafFromElementVarRange`"
msgstr ""

#: abaqus.DisplayGroup.LeafFromGeometry.LeafFromGeometry:1 of
msgid ""
"The LeafFromGeometry object can be used whenever a Leaf object is "
"expected as an argument. Leaf objects are used to specify the items in a "
"display group. Leaf objects are constructed as temporary objects, which "
"are then used as arguments to DisplayGroup commands. The LeafFromGeometry"
" object is derived from the Leaf object."
msgstr ""

#: abaqus.DisplayGroup.LeafFromGeometry.LeafFromGeometry:13 of
msgid ""
"Check `LeafFromGeometry on help.3ds.com/2020 "
"<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffromgeometrypyc.htm?contextscope=all>`__."
msgstr ""

#: ../../None:3:<autosummary>:1
msgid ""
":py:obj:`leafType "
"<abaqus.DisplayGroup.LeafFromGeometry.LeafFromGeometry.leafType>`\\"
msgstr ""

#: ../../None:3:<autosummary>:1
msgid ""
":py:obj:`__init__ "
"<abaqus.DisplayGroup.LeafFromGeometry.LeafFromGeometry.__init__>`\\ "
"\\(\\[edgeSeq\\, faceSeq\\, cellSeq\\]\\)"
msgstr ""

#: ../../None:3:<autosummary>:1
msgid ""
"This method creates a Leaf object from a sequence of edge, face and cell "
"geometry objects."
msgstr ""

#: abaqus.DisplayGroup.LeafFromGeometry.LeafFromGeometry.__init__:1 of
msgid ""
"This method creates a Leaf object from a sequence of edge, face and cell "
"geometry objects. Any combination of edge, face or cell arguments is "
"allowed however the arguments must specify at least one object--it is not"
" permissible to create an empty leaf."
msgstr ""

#: abaqus.DisplayGroup.LeafFromGeometry.LeafFromGeometry.__init__:12 of
msgid ""
"Check `LeafFromGeometry.__init__ on help.3ds.com/2020 "
"<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffromgeometrypyc.htm?contextscope=all"
"#simaker-leaffromgeometry__init__pyc>`__."
msgstr ""

#: abaqus.DisplayGroup.LeafFromGeometry.LeafFromGeometry.__init__:15 of
msgid "A sequence of geometry edges."
msgstr ""

#: abaqus.DisplayGroup.LeafFromGeometry.LeafFromGeometry.__init__:17 of
msgid "A sequence of geometry faces."
msgstr ""

#: abaqus.DisplayGroup.LeafFromGeometry.LeafFromGeometry.__init__:19 of
msgid "A sequence of geometry cells."
msgstr ""

#: abaqus.DisplayGroup.LeafFromGeometry.LeafFromGeometry.__init__:21 of
msgid "A LeafFromGeometry object."
msgstr ""

#: abaqus.DisplayGroup.LeafFromGeometry.LeafFromGeometry.__init__:22 of
msgid ":class:`LeafFromGeometry`"
msgstr ""

#: abaqus.DisplayGroup.LeafFromGeometry.LeafFromGeometry.__init__
#: abaqus.DisplayGroup.LeafFromInstance.LeafFromInstance.__init__ of
msgid "Raises"
msgstr ""

#: abaqus.DisplayGroup.LeafFromGeometry.LeafFromGeometry.__init__:24 of
msgid "If at least one of the sequences is not passed to this method."
msgstr ""

#: abaqus.DisplayGroup.LeafFromInstance.LeafFromInstance:1 of
msgid ""
"The LeafFromInstance object can be used whenever a Leaf object is "
"expected as an argument. Leaf objects are used to specify the items in a "
"display group. Leaf objects are constructed as temporary objects, which "
"are then used as arguments to DisplayGroup commands. The LeafFromInstance"
" object is derived from the Leaf object."
msgstr ""

#: abaqus.DisplayGroup.LeafFromInstance.LeafFromInstance:13 of
msgid ""
"Check `LeafFromInstance on help.3ds.com/2020 "
"<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffrominstancepyc.htm?contextscope=all>`__."
msgstr ""

#: ../../None:3:<autosummary>:1
msgid ""
":py:obj:`leafType "
"<abaqus.DisplayGroup.LeafFromInstance.LeafFromInstance.leafType>`\\"
msgstr ""

#: ../../None:3:<autosummary>:1
msgid ""
":py:obj:`__init__ "
"<abaqus.DisplayGroup.LeafFromInstance.LeafFromInstance.__init__>`\\ "
"\\(instances\\)"
msgstr ""

#: ../../None:3:<autosummary>:1
#: abaqus.DisplayGroup.LeafFromInstance.LeafFromInstance.__init__:1 of
msgid ""
"This method creates a Leaf object from a sequence of part instance "
"objects."
msgstr ""

#: abaqus.DisplayGroup.LeafFromInstance.LeafFromInstance.__init__:9 of
msgid ""
"Check `LeafFromInstance.__init__ on help.3ds.com/2020 "
"<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffrominstancepyc.htm?contextscope=all"
"#simaker-leaffrominstance__init__pyc>`__."
msgstr ""

#: abaqus.DisplayGroup.LeafFromInstance.LeafFromInstance.__init__:12 of
msgid "A PartInstance object or a Sequence of PartInstance objects."
msgstr ""

#: abaqus.DisplayGroup.LeafFromInstance.LeafFromInstance.__init__:14 of
msgid "A LeafFromInstance object."
msgstr ""

#: abaqus.DisplayGroup.LeafFromInstance.LeafFromInstance.__init__:15 of
msgid ":class:`LeafFromInstance`"
msgstr ""

#: abaqus.DisplayGroup.LeafFromInstance.LeafFromInstance.__init__:17 of
msgid "If an invalid argument is passed to this method."
msgstr ""

#: abaqus.DisplayGroup.LeafFromInstanceElementLabels.LeafFromInstanceElementLabels:1
#: of
msgid ""
"The LeafFromInstanceElementLabels object can be used whenever a Leaf "
"object is expected as an argument. Leaf objects are used to specify the "
"items in a display group. Leaf objects are constructed as temporary "
"objects, which are then used as arguments to DisplayGroup commands. The "
"LeafFromInstanceElementLabels object is derived from the Leaf object."
msgstr ""

#: abaqus.DisplayGroup.LeafFromInstanceElementLabels.LeafFromInstanceElementLabels:13
#: of
msgid ""
"Check `LeafFromInstanceElementLabels on help.3ds.com/2020 "
"<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffrominstanceelementlabelspyc.htm?contextscope=all>`__."
msgstr ""

#: ../../None:3:<autosummary>:1
msgid ""
":py:obj:`leafType "
"<abaqus.DisplayGroup.LeafFromInstanceElementLabels.LeafFromInstanceElementLabels.leafType>`\\"
msgstr ""

#: ../../None:3:<autosummary>:1
msgid ""
":py:obj:`__init__ "
"<abaqus.DisplayGroup.LeafFromInstanceElementLabels.LeafFromInstanceElementLabels.__init__>`\\"
" \\(elementLabels\\)"
msgstr ""

#: ../../None:3:<autosummary>:1
msgid ""
"This method creates a Leaf object from a sequence of Strings specifying "
"the element labels."
msgstr ""

#: abaqus.DisplayGroup.LeafFromInstanceElementLabels.LeafFromInstanceElementLabels.__init__:1
#: of
msgid ""
"This method creates a Leaf object from a sequence of Strings specifying "
"the element labels. Leaf objects specify the items in a display group."
msgstr ""

#: abaqus.DisplayGroup.LeafFromInstanceElementLabels.LeafFromInstanceElementLabels.__init__:10
#: of
msgid ""
"Check `LeafFromInstanceElementLabels.__init__ on help.3ds.com/2020 "
"<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffrominstanceelementlabelspyc.htm?contextscope=all"
"#simaker-leaffrominstanceelementlabels__init__pyc>`__."
msgstr ""

#: abaqus.DisplayGroup.LeafFromInstanceElementLabels.LeafFromInstanceElementLabels.__init__:13
#: of
msgid ""
"A sequence of sequences specifying element labels. Each inner sequence "
"consists of a PartInstance object followed by a sequence of Strings "
"specifying element labels."
msgstr ""

#: abaqus.DisplayGroup.LeafFromInstanceElementLabels.LeafFromInstanceElementLabels.__init__:16
#: of
msgid "A LeafFromInstanceElementLabels object."
msgstr ""

#: abaqus.DisplayGroup.LeafFromInstanceElementLabels.LeafFromInstanceElementLabels.__init__:17
#: of
msgid ":class:`LeafFromInstanceElementLabels`"
msgstr ""

#: abaqus.DisplayGroup.LeafFromInstanceNodeLabels.LeafFromInstanceNodeLabels:1
#: of
msgid ""
"The LeafFromInstanceNodeLabels object can be used whenever a Leaf object "
"is expected as an argument. Leaf objects are used to specify the items in"
" a display group. Leaf objects are constructed as temporary objects, "
"which are then used as arguments to DisplayGroup commands. The "
"LeafFromInstanceNodeLabels object is derived from the Leaf object."
msgstr ""

#: abaqus.DisplayGroup.LeafFromInstanceNodeLabels.LeafFromInstanceNodeLabels:13
#: of
msgid ""
"Check `LeafFromInstanceNodeLabels on help.3ds.com/2020 "
"<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffrominstancenodelabelspyc.htm?contextscope=all>`__."
msgstr ""

#: ../../None:3:<autosummary>:1
msgid ""
":py:obj:`leafType "
"<abaqus.DisplayGroup.LeafFromInstanceNodeLabels.LeafFromInstanceNodeLabels.leafType>`\\"
msgstr ""

#: ../../None:3:<autosummary>:1
msgid ""
":py:obj:`__init__ "
"<abaqus.DisplayGroup.LeafFromInstanceNodeLabels.LeafFromInstanceNodeLabels.__init__>`\\"
" \\(nodeLabels\\)"
msgstr ""

#: ../../None:3:<autosummary>:1
msgid ""
"This method creates a Leaf object from a sequence of Strings specifying "
"the node labels."
msgstr ""

#: abaqus.DisplayGroup.LeafFromInstanceNodeLabels.LeafFromInstanceNodeLabels.__init__:1
#: of
msgid ""
"This method creates a Leaf object from a sequence of Strings specifying "
"the node labels. Leaf objects specify the items in a display group."
msgstr ""

#: abaqus.DisplayGroup.LeafFromInstanceNodeLabels.LeafFromInstanceNodeLabels.__init__:10
#: of
msgid ""
"Check `LeafFromInstanceNodeLabels.__init__ on help.3ds.com/2020 "
"<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffrominstancenodelabelspyc.htm?contextscope=all"
"#simaker-leaffrominstancenodelabels__init__pyc>`__."
msgstr ""

#: abaqus.DisplayGroup.LeafFromInstanceNodeLabels.LeafFromInstanceNodeLabels.__init__:13
#: of
msgid ""
"A sequence of sequences specifying node labels. Each inner sequence "
"consists of a PartInstance object followed by a sequence of Strings "
"specifying node labels."
msgstr ""

#: abaqus.DisplayGroup.LeafFromInstanceNodeLabels.LeafFromInstanceNodeLabels.__init__:16
#: of
msgid "A LeafFromInstanceNodeLabels object."
msgstr ""

#: abaqus.DisplayGroup.LeafFromInstanceNodeLabels.LeafFromInstanceNodeLabels.__init__:17
#: of
msgid ":class:`LeafFromInstanceNodeLabels`"
msgstr ""

#: abaqus.DisplayGroup.LeafFromMeshElementLabels.LeafFromMeshElementLabels:1 of
msgid ""
"The LeafFromMeshElementLabels object can be used whenever a Leaf object "
"is expected as an argument. Leaf objects are used to specify the items in"
" a display group. Leaf objects are constructed as temporary objects, "
"which are then used as arguments to DisplayGroup commands. The "
"LeafFromMeshElementLabels object is derived from the Leaf object."
msgstr ""

#: abaqus.DisplayGroup.LeafFromMeshElementLabels.LeafFromMeshElementLabels:13
#: of
msgid ""
"Check `LeafFromMeshElementLabels on help.3ds.com/2020 "
"<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffrommeshelementlabelspyc.htm?contextscope=all>`__."
msgstr ""

#: ../../None:3:<autosummary>:1
msgid ""
":py:obj:`leafType "
"<abaqus.DisplayGroup.LeafFromMeshElementLabels.LeafFromMeshElementLabels.leafType>`\\"
msgstr ""

#: ../../None:3:<autosummary>:1
msgid ""
":py:obj:`__init__ "
"<abaqus.DisplayGroup.LeafFromMeshElementLabels.LeafFromMeshElementLabels.__init__>`\\"
" \\(elementSeq\\)"
msgstr ""

#: ../../None:3:<autosummary>:1
msgid "This method creates a Leaf object from a sequence of mesh element objects."
msgstr ""

#: abaqus.DisplayGroup.LeafFromMeshElementLabels.LeafFromMeshElementLabels.__init__:1
#: of
msgid ""
"This method creates a Leaf object from a sequence of mesh element "
"objects. Leaf objects specify the items in a display group."
msgstr ""

#: abaqus.DisplayGroup.LeafFromMeshElementLabels.LeafFromMeshElementLabels.__init__:10
#: of
msgid ""
"Check `LeafFromMeshElementLabels.__init__ on help.3ds.com/2020 "
"<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffrommeshelementlabelspyc.htm?contextscope=all"
"#simaker-leaffrommeshelementlabels__init__pyc>`__."
msgstr ""

#: abaqus.DisplayGroup.LeafFromMeshElementLabels.LeafFromMeshElementLabels.__init__:13
#: of
msgid "A sequence of MeshElement objects specifying elements."
msgstr ""

#: abaqus.DisplayGroup.LeafFromMeshElementLabels.LeafFromMeshElementLabels.__init__:15
#: of
msgid "A LeafFromMeshElementLabels object."
msgstr ""

#: abaqus.DisplayGroup.LeafFromMeshElementLabels.LeafFromMeshElementLabels.__init__:16
#: of
msgid ":class:`LeafFromMeshElementLabels`"
msgstr ""

#: abaqus.DisplayGroup.LeafFromMeshNodeLabels.LeafFromMeshNodeLabels:1 of
msgid ""
"The LeafFromMeshNodeLabels object can be used whenever a Leaf object is "
"expected as an argument. Leaf objects are used to specify the items in a "
"display group. Leaf objects are constructed as temporary objects, which "
"are then used as arguments to DisplayGroup commands. The "
"LeafFromMeshNodeLabels object is derived from the Leaf object."
msgstr ""

#: abaqus.DisplayGroup.LeafFromMeshNodeLabels.LeafFromMeshNodeLabels:13 of
msgid ""
"Check `LeafFromMeshNodeLabels on help.3ds.com/2020 "
"<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffrommeshnodelabelspyc.htm?contextscope=all>`__."
msgstr ""

#: ../../None:3:<autosummary>:1
msgid ""
":py:obj:`leafType "
"<abaqus.DisplayGroup.LeafFromMeshNodeLabels.LeafFromMeshNodeLabels.leafType>`\\"
msgstr ""

#: ../../None:3:<autosummary>:1
msgid ""
":py:obj:`__init__ "
"<abaqus.DisplayGroup.LeafFromMeshNodeLabels.LeafFromMeshNodeLabels.__init__>`\\"
" \\(nodeSeq\\)"
msgstr ""

#: ../../None:3:<autosummary>:1
msgid "This method creates a Leaf object from a sequence of mesh node objects."
msgstr ""

#: abaqus.DisplayGroup.LeafFromMeshNodeLabels.LeafFromMeshNodeLabels.__init__:1
#: of
msgid ""
"This method creates a Leaf object from a sequence of mesh node objects. "
"Leaf objects specify the items in a display group."
msgstr ""

#: abaqus.DisplayGroup.LeafFromMeshNodeLabels.LeafFromMeshNodeLabels.__init__:10
#: of
msgid ""
"Check `LeafFromMeshNodeLabels.__init__ on help.3ds.com/2020 "
"<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffrommeshnodelabelspyc.htm?contextscope=all"
"#simaker-leaffrommeshnodelabels__init__pyc>`__."
msgstr ""

#: abaqus.DisplayGroup.LeafFromMeshNodeLabels.LeafFromMeshNodeLabels.__init__:13
#: of
msgid "A sequence of MeshNode objects specifying nodes."
msgstr ""

#: abaqus.DisplayGroup.LeafFromMeshNodeLabels.LeafFromMeshNodeLabels.__init__:15
#: of
msgid "A LeafFromMeshNodeLabels object."
msgstr ""

#: abaqus.DisplayGroup.LeafFromMeshNodeLabels.LeafFromMeshNodeLabels.__init__:16
#: of
msgid ":class:`LeafFromMeshNodeLabels`"
msgstr ""

#: abaqus.DisplayGroup.LeafFromMeshSurfaceSets.LeafFromMeshSurfaceSets:1 of
msgid ""
"The LeafFromMeshSurfaceSets object can be used whenever a Leaf object is "
"expected as an argument. Leaf objects are used to specify the items in a "
"display group. Leaf objects are constructed as temporary objects, which "
"are then used as arguments to DisplayGroup commands. The "
"LeafFromMeshSurfaceSets object is derived from the Leaf object."
msgstr ""

#: abaqus.DisplayGroup.LeafFromMeshSurfaceSets.LeafFromMeshSurfaceSets:13 of
msgid ""
"Check `LeafFromMeshSurfaceSets on help.3ds.com/2020 "
"<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffrommeshsurfacesetspyc.htm?contextscope=all>`__."
msgstr ""

#: ../../None:3:<autosummary>:1
msgid ""
":py:obj:`leafType "
"<abaqus.DisplayGroup.LeafFromMeshSurfaceSets.LeafFromMeshSurfaceSets.leafType>`\\"
msgstr ""

#: ../../None:3:<autosummary>:1
msgid ""
":py:obj:`__init__ "
"<abaqus.DisplayGroup.LeafFromMeshSurfaceSets.LeafFromMeshSurfaceSets.__init__>`\\"
" \\(surfaceSets\\)"
msgstr ""

#: ../../None:3:<autosummary>:1
#: abaqus.DisplayGroup.LeafFromMeshSurfaceSets.LeafFromMeshSurfaceSets.__init__:1
#: abaqus.DisplayGroup.LeafFromSurfaceSets.LeafFromSurfaceSets.__init__:1 of
msgid "This method creates a Leaf object from a sequence of surface sets."
msgstr ""

#: abaqus.DisplayGroup.LeafFromMeshSurfaceSets.LeafFromMeshSurfaceSets.__init__:9
#: of
msgid ""
"Check `LeafFromMeshSurfaceSets.__init__ on help.3ds.com/2020 "
"<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffrommeshsurfacesetspyc.htm?contextscope=all"
"#simaker-leaffrommeshsurfacesets__init__pyc>`__."
msgstr ""

#: abaqus.DisplayGroup.LeafFromMeshSurfaceSets.LeafFromMeshSurfaceSets.__init__:12
#: of
msgid "A sequence of Surface objects."
msgstr ""

#: abaqus.DisplayGroup.LeafFromMeshSurfaceSets.LeafFromMeshSurfaceSets.__init__:14
#: of
msgid "A LeafFromMeshSurfaceSets object."
msgstr ""

#: abaqus.DisplayGroup.LeafFromMeshSurfaceSets.LeafFromMeshSurfaceSets.__init__:15
#: of
msgid ":class:`LeafFromMeshSurfaceSets`"
msgstr ""

#: abaqus.DisplayGroup.LeafFromModelElemLabels.LeafFromModelElemLabels:1 of
msgid ""
"The LeafFromModelElemLabels object can be used whenever a Leaf object is "
"expected as an argument. Leaf objects are used to specify the items in a "
"display group. Leaf objects are constructed as temporary objects, which "
"are then used as arguments to DisplayGroup commands. The "
"LeafFromModelElemLabels object is derived from the Leaf object."
msgstr ""

#: abaqus.DisplayGroup.LeafFromModelElemLabels.LeafFromModelElemLabels:13 of
msgid ""
"Check `LeafFromModelElemLabels on help.3ds.com/2020 "
"<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffrommodelelemlabelspyc.htm?contextscope=all>`__."
msgstr ""

#: ../../None:3:<autosummary>:1
msgid ""
":py:obj:`leafType "
"<abaqus.DisplayGroup.LeafFromModelElemLabels.LeafFromModelElemLabels.leafType>`\\"
msgstr ""

#: ../../None:3:<autosummary>:1
msgid ""
":py:obj:`__init__ "
"<abaqus.DisplayGroup.LeafFromModelElemLabels.LeafFromModelElemLabels.__init__>`\\"
" \\(elementLabels\\)"
msgstr ""

#: ../../None:3:<autosummary>:1
#: abaqus.DisplayGroup.LeafFromModelElemLabels.LeafFromModelElemLabels.__init__:1
#: of
msgid ""
"This method creates a Leaf object from a sequence of element labels "
"spanning several part instances."
msgstr ""

#: abaqus.DisplayGroup.LeafFromModelElemLabels.LeafFromModelElemLabels.__init__:10
#: of
msgid ""
"Check `LeafFromModelElemLabels.__init__ on help.3ds.com/2020 "
"<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffrommodelelemlabelspyc.htm?contextscope=all"
"#simaker-leaffrommodelelemlabels__init__pyc>`__."
msgstr ""

#: ../../docstring
#: abaqus.DisplayGroup.LeafFromModelElemLabels.LeafFromModelElemLabels.__init__:13
#: abaqus.DisplayGroup.LeafFromModelElemLabels.LeafFromModelElemLabels.elementLabels:1
#: of
msgid ""
"A sequence of Strings specifying expressions that denote element labels "
"per part instance in the model. Each part instance element expression is "
"a sequence of a String specifying the part instance name and a sequence "
"of element expressions; for example, "
"`(('partInstance1',(1,'7','3:15;3'),), ('partInstance2','8'),))`. The "
"element expressions can be any of the following:An Int specifying a "
"single element label; for example, `1`.A String specifying a single "
"element label; for example, `'7'`.A String specifying a sequence of "
"element labels; for example, `'3:5'` and `'3:15:3'`."
msgstr ""

#: abaqus.DisplayGroup.LeafFromModelElemLabels.LeafFromModelElemLabels.__init__:21
#: of
msgid "A LeafFromModelElemLabels object."
msgstr ""

#: abaqus.DisplayGroup.LeafFromModelElemLabels.LeafFromModelElemLabels.__init__:22
#: of
msgid ":class:`LeafFromModelElemLabels`"
msgstr ""

#: abaqus.DisplayGroup.LeafFromModelNodeLabels.LeafFromModelNodeLabels:1 of
msgid ""
"The LeafFromModelNodeLabels object can be used whenever a Leaf object is "
"expected as an argument. Leaf objects are used to specify the items in a "
"display group. Leaf objects are constructed as temporary objects, which "
"are then used as arguments to DisplayGroup commands. The "
"LeafFromModelNodeLabels object is derived from the Leaf object."
msgstr ""

#: abaqus.DisplayGroup.LeafFromModelNodeLabels.LeafFromModelNodeLabels:13 of
msgid ""
"Check `LeafFromModelNodeLabels on help.3ds.com/2020 "
"<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffrommodelnodelabelspyc.htm?contextscope=all>`__."
msgstr ""

#: ../../None:3:<autosummary>:1
msgid ""
":py:obj:`leafType "
"<abaqus.DisplayGroup.LeafFromModelNodeLabels.LeafFromModelNodeLabels.leafType>`\\"
msgstr ""

#: ../../None:3:<autosummary>:1
msgid ""
":py:obj:`__init__ "
"<abaqus.DisplayGroup.LeafFromModelNodeLabels.LeafFromModelNodeLabels.__init__>`\\"
" \\(nodeLabels\\)"
msgstr ""

#: ../../None:3:<autosummary>:1
#: abaqus.DisplayGroup.LeafFromModelNodeLabels.LeafFromModelNodeLabels.__init__:1
#: of
msgid ""
"This method creates a Leaf object from a sequence of node labels spanning"
" several part instances."
msgstr ""

#: abaqus.DisplayGroup.LeafFromModelNodeLabels.LeafFromModelNodeLabels.__init__:10
#: of
msgid ""
"Check `LeafFromModelNodeLabels.__init__ on help.3ds.com/2020 "
"<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffrommodelnodelabelspyc.htm?contextscope=all"
"#simaker-leaffrommodelnodelabels__init__pyc>`__."
msgstr ""

#: ../../docstring
#: abaqus.DisplayGroup.LeafFromModelNodeLabels.LeafFromModelNodeLabels.__init__:13
#: abaqus.DisplayGroup.LeafFromModelNodeLabels.LeafFromModelNodeLabels.nodeLabels:1
#: of
msgid ""
"A sequence of Strings specifying expressions that denote node labels per "
"part instance in the model. Each part instance node expression is a "
"sequence of a String specifying the part instance name and a sequence of "
"node expressions; for example, `(('partInstance1',(1,'7','3:15;3'),), "
"('partInstance2','8'),))`. The node expressions can be any of the "
"following:An Int specifying a single node label; for example, `1`.A "
"String specifying a single node label; for example, `'7'`.A String "
"specifying a sequence of node labels; for example, `'3:5'` and "
"`'3:15:3'`."
msgstr ""

#: abaqus.DisplayGroup.LeafFromModelNodeLabels.LeafFromModelNodeLabels.__init__:21
#: of
msgid "A LeafFromModelNodeLabels object."
msgstr ""

#: abaqus.DisplayGroup.LeafFromModelNodeLabels.LeafFromModelNodeLabels.__init__:22
#: of
msgid ":class:`LeafFromModelNodeLabels`"
msgstr ""

#: abaqus.DisplayGroup.LeafFromNodeLabels.LeafFromNodeLabels:1 of
msgid ""
"The LeafFromNodeLabels object can be used whenever a Leaf object is "
"expected as an argument. Leaf objects are used to specify the items in a "
"display group. Leaf objects are constructed as temporary objects, which "
"are then used as arguments to DisplayGroup commands. The "
"LeafFromNodeLabels object is derived from the Leaf object."
msgstr ""

#: abaqus.DisplayGroup.LeafFromNodeLabels.LeafFromNodeLabels:13 of
msgid ""
"Check `LeafFromNodeLabels on help.3ds.com/2020 "
"<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffromnodelabelspyc.htm?contextscope=all>`__."
msgstr ""

#: ../../None:3:<autosummary>:1
msgid ""
":py:obj:`leafType "
"<abaqus.DisplayGroup.LeafFromNodeLabels.LeafFromNodeLabels.leafType>`\\"
msgstr ""

#: ../../None:3:<autosummary>:1
msgid ""
":py:obj:`__init__ "
"<abaqus.DisplayGroup.LeafFromNodeLabels.LeafFromNodeLabels.__init__>`\\ "
"\\(partInstanceName\\, nodeLabels\\)"
msgstr ""

#: ../../None:3:<autosummary>:1
#: abaqus.DisplayGroup.LeafFromNodeLabels.LeafFromNodeLabels.__init__:1 of
msgid ""
"This method creates a Leaf object from a sequence of node labels that "
"belong to a single part instance."
msgstr ""

#: abaqus.DisplayGroup.LeafFromNodeLabels.LeafFromNodeLabels.__init__:10 of
msgid ""
"Check `LeafFromNodeLabels.__init__ on help.3ds.com/2020 "
"<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffromnodelabelspyc.htm?contextscope=all"
"#simaker-leaffromnodelabels__init__pyc>`__."
msgstr ""

#: ../../docstring
#: abaqus.DisplayGroup.LeafFromNodeLabels.LeafFromNodeLabels.__init__:13
#: abaqus.DisplayGroup.LeafFromNodeLabels.LeafFromNodeLabels.partInstanceName:1
#: of
msgid ""
"A String specifying the name of the part instance to which **nodeLabels**"
" refers."
msgstr ""

#: ../../docstring
#: abaqus.DisplayGroup.LeafFromNodeLabels.LeafFromNodeLabels.__init__:15
#: abaqus.DisplayGroup.LeafFromNodeLabels.LeafFromNodeLabels.nodeLabels:1 of
msgid ""
"A sequence of Strings specifying expressions that denote node labels. The"
" expression can be any of the following:An Int specifying a single node "
"label; for example, `1`.A String specifying a single node label; for "
"example, `'7'`.A String specifying a sequence of node labels; for "
"example, `'3:5'` and `'3:15:3'`."
msgstr ""

#: abaqus.DisplayGroup.LeafFromNodeLabels.LeafFromNodeLabels.__init__:20 of
msgid "A LeafFromNodeLabels object."
msgstr ""

#: abaqus.DisplayGroup.LeafFromNodeLabels.LeafFromNodeLabels.__init__:21 of
msgid ":class:`LeafFromNodeLabels`"
msgstr ""

#: abaqus.DisplayGroup.LeafFromNodeSets.LeafFromNodeSets:1 of
msgid ""
"The LeafFromNodeSets object can be used whenever a Leaf object is "
"expected as an argument. Leaf objects are used to specify the items in a "
"display group. Leaf objects are constructed as temporary objects, which "
"are then used as arguments to DisplayGroup commands. The LeafFromNodeSets"
" object is derived from the Leaf object."
msgstr ""

#: abaqus.DisplayGroup.LeafFromNodeSets.LeafFromNodeSets:13 of
msgid ""
"Check `LeafFromNodeSets on help.3ds.com/2020 "
"<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffromnodesetspyc.htm?contextscope=all>`__."
msgstr ""

#: ../../None:3:<autosummary>:1
msgid ""
":py:obj:`leafType "
"<abaqus.DisplayGroup.LeafFromNodeSets.LeafFromNodeSets.leafType>`\\"
msgstr ""

#: ../../None:3:<autosummary>:1
msgid ""
":py:obj:`__init__ "
"<abaqus.DisplayGroup.LeafFromNodeSets.LeafFromNodeSets.__init__>`\\ "
"\\(nodeSets\\)"
msgstr ""

#: ../../None:3:<autosummary>:1
#: abaqus.DisplayGroup.LeafFromNodeSets.LeafFromNodeSets.__init__:1 of
msgid "This method creates a Leaf object from a sequence of node sets."
msgstr ""

#: abaqus.DisplayGroup.LeafFromNodeSets.LeafFromNodeSets.__init__:9 of
msgid ""
"Check `LeafFromNodeSets.__init__ on help.3ds.com/2020 "
"<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffromnodesetspyc.htm?contextscope=all"
"#simaker-leaffromnodesets__init__pyc>`__."
msgstr ""

#: ../../docstring
#: abaqus.DisplayGroup.LeafFromNodeSets.LeafFromNodeSets.__init__:12
#: abaqus.DisplayGroup.LeafFromNodeSets.LeafFromNodeSets.nodeSets:1 of
msgid ""
"A sequence of Strings specifying node sets or a String specifying a "
"single node set."
msgstr ""

#: abaqus.DisplayGroup.LeafFromNodeSets.LeafFromNodeSets.__init__:14 of
msgid "A LeafFromNodeSets object."
msgstr ""

#: abaqus.DisplayGroup.LeafFromNodeSets.LeafFromNodeSets.__init__:15 of
msgid ":class:`LeafFromNodeSets`"
msgstr ""

#: abaqus.DisplayGroup.LeafFromNodeVarRange.LeafFromNodeVarRange:1 of
msgid ""
"The LeafFromNodeVarRange object can be used whenever a Leaf object is "
"expected as an argument. Leaf objects are used to specify the items in a "
"display group. Leaf objects are constructed as temporary objects, which "
"are then used as arguments to DisplayGroup commands. The "
"LeafFromNodeVarRange object is derived from the Leaf object."
msgstr ""

#: abaqus.DisplayGroup.LeafFromNodeVarRange.LeafFromNodeVarRange:13 of
msgid ""
"Check `LeafFromNodeVarRange on help.3ds.com/2020 "
"<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffromnodevarrangepyc.htm?contextscope=all>`__."
msgstr ""

#: ../../None:6:<autosummary>:1
msgid ""
":py:obj:`leafType "
"<abaqus.DisplayGroup.LeafFromNodeVarRange.LeafFromNodeVarRange.leafType>`\\"
msgstr ""

#: ../../None:6:<autosummary>:1
msgid ""
":py:obj:`minimumRange "
"<abaqus.DisplayGroup.LeafFromNodeVarRange.LeafFromNodeVarRange.minimumRange>`\\"
msgstr ""

#: ../../None:6:<autosummary>:1
msgid ""
":py:obj:`maximumRange "
"<abaqus.DisplayGroup.LeafFromNodeVarRange.LeafFromNodeVarRange.maximumRange>`\\"
msgstr ""

#: ../../None:6:<autosummary>:1
msgid ""
":py:obj:`insideRange "
"<abaqus.DisplayGroup.LeafFromNodeVarRange.LeafFromNodeVarRange.insideRange>`\\"
msgstr ""

#: ../../None:3:<autosummary>:1
msgid ""
":py:obj:`__init__ "
"<abaqus.DisplayGroup.LeafFromNodeVarRange.LeafFromNodeVarRange.__init__>`\\"
" \\(\\[minimumRange\\, maximumRange\\, ...\\]\\)"
msgstr ""

#: ../../None:3:<autosummary>:1
#: abaqus.DisplayGroup.LeafFromNodeVarRange.LeafFromNodeVarRange.__init__:1 of
msgid ""
"This method creates a Leaf object from nodes with values lying in a "
"variable range."
msgstr ""

#: abaqus.DisplayGroup.LeafFromNodeVarRange.LeafFromNodeVarRange.__init__:9 of
msgid ""
"Check `LeafFromNodeVarRange.__init__ on help.3ds.com/2020 "
"<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffromnodevarrangepyc.htm?contextscope=all"
"#simaker-leaffromnodevarrange__init__pyc>`__."
msgstr ""

#: abaqus.DisplayGroup.LeafFromNodeVarRange.LeafFromNodeVarRange.__init__:21 of
msgid "A LeafFromNodeVarRange object."
msgstr ""

#: abaqus.DisplayGroup.LeafFromNodeVarRange.LeafFromNodeVarRange.__init__:22 of
msgid ":class:`LeafFromNodeVarRange`"
msgstr ""

#: abaqus.DisplayGroup.LeafFromOdbEdgePick.LeafFromOdbEdgePick:1 of
msgid ""
"The LeafFromOdbEdgePick object can be used whenever a Leaf object is "
"expected as an argument. Leaf objects are used to specify the items in a "
"display group. Leaf objects are constructed as temporary objects, which "
"are then used as arguments to DisplayGroup commands. The "
"LeafFromOdbEdgePick object is derived from the Leaf object."
msgstr ""

#: abaqus.DisplayGroup.LeafFromOdbEdgePick.LeafFromOdbEdgePick:13 of
msgid ""
"Check `LeafFromOdbEdgePick on help.3ds.com/2020 "
"<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffromodbedgepickpyc.htm?contextscope=all>`__."
msgstr ""

#: ../../None:3:<autosummary>:1
msgid ""
":py:obj:`leafType "
"<abaqus.DisplayGroup.LeafFromOdbEdgePick.LeafFromOdbEdgePick.leafType>`\\"
msgstr ""

#: ../../None:3:<autosummary>:1
msgid ""
":py:obj:`__init__ "
"<abaqus.DisplayGroup.LeafFromOdbEdgePick.LeafFromOdbEdgePick.__init__>`\\"
" \\(edgePick\\)"
msgstr ""

#: ../../None:3:<autosummary>:1
msgid ""
"This method creates a Leaf object from a tuple containing machine "
"readable, compact strings defining the edges picked for each part "
"instance."
msgstr ""

#: abaqus.DisplayGroup.LeafFromOdbEdgePick.LeafFromOdbEdgePick.__init__:1 of
msgid ""
"This method creates a Leaf object from a tuple containing machine "
"readable, compact strings defining the edges picked for each part "
"instance. Leaf objects specify the items in a display group."
msgstr ""

#: abaqus.DisplayGroup.LeafFromOdbEdgePick.LeafFromOdbEdgePick.__init__:11 of
msgid ""
"Check `LeafFromOdbEdgePick.__init__ on help.3ds.com/2020 "
"<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffromodbedgepickpyc.htm?contextscope=all"
"#simaker-leaffromodbedgepick__init__pyc>`__."
msgstr ""

#: abaqus.DisplayGroup.LeafFromOdbEdgePick.LeafFromOdbEdgePick.__init__:14
#: abaqus.DisplayGroup.LeafFromOdbElementPick.LeafFromOdbElementPick.__init__:14
#: abaqus.DisplayGroup.LeafFromOdbNodePick.LeafFromOdbNodePick.__init__:14 of
msgid ""
"A sequence of tuples of the form [part name, entity count, machine "
"readable pick strings]."
msgstr ""

#: abaqus.DisplayGroup.LeafFromOdbEdgePick.LeafFromOdbEdgePick.__init__:17 of
msgid "A LeafFromOdbEdgePick object."
msgstr ""

#: abaqus.DisplayGroup.LeafFromOdbEdgePick.LeafFromOdbEdgePick.__init__:18 of
msgid ":class:`LeafFromOdbEdgePick`"
msgstr ""

#: abaqus.DisplayGroup.LeafFromOdbElementLayups.LeafFromOdbElementLayups:1 of
msgid ""
"The LeafFromOdbElementLayups object can be used whenever a Leaf object is"
" expected as an argument. Leaf objects are used to specify the items in a"
" display group. Leaf objects are constructed as temporary objects, which "
"are then used as arguments to DisplayGroup commands. The "
"LeafFromOdbElementLayups object is derived from the Leaf object."
msgstr ""

#: abaqus.DisplayGroup.LeafFromOdbElementLayups.LeafFromOdbElementLayups:13 of
msgid ""
"Check `LeafFromOdbElementLayups on help.3ds.com/2020 "
"<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffromodbelementlayupspyc.htm?contextscope=all>`__."
msgstr ""

#: ../../None:3:<autosummary>:1
msgid ""
":py:obj:`leafType "
"<abaqus.DisplayGroup.LeafFromOdbElementLayups.LeafFromOdbElementLayups.leafType>`\\"
msgstr ""

#: ../../None:3:<autosummary>:1
msgid ""
":py:obj:`__init__ "
"<abaqus.DisplayGroup.LeafFromOdbElementLayups.LeafFromOdbElementLayups.__init__>`\\"
" \\(elementLayups\\)"
msgstr ""

#: ../../None:3:<autosummary>:1
msgid ""
"This method creates a Leaf object from a sequence of Strings specifying "
"layup names."
msgstr ""

#: abaqus.DisplayGroup.LeafFromOdbElementLayups.LeafFromOdbElementLayups.__init__:1
#: of
msgid ""
"This method creates a Leaf object from a sequence of Strings specifying "
"layup names. Leaf objects specify the items in a display group."
msgstr ""

#: abaqus.DisplayGroup.LeafFromOdbElementLayups.LeafFromOdbElementLayups.__init__:10
#: of
msgid ""
"Check `LeafFromOdbElementLayups.__init__ on help.3ds.com/2020 "
"<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffromodbelementlayupspyc.htm?contextscope=all"
"#simaker-leaffromodbelementlayups__init__pyc>`__."
msgstr ""

#: abaqus.DisplayGroup.LeafFromOdbElementLayups.LeafFromOdbElementLayups.__init__:13
#: of
msgid "A sequence of Strings specifying element layups."
msgstr ""

#: abaqus.DisplayGroup.LeafFromOdbElementLayups.LeafFromOdbElementLayups.__init__:15
#: of
msgid "A LeafFromOdbElementLayups object."
msgstr ""

#: abaqus.DisplayGroup.LeafFromOdbElementLayups.LeafFromOdbElementLayups.__init__:16
#: of
msgid ":class:`LeafFromOdbElementLayups`"
msgstr ""

#: abaqus.DisplayGroup.LeafFromOdbElementMaterials.LeafFromOdbElementMaterials:1
#: of
msgid ""
"The LeafFromOdbElementMaterials object can be used whenever a Leaf object"
" is expected as an argument. Leaf objects are used to specify the items "
"in a display group. Leaf objects are constructed as temporary objects, "
"which are then used as arguments to DisplayGroup commands. The "
"LeafFromOdbElementMaterials object is derived from the Leaf object."
msgstr ""

#: abaqus.DisplayGroup.LeafFromOdbElementMaterials.LeafFromOdbElementMaterials:13
#: of
msgid ""
"Check `LeafFromOdbElementMaterials on help.3ds.com/2020 "
"<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffromodbelementmaterialspyc.htm?contextscope=all>`__."
msgstr ""

#: ../../None:3:<autosummary>:1
msgid ""
":py:obj:`leafType "
"<abaqus.DisplayGroup.LeafFromOdbElementMaterials.LeafFromOdbElementMaterials.leafType>`\\"
msgstr ""

#: ../../None:3:<autosummary>:1
msgid ""
":py:obj:`__init__ "
"<abaqus.DisplayGroup.LeafFromOdbElementMaterials.LeafFromOdbElementMaterials.__init__>`\\"
" \\(elementMaterials\\)"
msgstr ""

#: ../../None:3:<autosummary>:1
msgid ""
"This method creates a Leaf object from a sequence of Strings specifying "
"material names."
msgstr ""

#: abaqus.DisplayGroup.LeafFromOdbElementMaterials.LeafFromOdbElementMaterials.__init__:1
#: of
msgid ""
"This method creates a Leaf object from a sequence of Strings specifying "
"material names. Leaf objects specify the items in a display group."
msgstr ""

#: abaqus.DisplayGroup.LeafFromOdbElementMaterials.LeafFromOdbElementMaterials.__init__:10
#: of
msgid ""
"Check `LeafFromOdbElementMaterials.__init__ on help.3ds.com/2020 "
"<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffromodbelementmaterialspyc.htm?contextscope=all"
"#simaker-leaffromodbelementmaterials__init__pyc>`__."
msgstr ""

#: abaqus.DisplayGroup.LeafFromOdbElementMaterials.LeafFromOdbElementMaterials.__init__:13
#: of
msgid "A sequence of Strings specifying element materials."
msgstr ""

#: abaqus.DisplayGroup.LeafFromOdbElementMaterials.LeafFromOdbElementMaterials.__init__:15
#: of
msgid "A LeafFromOdbElementMaterials object."
msgstr ""

#: abaqus.DisplayGroup.LeafFromOdbElementMaterials.LeafFromOdbElementMaterials.__init__:16
#: of
msgid ":class:`LeafFromOdbElementMaterials`"
msgstr ""

#: abaqus.DisplayGroup.LeafFromOdbElementPick.LeafFromOdbElementPick:1 of
msgid ""
"The LeafFromOdbElementPick object can be used whenever a Leaf object is "
"expected as an argument. Leaf objects are used to specify the items in a "
"display group. Leaf objects are constructed as temporary objects, which "
"are then used as arguments to DisplayGroup commands. The "
"LeafFromOdbElementPick object is derived from the Leaf object."
msgstr ""

#: abaqus.DisplayGroup.LeafFromOdbElementPick.LeafFromOdbElementPick:13 of
msgid ""
"Check `LeafFromOdbElementPick on help.3ds.com/2020 "
"<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffromodbelementpickpyc.htm?contextscope=all>`__."
msgstr ""

#: ../../None:3:<autosummary>:1
msgid ""
":py:obj:`leafType "
"<abaqus.DisplayGroup.LeafFromOdbElementPick.LeafFromOdbElementPick.leafType>`\\"
msgstr ""

#: ../../None:3:<autosummary>:1
msgid ""
":py:obj:`__init__ "
"<abaqus.DisplayGroup.LeafFromOdbElementPick.LeafFromOdbElementPick.__init__>`\\"
" \\(elementPick\\)"
msgstr ""

#: ../../None:3:<autosummary>:1
msgid ""
"This method creates a Leaf object from a tuple containing machine "
"readable, compact strings defining the elements picked for each part "
"instance."
msgstr ""

#: abaqus.DisplayGroup.LeafFromOdbElementPick.LeafFromOdbElementPick.__init__:1
#: of
msgid ""
"This method creates a Leaf object from a tuple containing machine "
"readable, compact strings defining the elements picked for each part "
"instance. Leaf objects specify the items in a display group."
msgstr ""

#: abaqus.DisplayGroup.LeafFromOdbElementPick.LeafFromOdbElementPick.__init__:11
#: of
msgid ""
"Check `LeafFromOdbElementPick.__init__ on help.3ds.com/2020 "
"<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffromodbelementpickpyc.htm?contextscope=all"
"#simaker-leaffromodbelementpick__init__pyc>`__."
msgstr ""

#: abaqus.DisplayGroup.LeafFromOdbElementPick.LeafFromOdbElementPick.__init__:17
#: of
msgid "A LeafFromOdbElementPick object."
msgstr ""

#: abaqus.DisplayGroup.LeafFromOdbElementPick.LeafFromOdbElementPick.__init__:18
#: of
msgid ":class:`LeafFromOdbElementPick`"
msgstr ""

#: abaqus.DisplayGroup.LeafFromOdbElementPlies.LeafFromOdbElementPlies:1 of
msgid ""
"The LeafFromOdbElementPlies object can be used whenever a Leaf object is "
"expected as an argument. Leaf objects are used to specify the items in a "
"display group. Leaf objects are constructed as temporary objects, which "
"are then used as arguments to DisplayGroup commands. The "
"LeafFromOdbElementPlies object is derived from the Leaf object."
msgstr ""

#: abaqus.DisplayGroup.LeafFromOdbElementPlies.LeafFromOdbElementPlies:13 of
msgid ""
"Check `LeafFromOdbElementPlies on help.3ds.com/2020 "
"<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffromodbelementpliespyc.htm?contextscope=all>`__."
msgstr ""

#: ../../None:3:<autosummary>:1
msgid ""
":py:obj:`leafType "
"<abaqus.DisplayGroup.LeafFromOdbElementPlies.LeafFromOdbElementPlies.leafType>`\\"
msgstr ""

#: ../../None:3:<autosummary>:1
msgid ""
":py:obj:`__init__ "
"<abaqus.DisplayGroup.LeafFromOdbElementPlies.LeafFromOdbElementPlies.__init__>`\\"
" \\(elementPlies\\)"
msgstr ""

#: ../../None:3:<autosummary>:1
msgid ""
"This method creates a Leaf object from a sequence of Strings specifying "
"ply names."
msgstr ""

#: abaqus.DisplayGroup.LeafFromOdbElementPlies.LeafFromOdbElementPlies.__init__:1
#: of
msgid ""
"This method creates a Leaf object from a sequence of Strings specifying "
"ply names. Leaf objects specify the items in a display group."
msgstr ""

#: abaqus.DisplayGroup.LeafFromOdbElementPlies.LeafFromOdbElementPlies.__init__:10
#: of
msgid ""
"Check `LeafFromOdbElementPlies.__init__ on help.3ds.com/2020 "
"<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffromodbelementpliespyc.htm?contextscope=all"
"#simaker-leaffromodbelementplies__init__pyc>`__."
msgstr ""

#: abaqus.DisplayGroup.LeafFromOdbElementPlies.LeafFromOdbElementPlies.__init__:13
#: of
msgid "A sequence of Strings specifying element plies."
msgstr ""

#: abaqus.DisplayGroup.LeafFromOdbElementPlies.LeafFromOdbElementPlies.__init__:15
#: of
msgid "A LeafFromOdbElementPlies object."
msgstr ""

#: abaqus.DisplayGroup.LeafFromOdbElementPlies.LeafFromOdbElementPlies.__init__:16
#: of
msgid ":class:`LeafFromOdbElementPlies`"
msgstr ""

#: abaqus.DisplayGroup.LeafFromOdbElementSections.LeafFromOdbElementSections:1
#: of
msgid ""
"The LeafFromOdbElementSections object can be used whenever a Leaf object "
"is expected as an argument. Leaf objects are used to specify the items in"
" a display group. Leaf objects are constructed as temporary objects, "
"which are then used as arguments to DisplayGroup commands. The "
"LeafFromOdbElementSections object is derived from the Leaf object."
msgstr ""

#: abaqus.DisplayGroup.LeafFromOdbElementSections.LeafFromOdbElementSections:13
#: of
msgid ""
"Check `LeafFromOdbElementSections on help.3ds.com/2020 "
"<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffromodbelementsectionspyc.htm?contextscope=all>`__."
msgstr ""

#: ../../None:3:<autosummary>:1
msgid ""
":py:obj:`leafType "
"<abaqus.DisplayGroup.LeafFromOdbElementSections.LeafFromOdbElementSections.leafType>`\\"
msgstr ""

#: ../../None:3:<autosummary>:1
msgid ""
":py:obj:`__init__ "
"<abaqus.DisplayGroup.LeafFromOdbElementSections.LeafFromOdbElementSections.__init__>`\\"
" \\(elementSections\\)"
msgstr ""

#: ../../None:3:<autosummary>:1
msgid ""
"This method creates a Leaf object from a sequence of Strings specifying "
"section names."
msgstr ""

#: abaqus.DisplayGroup.LeafFromOdbElementSections.LeafFromOdbElementSections.__init__:1
#: of
msgid ""
"This method creates a Leaf object from a sequence of Strings specifying "
"section names. Leaf objects specify the items in a display group."
msgstr ""

#: abaqus.DisplayGroup.LeafFromOdbElementSections.LeafFromOdbElementSections.__init__:10
#: of
msgid ""
"Check `LeafFromOdbElementSections.__init__ on help.3ds.com/2020 "
"<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffromodbelementsectionspyc.htm?contextscope=all"
"#simaker-leaffromodbelementsections__init__pyc>`__."
msgstr ""

#: abaqus.DisplayGroup.LeafFromOdbElementSections.LeafFromOdbElementSections.__init__:13
#: of
msgid "A sequence of Strings specifying element Sections."
msgstr ""

#: abaqus.DisplayGroup.LeafFromOdbElementSections.LeafFromOdbElementSections.__init__:15
#: of
msgid "A LeafFromOdbElementSections object."
msgstr ""

#: abaqus.DisplayGroup.LeafFromOdbElementSections.LeafFromOdbElementSections.__init__:16
#: of
msgid ":class:`LeafFromOdbElementSections`"
msgstr ""

#: abaqus.DisplayGroup.LeafFromOdbElementTypes.LeafFromOdbElementTypes:1 of
msgid ""
"The LeafFromOdbElementTypes object can be used whenever a Leaf object is "
"expected as an argument. Leaf objects are used to specify the items in a "
"display group. Leaf objects are constructed as temporary objects, which "
"are then used as arguments to DisplayGroup commands. The "
"LeafFromOdbElementTypes object is derived from the Leaf object."
msgstr ""

#: abaqus.DisplayGroup.LeafFromOdbElementTypes.LeafFromOdbElementTypes:13 of
msgid ""
"Check `LeafFromOdbElementTypes on help.3ds.com/2020 "
"<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffromodbelementtypespyc.htm?contextscope=all>`__."
msgstr ""

#: ../../None:3:<autosummary>:1
msgid ""
":py:obj:`leafType "
"<abaqus.DisplayGroup.LeafFromOdbElementTypes.LeafFromOdbElementTypes.leafType>`\\"
msgstr ""

#: ../../None:3:<autosummary>:1
msgid ""
":py:obj:`__init__ "
"<abaqus.DisplayGroup.LeafFromOdbElementTypes.LeafFromOdbElementTypes.__init__>`\\"
" \\(elementTypes\\)"
msgstr ""

#: ../../None:3:<autosummary>:1
msgid ""
"This method creates a Leaf object from a sequence of Strings specifying "
"element names."
msgstr ""

#: abaqus.DisplayGroup.LeafFromOdbElementTypes.LeafFromOdbElementTypes.__init__:1
#: of
msgid ""
"This method creates a Leaf object from a sequence of Strings specifying "
"element names. Leaf objects specify the items in a display group."
msgstr ""

#: abaqus.DisplayGroup.LeafFromOdbElementTypes.LeafFromOdbElementTypes.__init__:10
#: of
msgid ""
"Check `LeafFromOdbElementTypes.__init__ on help.3ds.com/2020 "
"<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffromodbelementtypespyc.htm?contextscope=all"
"#simaker-leaffromodbelementtypes__init__pyc>`__."
msgstr ""

#: abaqus.DisplayGroup.LeafFromOdbElementTypes.LeafFromOdbElementTypes.__init__:13
#: of
msgid "A sequence of Strings specifying element Types."
msgstr ""

#: abaqus.DisplayGroup.LeafFromOdbElementTypes.LeafFromOdbElementTypes.__init__:15
#: of
msgid "A LeafFromOdbElementTypes object."
msgstr ""

#: abaqus.DisplayGroup.LeafFromOdbElementTypes.LeafFromOdbElementTypes.__init__:16
#: of
msgid ":class:`LeafFromOdbElementTypes`"
msgstr ""

#: abaqus.DisplayGroup.LeafFromOdbNodePick.LeafFromOdbNodePick:1 of
msgid ""
"The LeafFromOdbNodePick object can be used whenever a Leaf object is "
"expected as an argument. Leaf objects are used to specify the items in a "
"display group. Leaf objects are constructed as temporary objects, which "
"are then used as arguments to DisplayGroup commands. The "
"LeafFromOdbNodePick object is derived from the Leaf object."
msgstr ""

#: abaqus.DisplayGroup.LeafFromOdbNodePick.LeafFromOdbNodePick:13 of
msgid ""
"Check `LeafFromOdbNodePick on help.3ds.com/2020 "
"<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffromodbnodepickpyc.htm?contextscope=all>`__."
msgstr ""

#: ../../None:3:<autosummary>:1
msgid ""
":py:obj:`leafType "
"<abaqus.DisplayGroup.LeafFromOdbNodePick.LeafFromOdbNodePick.leafType>`\\"
msgstr ""

#: ../../None:3:<autosummary>:1
msgid ""
":py:obj:`__init__ "
"<abaqus.DisplayGroup.LeafFromOdbNodePick.LeafFromOdbNodePick.__init__>`\\"
" \\(nodePick\\)"
msgstr ""

#: ../../None:3:<autosummary>:1
msgid ""
"This method creates a Leaf object from a tuple containing machine "
"readable, compact strings defining the nodes picked for each part "
"instance."
msgstr ""

#: abaqus.DisplayGroup.LeafFromOdbNodePick.LeafFromOdbNodePick.__init__:1 of
msgid ""
"This method creates a Leaf object from a tuple containing machine "
"readable, compact strings defining the nodes picked for each part "
"instance. Leaf objects specify the items in a display group."
msgstr ""

#: abaqus.DisplayGroup.LeafFromOdbNodePick.LeafFromOdbNodePick.__init__:11 of
msgid ""
"Check `LeafFromOdbNodePick.__init__ on help.3ds.com/2020 "
"<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffromodbnodepickpyc.htm?contextscope=all"
"#simaker-leaffromodbnodepick__init__pyc>`__."
msgstr ""

#: abaqus.DisplayGroup.LeafFromOdbNodePick.LeafFromOdbNodePick.__init__:17 of
msgid "A LeafFromOdbNodePick object."
msgstr ""

#: abaqus.DisplayGroup.LeafFromOdbNodePick.LeafFromOdbNodePick.__init__:18 of
msgid ":class:`LeafFromOdbNodePick`"
msgstr ""

#: abaqus.DisplayGroup.LeafFromPartElementLabels.LeafFromPartElementLabels:1 of
msgid ""
"The LeafFromPartElementLabels object can be used whenever a Leaf object "
"is expected as an argument. Leaf objects are used to specify the items in"
" a display group. Leaf objects are constructed as temporary objects, "
"which are then used as arguments to DisplayGroup commands. The "
"LeafFromPartElementLabels object is derived from the Leaf object."
msgstr ""

#: abaqus.DisplayGroup.LeafFromPartElementLabels.LeafFromPartElementLabels:13
#: of
msgid ""
"Check `LeafFromPartElementLabels on help.3ds.com/2020 "
"<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffrompartelementlabelspyc.htm?contextscope=all>`__."
msgstr ""

#: ../../None:3:<autosummary>:1
msgid ""
":py:obj:`leafType "
"<abaqus.DisplayGroup.LeafFromPartElementLabels.LeafFromPartElementLabels.leafType>`\\"
msgstr ""

#: ../../None:3:<autosummary>:1
msgid ""
":py:obj:`__init__ "
"<abaqus.DisplayGroup.LeafFromPartElementLabels.LeafFromPartElementLabels.__init__>`\\"
" \\(part\\, elementLabels\\)"
msgstr ""

#: ../../None:3:<autosummary>:1
msgid ""
"This method creates a Leaf object from a sequence of Strings specifying "
"element labels."
msgstr ""

#: abaqus.DisplayGroup.LeafFromPartElementLabels.LeafFromPartElementLabels.__init__:1
#: of
msgid ""
"This method creates a Leaf object from a sequence of Strings specifying "
"element labels. Leaf objects specify the items in a display group."
msgstr ""

#: abaqus.DisplayGroup.LeafFromPartElementLabels.LeafFromPartElementLabels.__init__:10
#: of
msgid ""
"Check `LeafFromPartElementLabels.__init__ on help.3ds.com/2020 "
"<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffrompartelementlabelspyc.htm?contextscope=all"
"#simaker-leaffrompartelementlabels__init__pyc>`__."
msgstr ""

#: abaqus.DisplayGroup.LeafFromPartElementLabels.LeafFromPartElementLabels.__init__:13
#: abaqus.DisplayGroup.LeafFromPartNodeLabels.LeafFromPartNodeLabels.__init__:13
#: of
msgid "A Part object."
msgstr ""

#: abaqus.DisplayGroup.LeafFromPartElementLabels.LeafFromPartElementLabels.__init__:15
#: of
msgid "A sequence of Strings specifying element labels."
msgstr ""

#: abaqus.DisplayGroup.LeafFromPartElementLabels.LeafFromPartElementLabels.__init__:17
#: of
msgid "A LeafFromPartElementLabels object."
msgstr ""

#: abaqus.DisplayGroup.LeafFromPartElementLabels.LeafFromPartElementLabels.__init__:18
#: of
msgid ":class:`LeafFromPartElementLabels`"
msgstr ""

#: abaqus.DisplayGroup.LeafFromPartInstance.LeafFromPartInstance:1 of
msgid ""
"The LeafFromPartInstance object can be used whenever a Leaf object is "
"expected as an argument. Leaf objects are used to specify the items in a "
"display group. Leaf objects are constructed as temporary objects, which "
"are then used as arguments to DisplayGroup commands. The "
"LeafFromPartInstance object is derived from the Leaf object."
msgstr ""

#: abaqus.DisplayGroup.LeafFromPartInstance.LeafFromPartInstance:13 of
msgid ""
"Check `LeafFromPartInstance on help.3ds.com/2020 "
"<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffrompartinstancepyc.htm?contextscope=all>`__."
msgstr ""

#: ../../None:3:<autosummary>:1
msgid ""
":py:obj:`leafType "
"<abaqus.DisplayGroup.LeafFromPartInstance.LeafFromPartInstance.leafType>`\\"
msgstr ""

#: ../../None:3:<autosummary>:1
msgid ""
":py:obj:`__init__ "
"<abaqus.DisplayGroup.LeafFromPartInstance.LeafFromPartInstance.__init__>`\\"
" \\(partInstanceName\\)"
msgstr ""

#: ../../None:3:<autosummary>:1
#: abaqus.DisplayGroup.LeafFromPartInstance.LeafFromPartInstance.__init__:1 of
msgid "This method creates a Leaf object from a list of part instance names."
msgstr ""

#: abaqus.DisplayGroup.LeafFromPartInstance.LeafFromPartInstance.__init__:9 of
msgid ""
"Check `LeafFromPartInstance.__init__ on help.3ds.com/2020 "
"<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffrompartinstancepyc.htm?contextscope=all"
"#simaker-leaffrompartinstance__init__pyc>`__."
msgstr ""

#: ../../docstring
#: abaqus.DisplayGroup.LeafFromPartInstance.LeafFromPartInstance.__init__:12
#: abaqus.DisplayGroup.LeafFromPartInstance.LeafFromPartInstance.partInstanceName:1
#: of
msgid "A sequence of Strings specifying the names of the part instances."
msgstr ""

#: abaqus.DisplayGroup.LeafFromPartInstance.LeafFromPartInstance.__init__:14 of
msgid "A LeafFromPartInstance object."
msgstr ""

#: abaqus.DisplayGroup.LeafFromPartInstance.LeafFromPartInstance.__init__:15 of
msgid ":class:`LeafFromPartInstance`"
msgstr ""

#: abaqus.DisplayGroup.LeafFromPartNodeLabels.LeafFromPartNodeLabels:1 of
msgid ""
"The LeafFromPartNodeLabels object can be used whenever a Leaf object is "
"expected as an argument. Leaf objects are used to specify the items in a "
"display group. Leaf objects are constructed as temporary objects, which "
"are then used as arguments to DisplayGroup commands. The "
"LeafFromPartNodeLabels object is derived from the Leaf object."
msgstr ""

#: abaqus.DisplayGroup.LeafFromPartNodeLabels.LeafFromPartNodeLabels:13 of
msgid ""
"Check `LeafFromPartNodeLabels on help.3ds.com/2020 "
"<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffrompartnodelabelspyc.htm?contextscope=all>`__."
msgstr ""

#: ../../None:3:<autosummary>:1
msgid ""
":py:obj:`leafType "
"<abaqus.DisplayGroup.LeafFromPartNodeLabels.LeafFromPartNodeLabels.leafType>`\\"
msgstr ""

#: ../../None:3:<autosummary>:1
msgid ""
":py:obj:`__init__ "
"<abaqus.DisplayGroup.LeafFromPartNodeLabels.LeafFromPartNodeLabels.__init__>`\\"
" \\(part\\, nodeLabels\\)"
msgstr ""

#: ../../None:3:<autosummary>:1
msgid ""
"This method creates a Leaf object from a sequence of Strings specifying "
"node labels."
msgstr ""

#: abaqus.DisplayGroup.LeafFromPartNodeLabels.LeafFromPartNodeLabels.__init__:1
#: of
msgid ""
"This method creates a Leaf object from a sequence of Strings specifying "
"node labels. Leaf objects specify the items in a display group."
msgstr ""

#: abaqus.DisplayGroup.LeafFromPartNodeLabels.LeafFromPartNodeLabels.__init__:10
#: of
msgid ""
"Check `LeafFromPartNodeLabels.__init__ on help.3ds.com/2020 "
"<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffrompartnodelabelspyc.htm?contextscope=all"
"#simaker-leaffrompartnodelabels__init__pyc>`__."
msgstr ""

#: abaqus.DisplayGroup.LeafFromPartNodeLabels.LeafFromPartNodeLabels.__init__:15
#: of
msgid "A sequence of Strings specifying node labels."
msgstr ""

#: abaqus.DisplayGroup.LeafFromPartNodeLabels.LeafFromPartNodeLabels.__init__:17
#: of
msgid "A LeafFromPartNodeLabels object."
msgstr ""

#: abaqus.DisplayGroup.LeafFromPartNodeLabels.LeafFromPartNodeLabels.__init__:18
#: of
msgid ":class:`LeafFromPartNodeLabels`"
msgstr ""

#: abaqus.DisplayGroup.LeafFromReferencePoint.LeafFromReferencePoint:1 of
msgid ""
"The LeafFromReferencePoint object can be used whenever a Leaf object is "
"expected as an argument. Leaf objects are used to specify the items in a "
"display group. Leaf objects are constructed as temporary objects, which "
"are then used as arguments to DisplayGroup commands. The "
"LeafFromReferencePoint object is derived from the Leaf object."
msgstr ""

#: abaqus.DisplayGroup.LeafFromReferencePoint.LeafFromReferencePoint:13 of
msgid ""
"Check `LeafFromReferencePoint on help.3ds.com/2020 "
"<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffromreferencepointpyc.htm?contextscope=all>`__."
msgstr ""

#: ../../None:3:<autosummary>:1
msgid ""
":py:obj:`leafType "
"<abaqus.DisplayGroup.LeafFromReferencePoint.LeafFromReferencePoint.leafType>`\\"
msgstr ""

#: ../../None:3:<autosummary>:1
msgid ""
":py:obj:`__init__ "
"<abaqus.DisplayGroup.LeafFromReferencePoint.LeafFromReferencePoint.__init__>`\\"
" \\(refPtSeq\\)"
msgstr ""

#: ../../None:3:<autosummary>:1
#: abaqus.DisplayGroup.LeafFromReferencePoint.LeafFromReferencePoint.__init__:1
#: of
msgid ""
"This method creates a Leaf object from a sequence of ReferencePoint "
"objects."
msgstr ""

#: abaqus.DisplayGroup.LeafFromReferencePoint.LeafFromReferencePoint.__init__:9
#: of
msgid ""
"Check `LeafFromReferencePoint.__init__ on help.3ds.com/2020 "
"<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffromreferencepointpyc.htm?contextscope=all"
"#simaker-leaffromreferencepoint__init__pyc>`__."
msgstr ""

#: abaqus.DisplayGroup.LeafFromReferencePoint.LeafFromReferencePoint.__init__:12
#: of
msgid "A sequence of Reference Point objects."
msgstr ""

#: abaqus.DisplayGroup.LeafFromReferencePoint.LeafFromReferencePoint.__init__:14
#: of
msgid "A LeafFromReferencePoint object."
msgstr ""

#: abaqus.DisplayGroup.LeafFromReferencePoint.LeafFromReferencePoint.__init__:15
#: of
msgid ":class:`LeafFromReferencePoint`"
msgstr ""

#: abaqus.DisplayGroup.LeafFromSets.LeafFromSets:1 of
msgid ""
"The LeafFromSets object can be used whenever a Leaf object is expected as"
" an argument. Leaf objects are used to specify the items in a display "
"group. Leaf objects are constructed as temporary objects, which are then "
"used as arguments to DisplayGroup commands. The LeafFromSets object is "
"derived from the Leaf object."
msgstr ""

#: abaqus.DisplayGroup.LeafFromSets.LeafFromSets:13 of
msgid ""
"Check `LeafFromSets on help.3ds.com/2020 "
"<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffromsetspyc.htm?contextscope=all>`__."
msgstr ""

#: ../../None:3:<autosummary>:1
msgid ""
":py:obj:`leafType "
"<abaqus.DisplayGroup.LeafFromSets.LeafFromSets.leafType>`\\"
msgstr ""

#: ../../None:3:<autosummary>:1
msgid ""
":py:obj:`__init__ "
"<abaqus.DisplayGroup.LeafFromSets.LeafFromSets.__init__>`\\ \\(sets\\)"
msgstr ""

#: ../../None:3:<autosummary>:1
#: abaqus.DisplayGroup.LeafFromSets.LeafFromSets.__init__:1 of
msgid "This method creates a Leaf object from a sequence of Set objects."
msgstr ""

#: abaqus.DisplayGroup.LeafFromSets.LeafFromSets.__init__:9 of
msgid ""
"Check `LeafFromSets.__init__ on help.3ds.com/2020 "
"<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffromsetspyc.htm?contextscope=all"
"#simaker-leaffromsets__init__pyc>`__."
msgstr ""

#: abaqus.DisplayGroup.LeafFromSets.LeafFromSets.__init__:12 of
msgid "A sequence of Set objects."
msgstr ""

#: abaqus.DisplayGroup.LeafFromSets.LeafFromSets.__init__:14 of
msgid "A LeafFromSets object."
msgstr ""

#: abaqus.DisplayGroup.LeafFromSets.LeafFromSets.__init__:15 of
msgid ":class:`LeafFromSets`"
msgstr ""

#: abaqus.DisplayGroup.LeafFromSurfaceSets.LeafFromSurfaceSets:1 of
msgid ""
"The LeafFromSurfaceSets object can be used whenever a Leaf object is "
"expected as an argument. Leaf objects are used to specify the items in a "
"display group. Leaf objects are constructed as temporary objects, which "
"are then used as arguments to DisplayGroup commands. The "
"LeafFromSurfaceSets object is derived from the Leaf object."
msgstr ""

#: abaqus.DisplayGroup.LeafFromSurfaceSets.LeafFromSurfaceSets:13 of
msgid ""
"Check `LeafFromSurfaceSets on help.3ds.com/2020 "
"<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffromsurfacesetspyc.htm?contextscope=all>`__."
msgstr ""

#: ../../None:3:<autosummary>:1
msgid ""
":py:obj:`leafType "
"<abaqus.DisplayGroup.LeafFromSurfaceSets.LeafFromSurfaceSets.leafType>`\\"
msgstr ""

#: ../../None:3:<autosummary>:1
msgid ""
":py:obj:`__init__ "
"<abaqus.DisplayGroup.LeafFromSurfaceSets.LeafFromSurfaceSets.__init__>`\\"
" \\(surfaceSets\\)"
msgstr ""

#: abaqus.DisplayGroup.LeafFromSurfaceSets.LeafFromSurfaceSets.__init__:9 of
msgid ""
"Check `LeafFromSurfaceSets.__init__ on help.3ds.com/2020 "
"<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffromsurfacesetspyc.htm?contextscope=all"
"#simaker-leaffromsurfacesets__init__pyc>`__."
msgstr ""

#: ../../docstring
#: abaqus.DisplayGroup.LeafFromSurfaceSets.LeafFromSurfaceSets.__init__:12
#: abaqus.DisplayGroup.LeafFromSurfaceSets.LeafFromSurfaceSets.surfaceSets:1 of
msgid ""
"A sequence of Strings specifying surface sets, or a String specifying a "
"single surface set."
msgstr ""

#: abaqus.DisplayGroup.LeafFromSurfaceSets.LeafFromSurfaceSets.__init__:15 of
msgid "A LeafFromSurfaceSets object."
msgstr ""

#: abaqus.DisplayGroup.LeafFromSurfaceSets.LeafFromSurfaceSets.__init__:16 of
msgid ":class:`LeafFromSurfaceSets`"
msgstr ""

#: abaqus.DisplayGroup.LeafFromSurfaceVarRange.LeafFromSurfaceVarRange:1 of
msgid ""
"The LeafFromSurfaceVarRange object can be used whenever a Leaf object is "
"expected as an argument. Leaf objects are used to specify the items in a "
"display group. Leaf objects are constructed as temporary objects, which "
"are then used as arguments to DisplayGroup commands. The "
"LeafFromSurfaceVarRange object is derived from the Leaf object."
msgstr ""

#: abaqus.DisplayGroup.LeafFromSurfaceVarRange.LeafFromSurfaceVarRange:13 of
msgid ""
"Check `LeafFromSurfaceVarRange on help.3ds.com/2020 "
"<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffromsurfacevarrangepyc.htm?contextscope=all>`__."
msgstr ""

#: ../../None:6:<autosummary>:1
msgid ""
":py:obj:`leafType "
"<abaqus.DisplayGroup.LeafFromSurfaceVarRange.LeafFromSurfaceVarRange.leafType>`\\"
msgstr ""

#: ../../None:6:<autosummary>:1
msgid ""
":py:obj:`minimumRange "
"<abaqus.DisplayGroup.LeafFromSurfaceVarRange.LeafFromSurfaceVarRange.minimumRange>`\\"
msgstr ""

#: ../../None:6:<autosummary>:1
msgid ""
":py:obj:`maximumRange "
"<abaqus.DisplayGroup.LeafFromSurfaceVarRange.LeafFromSurfaceVarRange.maximumRange>`\\"
msgstr ""

#: ../../None:6:<autosummary>:1
msgid ""
":py:obj:`insideRange "
"<abaqus.DisplayGroup.LeafFromSurfaceVarRange.LeafFromSurfaceVarRange.insideRange>`\\"
msgstr ""

#: ../../None:3:<autosummary>:1
msgid ""
":py:obj:`__init__ "
"<abaqus.DisplayGroup.LeafFromSurfaceVarRange.LeafFromSurfaceVarRange.__init__>`\\"
" \\(\\[minimumRange\\, maximumRange\\, ...\\]\\)"
msgstr ""

#: ../../None:3:<autosummary>:1
#: abaqus.DisplayGroup.LeafFromSurfaceVarRange.LeafFromSurfaceVarRange.__init__:1
#: of
msgid ""
"This method creates a Leaf object from surfaces with values lying in a "
"variable range."
msgstr ""

#: abaqus.DisplayGroup.LeafFromSurfaceVarRange.LeafFromSurfaceVarRange.__init__:9
#: of
msgid ""
"Check `LeafFromSurfaceVarRange.__init__ on help.3ds.com/2020 "
"<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffromsurfacevarrangepyc.htm?contextscope=all"
"#simaker-leaffromsurfacevarrange__init__pyc>`__."
msgstr ""

#: abaqus.DisplayGroup.LeafFromSurfaceVarRange.LeafFromSurfaceVarRange.__init__:21
#: of
msgid "A LeafFromSurfaceVarRange object."
msgstr ""

#: abaqus.DisplayGroup.LeafFromSurfaceVarRange.LeafFromSurfaceVarRange.__init__:22
#: of
msgid ":class:`LeafFromSurfaceVarRange`"
msgstr ""

#~ msgid ""
#~ "Check `DisplayGroup on help.3ds.com/2020 "
#~ "<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-displaygrouppyc.htm?contextscope=all>`_."
#~ msgstr ""

#~ msgid ""
#~ "Check `DisplayGroup.add() on help.3ds.com/2020 "
#~ "<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-displaygrouppyc.htm?contextscope=all"
#~ "#simaker-displaygroupaddpyc>`_."
#~ msgstr ""

#~ msgid ""
#~ "Check `DisplayGroup.either() on help.3ds.com/2020"
#~ " "
#~ "<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-displaygrouppyc.htm?contextscope=all"
#~ "#simaker-displaygroupeitherpyc>`_."
#~ msgstr ""

#~ msgid ""
#~ "Check `DisplayGroup.intersect() on help.3ds.com/2020"
#~ " "
#~ "<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-displaygrouppyc.htm?contextscope=all"
#~ "#simaker-displaygroupintersectpyc>`_."
#~ msgstr ""

#~ msgid ""
#~ "Check `DisplayGroup.remove() on help.3ds.com/2020"
#~ " "
#~ "<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-displaygrouppyc.htm?contextscope=all"
#~ "#simaker-displaygroupremovepyc>`_."
#~ msgstr ""

#~ msgid ""
#~ "Check `DisplayGroup.replace() on help.3ds.com/2020"
#~ " "
#~ "<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-displaygrouppyc.htm?contextscope=all"
#~ "#simaker-displaygroupreplacepyc>`_."
#~ msgstr ""

#~ msgid ""
#~ "Check `DisplayGroupInstance on help.3ds.com/2020 "
#~ "<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-displaygroupinstancepyc.htm?contextscope=all>`_."
#~ msgstr ""

#~ msgid ""
#~ "Check `DisplayGroupInstance.setValues() on "
#~ "help.3ds.com/2020 "
#~ "<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-displaygroupinstancepyc.htm?contextscope=all"
#~ "#simaker-displaygroupinstancesetvaluespyc>`_."
#~ msgstr ""

#~ msgid ""
#~ "Check `DisplayGroupInstanceRepository on "
#~ "help.3ds.com/2020 "
#~ "<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-displaygroupinstancerepositorypyc.htm?contextscope=all>`_."
#~ msgstr ""

#~ msgid ""
#~ "Check `DisplayGroupInstanceRepository.syncOptions() on "
#~ "help.3ds.com/2020 "
#~ "<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-displaygroupinstancerepositorypyc.htm?contextscope=all"
#~ "#simaker-displaygroupinstancerepositorysyncoptionspyc>`_."
#~ msgstr ""

#~ msgid ""
#~ "Check `Leaf on help.3ds.com/2020 "
#~ "<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leafpyc.htm?contextscope=all>`_."
#~ msgstr ""

#~ msgid ""
#~ "Check `LeafFromConstraintNames on help.3ds.com/2020"
#~ " "
#~ "<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffromconstraintnamespyc.htm?contextscope=all>`_."
#~ msgstr ""

#~ msgid ""
#~ "Check `LeafFromDatums on help.3ds.com/2020 "
#~ "<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffromdatumspyc.htm?contextscope=all>`_."
#~ msgstr ""

#~ msgid ""
#~ "Check `LeafFromDisplayGroup on help.3ds.com/2020 "
#~ "<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffromdisplaygrouppyc.htm?contextscope=all>`_."
#~ msgstr ""

#~ msgid ""
#~ "Check `LeafFromElementLabels on help.3ds.com/2020"
#~ " "
#~ "<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffromelementlabelspyc.htm?contextscope=all>`_."
#~ msgstr ""

#~ msgid ""
#~ "Check `LeafFromElementSets on help.3ds.com/2020 "
#~ "<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffromelementsetspyc.htm?contextscope=all>`_."
#~ msgstr ""

#~ msgid ""
#~ "Check `LeafFromElementVarRange on help.3ds.com/2020"
#~ " "
#~ "<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffromelementvarrangepyc.htm?contextscope=all>`_."
#~ msgstr ""

#~ msgid ""
#~ "Check `LeafFromGeometry on help.3ds.com/2020 "
#~ "<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffromgeometrypyc.htm?contextscope=all>`_."
#~ msgstr ""

#~ msgid ""
#~ "Check `LeafFromInstance on help.3ds.com/2020 "
#~ "<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffrominstancepyc.htm?contextscope=all>`_."
#~ msgstr ""

#~ msgid ""
#~ "Check `LeafFromInstanceElementLabels on "
#~ "help.3ds.com/2020 "
#~ "<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffrominstanceelementlabelspyc.htm?contextscope=all>`_."
#~ msgstr ""

#~ msgid ""
#~ "Check `LeafFromInstanceNodeLabels on "
#~ "help.3ds.com/2020 "
#~ "<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffrominstancenodelabelspyc.htm?contextscope=all>`_."
#~ msgstr ""

#~ msgid ""
#~ "Check `LeafFromMeshElementLabels on "
#~ "help.3ds.com/2020 "
#~ "<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffrommeshelementlabelspyc.htm?contextscope=all>`_."
#~ msgstr ""

#~ msgid ""
#~ "Check `LeafFromMeshNodeLabels on help.3ds.com/2020"
#~ " "
#~ "<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffrommeshnodelabelspyc.htm?contextscope=all>`_."
#~ msgstr ""

#~ msgid ""
#~ "Check `LeafFromMeshSurfaceSets on help.3ds.com/2020"
#~ " "
#~ "<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffrommeshsurfacesetspyc.htm?contextscope=all>`_."
#~ msgstr ""

#~ msgid ""
#~ "Check `LeafFromModelElemLabels on help.3ds.com/2020"
#~ " "
#~ "<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffrommodelelemlabelspyc.htm?contextscope=all>`_."
#~ msgstr ""

#~ msgid ""
#~ "Check `LeafFromModelNodeLabels on help.3ds.com/2020"
#~ " "
#~ "<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffrommodelnodelabelspyc.htm?contextscope=all>`_."
#~ msgstr ""

#~ msgid ""
#~ "Check `LeafFromNodeLabels on help.3ds.com/2020 "
#~ "<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffromnodelabelspyc.htm?contextscope=all>`_."
#~ msgstr ""

#~ msgid ""
#~ "Check `LeafFromNodeSets on help.3ds.com/2020 "
#~ "<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffromnodesetspyc.htm?contextscope=all>`_."
#~ msgstr ""

#~ msgid ""
#~ "Check `LeafFromNodeVarRange on help.3ds.com/2020 "
#~ "<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffromnodevarrangepyc.htm?contextscope=all>`_."
#~ msgstr ""

#~ msgid ""
#~ "Check `LeafFromOdbEdgePick on help.3ds.com/2020 "
#~ "<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffromodbedgepickpyc.htm?contextscope=all>`_."
#~ msgstr ""

#~ msgid ""
#~ "Check `LeafFromOdbElementLayups on help.3ds.com/2020"
#~ " "
#~ "<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffromodbelementlayupspyc.htm?contextscope=all>`_."
#~ msgstr ""

#~ msgid ""
#~ "Check `LeafFromOdbElementMaterials on "
#~ "help.3ds.com/2020 "
#~ "<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffromodbelementmaterialspyc.htm?contextscope=all>`_."
#~ msgstr ""

#~ msgid ""
#~ "Check `LeafFromOdbElementPick on help.3ds.com/2020"
#~ " "
#~ "<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffromodbelementpickpyc.htm?contextscope=all>`_."
#~ msgstr ""

#~ msgid ""
#~ "Check `LeafFromOdbElementPlies on help.3ds.com/2020"
#~ " "
#~ "<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffromodbelementpliespyc.htm?contextscope=all>`_."
#~ msgstr ""

#~ msgid ""
#~ "Check `LeafFromOdbElementSections on "
#~ "help.3ds.com/2020 "
#~ "<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffromodbelementsectionspyc.htm?contextscope=all>`_."
#~ msgstr ""

#~ msgid ""
#~ "Check `LeafFromOdbElementTypes on help.3ds.com/2020"
#~ " "
#~ "<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffromodbelementtypespyc.htm?contextscope=all>`_."
#~ msgstr ""

#~ msgid ""
#~ "Check `LeafFromOdbNodePick on help.3ds.com/2020 "
#~ "<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffromodbnodepickpyc.htm?contextscope=all>`_."
#~ msgstr ""

#~ msgid ""
#~ "Check `LeafFromPartElementLabels on "
#~ "help.3ds.com/2020 "
#~ "<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffrompartelementlabelspyc.htm?contextscope=all>`_."
#~ msgstr ""

#~ msgid ""
#~ "Check `LeafFromPartInstance on help.3ds.com/2020 "
#~ "<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffrompartinstancepyc.htm?contextscope=all>`_."
#~ msgstr ""

#~ msgid ""
#~ "Check `LeafFromPartNodeLabels on help.3ds.com/2020"
#~ " "
#~ "<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffrompartnodelabelspyc.htm?contextscope=all>`_."
#~ msgstr ""

#~ msgid ""
#~ "Check `LeafFromReferencePoint on help.3ds.com/2020"
#~ " "
#~ "<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffromreferencepointpyc.htm?contextscope=all>`_."
#~ msgstr ""

#~ msgid ""
#~ "Check `LeafFromSets on help.3ds.com/2020 "
#~ "<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffromsetspyc.htm?contextscope=all>`_."
#~ msgstr ""

#~ msgid ""
#~ "Check `LeafFromSurfaceSets on help.3ds.com/2020 "
#~ "<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffromsurfacesetspyc.htm?contextscope=all>`_."
#~ msgstr ""

#~ msgid ""
#~ "Check `LeafFromSurfaceVarRange on help.3ds.com/2020"
#~ " "
#~ "<https://help.3ds.com/2020/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-leaffromsurfacevarrangepyc.htm?contextscope=all>`_."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`exit "
#~ "<abaqus.DisplayGroup.DisplayGroupSession.DisplayGroupSession.exit>`\\"
#~ " \\(\\)"
#~ msgstr ""

#~ msgid "This function can be accessed by:"
#~ msgstr ""

#~ msgid "This object can be accessed by:"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`openOdb "
#~ "<abaqus.DisplayGroup.DisplayGroupSession.DisplayGroupSession.openOdb>`\\"
#~ " \\(name\\, \\*args\\, \\*\\*kwargs\\)"
#~ msgstr ""

#~ msgid ""
#~ "This method opens an existing output "
#~ "database (.odb) file and creates a "
#~ "new Odb object."
#~ msgstr ""

#~ msgid "**name**"
#~ msgstr ""

#~ msgid "**leaf**"
#~ msgstr ""

#~ msgid ":obj:`DisplayGroup`"
#~ msgstr ""

#~ msgid ":class:`python:dict`"
#~ msgstr ""

#~ msgid "**lockOptions**"
#~ msgstr ""

#~ msgid "**updateInstances**"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`attachedToGui "
#~ "<abaqus.DisplayGroup.DisplayGroupSession.DisplayGroupSession.attachedToGui>`\\"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`replayInProgress "
#~ "<abaqus.DisplayGroup.DisplayGroupSession.DisplayGroupSession.replayInProgress>`\\"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`kernelMemoryFootprint "
#~ "<abaqus.DisplayGroup.DisplayGroupSession.DisplayGroupSession.kernelMemoryFootprint>`\\"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`kernelMemoryMaxFootprint "
#~ "<abaqus.DisplayGroup.DisplayGroupSession.DisplayGroupSession.kernelMemoryMaxFootprint>`\\"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`kernelMemoryLimit "
#~ "<abaqus.DisplayGroup.DisplayGroupSession.DisplayGroupSession.kernelMemoryLimit>`\\"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`colors "
#~ "<abaqus.DisplayGroup.DisplayGroupSession.DisplayGroupSession.colors>`\\"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`journalOptions "
#~ "<abaqus.DisplayGroup.DisplayGroupSession.DisplayGroupSession.journalOptions>`\\"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`memoryReductionOptions "
#~ "<abaqus.DisplayGroup.DisplayGroupSession.DisplayGroupSession.memoryReductionOptions>`\\"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`nodeQuery "
#~ "<abaqus.DisplayGroup.DisplayGroupSession.DisplayGroupSession.nodeQuery>`\\"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`sketcherOptions "
#~ "<abaqus.DisplayGroup.DisplayGroupSession.DisplayGroupSession.sketcherOptions>`\\"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`viewerOptions "
#~ "<abaqus.DisplayGroup.DisplayGroupSession.DisplayGroupSession.viewerOptions>`\\"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`animationOptions "
#~ "<abaqus.DisplayGroup.DisplayGroupSession.DisplayGroupSession.animationOptions>`\\"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`aviOptions "
#~ "<abaqus.DisplayGroup.DisplayGroupSession.DisplayGroupSession.aviOptions>`\\"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`imageAnimationOptions "
#~ "<abaqus.DisplayGroup.DisplayGroupSession.DisplayGroupSession.imageAnimationOptions>`\\"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`imageAnimation "
#~ "<abaqus.DisplayGroup.DisplayGroupSession.DisplayGroupSession.imageAnimation>`\\"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`quickTimeOptions "
#~ "<abaqus.DisplayGroup.DisplayGroupSession.DisplayGroupSession.quickTimeOptions>`\\"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`viewports "
#~ "<abaqus.DisplayGroup.DisplayGroupSession.DisplayGroupSession.viewports>`\\"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`customData "
#~ "<abaqus.DisplayGroup.DisplayGroupSession.DisplayGroupSession.customData>`\\"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`defaultFieldReportOptions "
#~ "<abaqus.DisplayGroup.DisplayGroupSession.DisplayGroupSession.defaultFieldReportOptions>`\\"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`defaultFreeBodyReportOptions "
#~ "<abaqus.DisplayGroup.DisplayGroupSession.DisplayGroupSession.defaultFreeBodyReportOptions>`\\"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`fieldReportOptions "
#~ "<abaqus.DisplayGroup.DisplayGroupSession.DisplayGroupSession.fieldReportOptions>`\\"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`freeBodyReportOptions "
#~ "<abaqus.DisplayGroup.DisplayGroupSession.DisplayGroupSession.freeBodyReportOptions>`\\"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`odbs "
#~ "<abaqus.DisplayGroup.DisplayGroupSession.DisplayGroupSession.odbs>`\\"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`scratchOdbs "
#~ "<abaqus.DisplayGroup.DisplayGroupSession.DisplayGroupSession.scratchOdbs>`\\"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`defaultOdbDisplay "
#~ "<abaqus.DisplayGroup.DisplayGroupSession.DisplayGroupSession.defaultOdbDisplay>`\\"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`defaultPlot "
#~ "<abaqus.DisplayGroup.DisplayGroupSession.DisplayGroupSession.defaultPlot>`\\"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`defaultChartOptions "
#~ "<abaqus.DisplayGroup.DisplayGroupSession.DisplayGroupSession.defaultChartOptions>`\\"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`odbData "
#~ "<abaqus.DisplayGroup.DisplayGroupSession.DisplayGroupSession.odbData>`\\"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`mdbData "
#~ "<abaqus.DisplayGroup.DisplayGroupSession.DisplayGroupSession.mdbData>`\\"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`paths "
#~ "<abaqus.DisplayGroup.DisplayGroupSession.DisplayGroupSession.paths>`\\"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`freeBodies "
#~ "<abaqus.DisplayGroup.DisplayGroupSession.DisplayGroupSession.freeBodies>`\\"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`streams "
#~ "<abaqus.DisplayGroup.DisplayGroupSession.DisplayGroupSession.streams>`\\"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`spectrums "
#~ "<abaqus.DisplayGroup.DisplayGroupSession.DisplayGroupSession.spectrums>`\\"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`currentProbeValues "
#~ "<abaqus.DisplayGroup.DisplayGroupSession.DisplayGroupSession.currentProbeValues>`\\"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`defaultProbeOptions "
#~ "<abaqus.DisplayGroup.DisplayGroupSession.DisplayGroupSession.defaultProbeOptions>`\\"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`probeOptions "
#~ "<abaqus.DisplayGroup.DisplayGroupSession.DisplayGroupSession.probeOptions>`\\"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`probeReport "
#~ "<abaqus.DisplayGroup.DisplayGroupSession.DisplayGroupSession.probeReport>`\\"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`defaultProbeReport "
#~ "<abaqus.DisplayGroup.DisplayGroupSession.DisplayGroupSession.defaultProbeReport>`\\"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`selectedProbeValues "
#~ "<abaqus.DisplayGroup.DisplayGroupSession.DisplayGroupSession.selectedProbeValues>`\\"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`printOptions "
#~ "<abaqus.DisplayGroup.DisplayGroupSession.DisplayGroupSession.printOptions>`\\"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`epsOptions "
#~ "<abaqus.DisplayGroup.DisplayGroupSession.DisplayGroupSession.epsOptions>`\\"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`pageSetupOptions "
#~ "<abaqus.DisplayGroup.DisplayGroupSession.DisplayGroupSession.pageSetupOptions>`\\"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`pngOptions "
#~ "<abaqus.DisplayGroup.DisplayGroupSession.DisplayGroupSession.pngOptions>`\\"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`psOptions "
#~ "<abaqus.DisplayGroup.DisplayGroupSession.DisplayGroupSession.psOptions>`\\"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`svgOptions "
#~ "<abaqus.DisplayGroup.DisplayGroupSession.DisplayGroupSession.svgOptions>`\\"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`tiffOptions "
#~ "<abaqus.DisplayGroup.DisplayGroupSession.DisplayGroupSession.tiffOptions>`\\"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`autoColors "
#~ "<abaqus.DisplayGroup.DisplayGroupSession.DisplayGroupSession.autoColors>`\\"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`xyColors "
#~ "<abaqus.DisplayGroup.DisplayGroupSession.DisplayGroupSession.xyColors>`\\"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`xyDataObjects "
#~ "<abaqus.DisplayGroup.DisplayGroupSession.DisplayGroupSession.xyDataObjects>`\\"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`curves "
#~ "<abaqus.DisplayGroup.DisplayGroupSession.DisplayGroupSession.curves>`\\"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`xyPlots "
#~ "<abaqus.DisplayGroup.DisplayGroupSession.DisplayGroupSession.xyPlots>`\\"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`charts "
#~ "<abaqus.DisplayGroup.DisplayGroupSession.DisplayGroupSession.charts>`\\"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`defaultXYReportOptions "
#~ "<abaqus.DisplayGroup.DisplayGroupSession.DisplayGroupSession.defaultXYReportOptions>`\\"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`xyReportOptions "
#~ "<abaqus.DisplayGroup.DisplayGroupSession.DisplayGroupSession.xyReportOptions>`\\"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`views "
#~ "<abaqus.DisplayGroup.DisplayGroupSession.DisplayGroupSession.views>`\\"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`networkDatabaseConnectors "
#~ "<abaqus.DisplayGroup.DisplayGroupSession.DisplayGroupSession.networkDatabaseConnectors>`\\"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`displayGroups "
#~ "<abaqus.DisplayGroup.DisplayGroupSession.DisplayGroupSession.displayGroups>`\\"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`graphicsInfo "
#~ "<abaqus.DisplayGroup.DisplayGroupSession.DisplayGroupSession.graphicsInfo>`\\"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`defaultGraphicsOptions "
#~ "<abaqus.DisplayGroup.DisplayGroupSession.DisplayGroupSession.defaultGraphicsOptions>`\\"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`graphicsOptions "
#~ "<abaqus.DisplayGroup.DisplayGroupSession.DisplayGroupSession.graphicsOptions>`\\"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`defaultViewportAnnotationOptions "
#~ "<abaqus.DisplayGroup.DisplayGroupSession.DisplayGroupSession.defaultViewportAnnotationOptions>`\\"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`queues "
#~ "<abaqus.DisplayGroup.DisplayGroupSession.DisplayGroupSession.queues>`\\"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`currentViewportName "
#~ "<abaqus.DisplayGroup.DisplayGroupSession.DisplayGroupSession.currentViewportName>`\\"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`sessionState "
#~ "<abaqus.DisplayGroup.DisplayGroupSession.DisplayGroupSession.sessionState>`\\"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`images "
#~ "<abaqus.DisplayGroup.DisplayGroupSession.DisplayGroupSession.images>`\\"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`movies "
#~ "<abaqus.DisplayGroup.DisplayGroupSession.DisplayGroupSession.movies>`\\"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`defaultLightOptions "
#~ "<abaqus.DisplayGroup.DisplayGroupSession.DisplayGroupSession.defaultLightOptions>`\\"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`drawingArea "
#~ "<abaqus.DisplayGroup.DisplayGroupSession.DisplayGroupSession.drawingArea>`\\"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`defaultMesherOptions "
#~ "<abaqus.DisplayGroup.DisplayGroupSession.DisplayGroupSession.defaultMesherOptions>`\\"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`drawings "
#~ "<abaqus.DisplayGroup.DisplayGroupSession.DisplayGroupSession.drawings>`\\"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`setValues "
#~ "<abaqus.DisplayGroup.DisplayGroupSession.DisplayGroupSession.setValues>`\\"
#~ " \\(\\[kernelMemoryLimit\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`enableCADConnection "
#~ "<abaqus.DisplayGroup.DisplayGroupSession.DisplayGroupSession.enableCADConnection>`\\"
#~ " \\(CADName\\[\\, portNum\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`isCADConnectionEnabled "
#~ "<abaqus.DisplayGroup.DisplayGroupSession.DisplayGroupSession.isCADConnectionEnabled>`\\"
#~ " \\(\\)"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`disableCADConnection "
#~ "<abaqus.DisplayGroup.DisplayGroupSession.DisplayGroupSession.disableCADConnection>`\\"
#~ " \\(CADName\\)"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`enableParameterUpdate "
#~ "<abaqus.DisplayGroup.DisplayGroupSession.DisplayGroupSession.enableParameterUpdate>`\\"
#~ " \\(CADName\\, CADVersion\\[\\, ...\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`setCADPortNumber "
#~ "<abaqus.DisplayGroup.DisplayGroupSession.DisplayGroupSession.setCADPortNumber>`\\"
#~ " \\(CADName\\, Port\\)"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`updateCADParameters "
#~ "<abaqus.DisplayGroup.DisplayGroupSession.DisplayGroupSession.updateCADParameters>`\\"
#~ " \\(modelName\\, CADName\\, ...\\)"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`disableParameterUpdate "
#~ "<abaqus.DisplayGroup.DisplayGroupSession.DisplayGroupSession.disableParameterUpdate>`\\"
#~ " \\(CADName\\)"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`printToFile "
#~ "<abaqus.DisplayGroup.DisplayGroupSession.DisplayGroupSession.printToFile>`\\"
#~ " \\(fileName\\[\\, format\\, ...\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`printToPrinter "
#~ "<abaqus.DisplayGroup.DisplayGroupSession.DisplayGroupSession.printToPrinter>`\\"
#~ " \\(\\[printCommand\\, numCopies\\, ...\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`saveOptions "
#~ "<abaqus.DisplayGroup.DisplayGroupSession.DisplayGroupSession.saveOptions>`\\"
#~ " \\(directory\\)"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`writeVrmlFile "
#~ "<abaqus.DisplayGroup.DisplayGroupSession.DisplayGroupSession.writeVrmlFile>`\\"
#~ " \\(fileName\\[\\, format\\, canvasObjects\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`write3DXMLFile "
#~ "<abaqus.DisplayGroup.DisplayGroupSession.DisplayGroupSession.write3DXMLFile>`\\"
#~ " \\(fileName\\[\\, format\\, canvasObjects\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`writeOBJFile "
#~ "<abaqus.DisplayGroup.DisplayGroupSession.DisplayGroupSession.writeOBJFile>`\\"
#~ " \\(fileName\\[\\, canvasObjects\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`openOdb "
#~ "<abaqus.DisplayGroup.DisplayGroupSession.DisplayGroupSession.openOdb>`\\"
#~ " \\(name\\[\\, path\\, readOnly\\]\\)"
#~ msgstr ""

#~ msgid "Object features"
#~ msgstr ""

#~ msgid "Classes"
#~ msgstr ""

#~ msgid "DisplayGroup"
#~ msgstr ""

#~ msgid "DisplayGroupArray"
#~ msgstr ""

#~ msgid "DisplayGroupInstance"
#~ msgstr ""

#~ msgid "DisplayGroupInstanceRepository"
#~ msgstr ""

#~ msgid "Leaf"
#~ msgstr ""

#~ msgid "LeafFromConstraintNames"
#~ msgstr ""

#~ msgid "LeafFromDatums"
#~ msgstr ""

#~ msgid "LeafFromDisplayGroup"
#~ msgstr ""

#~ msgid "LeafFromElementLabels"
#~ msgstr ""

#~ msgid "LeafFromElementSets"
#~ msgstr ""

#~ msgid "LeafFromElementVarRange"
#~ msgstr ""

#~ msgid "LeafFromGeometry"
#~ msgstr ""

#~ msgid "LeafFromInstance"
#~ msgstr ""

#~ msgid "LeafFromInstanceElementLabels"
#~ msgstr ""

#~ msgid "LeafFromInstanceNodeLabels"
#~ msgstr ""

#~ msgid "LeafFromMeshElementLabels"
#~ msgstr ""

#~ msgid "LeafFromMeshNodeLabels"
#~ msgstr ""

#~ msgid "LeafFromMeshSurfaceSets"
#~ msgstr ""

#~ msgid "LeafFromModelElemLabels"
#~ msgstr ""

#~ msgid "LeafFromModelNodeLabels"
#~ msgstr ""

#~ msgid "LeafFromNodeLabels"
#~ msgstr ""

#~ msgid "LeafFromNodeSets"
#~ msgstr ""

#~ msgid "LeafFromNodeVarRange"
#~ msgstr ""

#~ msgid "LeafFromOdbEdgePick"
#~ msgstr ""

#~ msgid "LeafFromOdbElementLayups"
#~ msgstr ""

#~ msgid "LeafFromOdbElementMaterials"
#~ msgstr ""

#~ msgid "LeafFromOdbElementPick"
#~ msgstr ""

#~ msgid "LeafFromOdbElementPlies"
#~ msgstr ""

#~ msgid "LeafFromOdbElementSections"
#~ msgstr ""

#~ msgid "LeafFromOdbElementTypes"
#~ msgstr ""

#~ msgid "LeafFromOdbNodePick"
#~ msgstr ""

#~ msgid "LeafFromPartElementLabels"
#~ msgstr ""

#~ msgid "LeafFromPartInstance"
#~ msgstr ""

#~ msgid "LeafFromPartNodeLabels"
#~ msgstr ""

#~ msgid "LeafFromReferencePoint"
#~ msgstr ""

#~ msgid "LeafFromSets"
#~ msgstr ""

#~ msgid "LeafFromSurfaceSets"
#~ msgstr ""

#~ msgid "LeafFromSurfaceVarRange"
#~ msgstr ""

#~ msgid ""
#~ "A :py:class:`~abaqus.Session.JournalOptions.JournalOptions` "
#~ "object specifying how to record "
#~ "selection of geometry in the journal "
#~ "and replay files."
#~ msgstr ""

#~ msgid ""
#~ "A "
#~ ":py:class:`~abaqus.Session.MemoryReductionOptions.MemoryReductionOptions`"
#~ " object specifying options for running "
#~ "in reduced memory mode."
#~ msgstr ""

#~ msgid ""
#~ "A :py:class:`~abaqus.PathAndProbe.NodeQuery.NodeQuery` "
#~ "object specifying nodes and their "
#~ "coordinates in a path."
#~ msgstr ""

#~ msgid ""
#~ "A "
#~ ":py:class:`~abaqus.Sketcher.ConstrainedSketchOptions.ConstrainedSketcherOptions.ConstrainedSketcherOptions`"
#~ " object specifying common options for "
#~ "all sketches."
#~ msgstr ""

#~ msgid "A :py:class:`~abaqus.OdbDisplay.ViewerOptions.ViewerOptions` object."
#~ msgstr ""

#~ msgid ""
#~ "An "
#~ ":py:class:`~abaqus.Animation.AnimationOptions.AnimationOptions` "
#~ "object."
#~ msgstr ""

#~ msgid "An :py:class:`~abaqus.Animation.AVIOptions.AVIOptions` object."
#~ msgstr ""

#~ msgid ""
#~ "An "
#~ ":py:class:`~abaqus.Animation.ImageAnimationOptions.ImageAnimationOptions`"
#~ " object."
#~ msgstr ""

#~ msgid "An :py:class:`~abaqus.Animation.ImageAnimation.ImageAnimation` object."
#~ msgstr ""

#~ msgid ""
#~ "A "
#~ ":py:class:`~abaqus.Animation.QuickTimeOptions.QuickTimeOptions` "
#~ "object."
#~ msgstr ""

#~ msgid ""
#~ "A "
#~ ":py:class:`~abaqus.CustomKernel.RepositorySupport.RepositorySupport`"
#~ " object."
#~ msgstr ""

#~ msgid ""
#~ "A "
#~ ":py:class:`~abaqus.FieldReport.FieldReportOptions.FieldReportOptions`"
#~ " object."
#~ msgstr ""

#~ msgid ""
#~ "A "
#~ ":py:class:`~abaqus.FieldReport.FreeBodyReportOptions.FreeBodyReportOptions`"
#~ " object."
#~ msgstr ""

#~ msgid ""
#~ "A "
#~ ":py:class:`~abaqus.OdbDisplay.DefaultOdbDisplay.DefaultOdbDisplay` "
#~ "object."
#~ msgstr ""

#~ msgid "A :py:class:`~abaqus.XY.DefaultPlot.DefaultPlot` object."
#~ msgstr ""

#~ msgid ""
#~ "A :py:class:`~abaqus.XY.DefaultChartOptions.DefaultChartOptions`"
#~ " object."
#~ msgstr ""

#~ msgid ""
#~ "A "
#~ ":py:class:`~abaqus.PathAndProbe.CurrentProbeValues.CurrentProbeValues`"
#~ " object."
#~ msgstr ""

#~ msgid "A :py:class:`~abaqus.PathAndProbe.ProbeOptions.ProbeOptions` object."
#~ msgstr ""

#~ msgid "A :py:class:`~abaqus.PathAndProbe.ProbeReport.ProbeReport` object."
#~ msgstr ""

#~ msgid ""
#~ "A "
#~ ":py:class:`~abaqus.PathAndProbe.SelectedProbeValues.SelectedProbeValues`"
#~ " object."
#~ msgstr ""

#~ msgid "A :py:class:`~abaqus.Print.PrintOptions.PrintOptions` object."
#~ msgstr ""

#~ msgid "An :py:class:`~abaqus.Print.EpsOptions.EpsOptions` object."
#~ msgstr ""

#~ msgid "A :py:class:`~abaqus.Print.PageSetupOptions.PageSetupOptions` object."
#~ msgstr ""

#~ msgid "A :py:class:`~abaqus.Print.PngOptions.PngOptions` object."
#~ msgstr ""

#~ msgid "A :py:class:`~abaqus.Print.PsOptions.PsOptions` object."
#~ msgstr ""

#~ msgid "A :py:class:`~abaqus.Print.SvgOptions.SvgOptions` object."
#~ msgstr ""

#~ msgid "A :py:class:`~abaqus.PredefinedField.TiffOptions.TiffOptions` object."
#~ msgstr ""

#~ msgid ""
#~ "An :py:class:`~abaqus.Session.AutoColors.AutoColors` "
#~ "object specifying the color palette to"
#~ " be used for color coding."
#~ msgstr ""

#~ msgid ""
#~ "An :py:class:`~abaqus.Session.AutoColors.AutoColors` "
#~ "object specifying the color palette to"
#~ " be used forXYCurve objects."
#~ msgstr ""

#~ msgid "An :py:class:`~abaqus.XY.XYReportOptions.XYReportOptions` object."
#~ msgstr ""

#~ msgid "A :py:class:`~abaqus.DisplayOptions.GraphicsInfo.GraphicsInfo` object."
#~ msgstr ""

#~ msgid ""
#~ "A "
#~ ":py:class:`~abaqus.DisplayOptions.GraphicsOptions.GraphicsOptions` "
#~ "object."
#~ msgstr ""

#~ msgid ""
#~ "A "
#~ ":py:class:`~abaqus.DisplayOptions.ViewportAnnotationOptions.ViewportAnnotationOptions`"
#~ " object."
#~ msgstr ""

#~ msgid "A :py:class:`~abaqus.DisplayOptions.LightOptions.LightOptions` object."
#~ msgstr ""

#~ msgid "A :py:class:`~abaqus.Canvas.DrawingArea.DrawingArea` object."
#~ msgstr ""

#~ msgid ""
#~ "A :py:class:`~abaqus.Mesh.MesherOptions.MesherOptions` "
#~ "object specifying how to control default"
#~ " settings in the Mesh module."
#~ msgstr ""

#~ msgid ""
#~ "A :py:class:`~abaqus.DisplayGroup.Leaf.Leaf` object "
#~ "specifying the items in the display "
#~ "group."
#~ msgstr ""

#~ msgid "A :py:class:`~abaqus.DisplayGroup.DisplayGroup.DisplayGroup` object."
#~ msgstr ""

#~ msgid ""
#~ "A :py:class:`~abaqus.DisplayGroup.Leaf.Leaf` object "
#~ "specifying the items to add to the"
#~ " display group."
#~ msgstr ""

#~ msgid ""
#~ "A :py:class:`~abaqus.DisplayGroup.Leaf.Leaf` object "
#~ "specifying the items to be excluded "
#~ "from the display group."
#~ msgstr ""

#~ msgid ""
#~ "A :py:class:`~abaqus.DisplayGroup.Leaf.Leaf` object "
#~ "specifying the items to be included "
#~ "in the display group."
#~ msgstr ""

#~ msgid ""
#~ "A :py:class:`~abaqus.DisplayGroup.Leaf.Leaf` object "
#~ "specifying the items to remove from "
#~ "the display group."
#~ msgstr ""

#~ msgid ""
#~ "A :py:class:`~abaqus.DisplayGroup.Leaf.Leaf` object "
#~ "specifying the items with which to "
#~ "replace the current display group "
#~ "contents."
#~ msgstr ""

#~ msgid ""
#~ "A "
#~ ":py:class:`~abaqus.DisplayGroup.DisplayGroupInstance.DisplayGroupInstance`"
#~ " object stores the IDs of the "
#~ "entities displayed in a viewport. The"
#~ " DisplayGroupInstance object has no "
#~ "constructor. When you set a display "
#~ "group to be plotted in a viewport,"
#~ " Abaqus/CAE creates a DisplayGroupInstance "
#~ "object for each display group and "
#~ "places it in the "
#~ "DisplayGroupInstanceRepository object."
#~ msgstr ""

#~ msgid ""
#~ "An "
#~ ":py:class:`~abaqus.PlotOptions.OdbDisplayOptions.OdbDisplayOptions`"
#~ " object specifying this member is "
#~ "available only for DisplayGroupInstance "
#~ "objects that are members of the "
#~ "DisplayGroupInstance repository member of the"
#~ " OdbDisplay object."
#~ msgstr ""

#~ msgid "A :py:class:`~abaqus.DisplayGroup.Leaf.Leaf` object."
#~ msgstr ""

#~ msgid ""
#~ "A :py:class:`~abaqus.DisplayGroup.LeafFromDatums.LeafFromDatums`"
#~ " object."
#~ msgstr ""

#~ msgid ""
#~ "A "
#~ ":py:class:`~abaqus.DisplayGroup.DisplayGroupArray.DisplayGroupArray`"
#~ " object."
#~ msgstr ""

#~ msgid ""
#~ "A "
#~ ":py:class:`~abaqus.DisplayGroup.LeafFromDisplayGroup.LeafFromDisplayGroup`"
#~ " object."
#~ msgstr ""

#~ msgid ""
#~ "A "
#~ ":py:class:`~abaqus.DisplayGroup.LeafFromElementLabels.LeafFromElementLabels`"
#~ " object."
#~ msgstr ""

#~ msgid ""
#~ "A "
#~ ":py:class:`~abaqus.DisplayGroup.LeafFromElementSets.LeafFromElementSets`"
#~ " object."
#~ msgstr ""

#~ msgid ""
#~ "A "
#~ ":py:class:`~abaqus.DisplayGroup.LeafFromElementVarRange.LeafFromElementVarRange`"
#~ " object."
#~ msgstr ""

#~ msgid ""
#~ "A "
#~ ":py:class:`~abaqus.DisplayGroup.LeafFromGeometry.LeafFromGeometry` "
#~ "object."
#~ msgstr ""

#~ msgid ""
#~ "A :py:class:`~abaqus.Assembly.PartInstance.PartInstance` "
#~ "object or a Sequence of PartInstance "
#~ "objects."
#~ msgstr ""

#~ msgid ""
#~ "A "
#~ ":py:class:`~abaqus.DisplayGroup.LeafFromInstance.LeafFromInstance` "
#~ "object."
#~ msgstr ""

#~ msgid ""
#~ "A "
#~ ":py:class:`~abaqus.DisplayGroup.LeafFromInstanceElementLabels.LeafFromInstanceElementLabels`"
#~ " object."
#~ msgstr ""

#~ msgid ""
#~ "A "
#~ ":py:class:`~abaqus.DisplayGroup.LeafFromInstanceNodeLabels.LeafFromInstanceNodeLabels`"
#~ " object."
#~ msgstr ""

#~ msgid ""
#~ "A "
#~ ":py:class:`~abaqus.DisplayGroup.LeafFromMeshElementLabels.LeafFromMeshElementLabels`"
#~ " object."
#~ msgstr ""

#~ msgid ""
#~ "A "
#~ ":py:class:`~abaqus.DisplayGroup.LeafFromMeshNodeLabels.LeafFromMeshNodeLabels`"
#~ " object."
#~ msgstr ""

#~ msgid ""
#~ "A "
#~ ":py:class:`~abaqus.DisplayGroup.LeafFromMeshSurfaceSets.LeafFromMeshSurfaceSets`"
#~ " object."
#~ msgstr ""

#~ msgid ""
#~ "A "
#~ ":py:class:`~abaqus.DisplayGroup.LeafFromModelElemLabels.LeafFromModelElemLabels`"
#~ " object."
#~ msgstr ""

#~ msgid ""
#~ "A "
#~ ":py:class:`~abaqus.DisplayGroup.LeafFromModelNodeLabels.LeafFromModelNodeLabels`"
#~ " object."
#~ msgstr ""

#~ msgid ""
#~ "A "
#~ ":py:class:`~abaqus.DisplayGroup.LeafFromNodeLabels.LeafFromNodeLabels`"
#~ " object."
#~ msgstr ""

#~ msgid ""
#~ "A "
#~ ":py:class:`~abaqus.DisplayGroup.LeafFromNodeSets.LeafFromNodeSets` "
#~ "object."
#~ msgstr ""

#~ msgid ""
#~ "A "
#~ ":py:class:`~abaqus.DisplayGroup.LeafFromNodeVarRange.LeafFromNodeVarRange`"
#~ " object."
#~ msgstr ""

#~ msgid ""
#~ "A "
#~ ":py:class:`~abaqus.DisplayGroup.LeafFromOdbEdgePick.LeafFromOdbEdgePick`"
#~ " object."
#~ msgstr ""

#~ msgid ""
#~ "A "
#~ ":py:class:`~abaqus.DisplayGroup.LeafFromOdbElementLayups.LeafFromOdbElementLayups`"
#~ " object."
#~ msgstr ""

#~ msgid ""
#~ "A "
#~ ":py:class:`~abaqus.DisplayGroup.LeafFromOdbElementMaterials.LeafFromOdbElementMaterials`"
#~ " object."
#~ msgstr ""

#~ msgid ""
#~ "A "
#~ ":py:class:`~abaqus.DisplayGroup.LeafFromOdbElementPick.LeafFromOdbElementPick`"
#~ " object."
#~ msgstr ""

#~ msgid ""
#~ "A "
#~ ":py:class:`~abaqus.DisplayGroup.LeafFromOdbElementPlies.LeafFromOdbElementPlies`"
#~ " object."
#~ msgstr ""

#~ msgid ""
#~ "A "
#~ ":py:class:`~abaqus.DisplayGroup.LeafFromOdbElementSections.LeafFromOdbElementSections`"
#~ " object."
#~ msgstr ""

#~ msgid ""
#~ "A "
#~ ":py:class:`~abaqus.DisplayGroup.LeafFromOdbElementTypes.LeafFromOdbElementTypes`"
#~ " object."
#~ msgstr ""

#~ msgid ""
#~ "A "
#~ ":py:class:`~abaqus.DisplayGroup.LeafFromOdbNodePick.LeafFromOdbNodePick`"
#~ " object."
#~ msgstr ""

#~ msgid "A :py:class:`~abaqus.Part.Part.Part` object."
#~ msgstr ""

#~ msgid ""
#~ "A "
#~ ":py:class:`~abaqus.DisplayGroup.LeafFromPartElementLabels.LeafFromPartElementLabels`"
#~ " object."
#~ msgstr ""

#~ msgid ""
#~ "A "
#~ ":py:class:`~abaqus.DisplayGroup.LeafFromPartInstance.LeafFromPartInstance`"
#~ " object."
#~ msgstr ""

#~ msgid ""
#~ "A "
#~ ":py:class:`~abaqus.DisplayGroup.LeafFromPartNodeLabels.LeafFromPartNodeLabels`"
#~ " object."
#~ msgstr ""

#~ msgid ""
#~ "A "
#~ ":py:class:`~abaqus.DisplayGroup.LeafFromReferencePoint.LeafFromReferencePoint`"
#~ " object."
#~ msgstr ""

#~ msgid "A :py:class:`~abaqus.DisplayGroup.LeafFromSets.LeafFromSets` object."
#~ msgstr ""

#~ msgid ""
#~ "A "
#~ ":py:class:`~abaqus.DisplayGroup.LeafFromSurfaceSets.LeafFromSurfaceSets`"
#~ " object."
#~ msgstr ""

#~ msgid ""
#~ "A "
#~ ":py:class:`~abaqus.DisplayGroup.LeafFromSurfaceVarRange.LeafFromSurfaceVarRange`"
#~ " object."
#~ msgstr ""

