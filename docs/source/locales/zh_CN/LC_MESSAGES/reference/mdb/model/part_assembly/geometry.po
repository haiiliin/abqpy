# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, WANG Hailin
# This file is distributed under the same license as the abqpy package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: abqpy \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-10-07 10:09+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.3\n"

#: ../../reference/mdb/model/part_assembly/geometry.rst:3
msgid "Basic Geometry"
msgstr ""

#: ../../reference/mdb/model/part_assembly/geometry.rst:5
msgid ""
"The basic geometry commands create geometric entities that are referenced"
" by Part objects, Instance objects, and GeometrySet objects."
msgstr ""

#: ../../reference/mdb/model/part_assembly/geometry.rst:8
msgid "Object features"
msgstr ""

#: ../../reference/mdb/model/part_assembly/geometry.rst:11
msgid "Cell"
msgstr ""

#: abaqus.BasicGeometry.Cell.Cell:1 of
msgid "Cells are volumetric regions of geometry."
msgstr ""

#: abaqus.BasicGeometry.Cell.Cell:4 abaqus.BasicGeometry.CellArray.CellArray:4
#: abaqus.BasicGeometry.Edge.Edge:4 abaqus.BasicGeometry.EdgeArray.EdgeArray:5
#: abaqus.BasicGeometry.Face.Face:4 abaqus.BasicGeometry.FaceArray.FaceArray:5
#: abaqus.BasicGeometry.IgnoredEdge.IgnoredEdge:5
#: abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray:5
#: abaqus.BasicGeometry.IgnoredVertex.IgnoredVertex:5
#: abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray:5
#: abaqus.BasicGeometry.InterestingPoint.InterestingPoint:11
#: abaqus.BasicGeometry.ReferencePoint.ReferencePoint:6
#: abaqus.BasicGeometry.Transform.Transform:6
#: abaqus.BasicGeometry.Vertex.Vertex:4
#: abaqus.BasicGeometry.VertexArray.VertexArray:5 of
msgid "This object can be accessed by::"
msgstr ""

#: abaqus.BasicGeometry.Cell.Cell:22 of
msgid ""
"Check `Cell on help.3ds.com/2017 "
"<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-cellpyc.htm?contextscope=all>`__."
msgstr ""

#: abaqus.BasicGeometry.Cell.Cell abaqus.BasicGeometry.Edge.Edge
#: abaqus.BasicGeometry.Face.Face abaqus.BasicGeometry.IgnoredEdge.IgnoredEdge
#: abaqus.BasicGeometry.IgnoredVertex.IgnoredVertex
#: abaqus.BasicGeometry.Vertex.Vertex of
msgid "Public Data Attributes:"
msgstr ""

#: ../../None:7:<autosummary>:1
msgid ":py:obj:`index <abaqus.BasicGeometry.Cell.Cell.index>`\\"
msgstr ""

#: ../../None:7:<autosummary>:1 ../../docstring
#: abaqus.BasicGeometry.Cell.Cell.index:1 of
msgid "An Int specifying the index of the cell in the CellArray."
msgstr ""

#: ../../None:7:<autosummary>:1
msgid ":py:obj:`isReferenceRep <abaqus.BasicGeometry.Cell.Cell.isReferenceRep>`\\"
msgstr ""

#: ../../None:7:<autosummary>:1 ../../docstring
#: abaqus.BasicGeometry.Cell.Cell.isReferenceRep:1 of
msgid ""
"A Boolean specifying whether the cell belongs to the reference "
"representation of the Part or Instance."
msgstr ""

#: ../../None:7:<autosummary>:1
msgid ":py:obj:`pointOn <abaqus.BasicGeometry.Cell.Cell.pointOn>`\\"
msgstr ""

#: ../../None:7:<autosummary>:1 ../../docstring
#: abaqus.BasicGeometry.Cell.Cell.pointOn:1 of
msgid ""
"A tuple of Floats specifying the **X**-, **Y**-, and **Z**-coordinates of"
" a point located on the cell."
msgstr ""

#: ../../None:7:<autosummary>:1
msgid ":py:obj:`featureName <abaqus.BasicGeometry.Cell.Cell.featureName>`\\"
msgstr ""

#: ../../None:7:<autosummary>:1 ../../docstring
#: abaqus.BasicGeometry.Cell.Cell.featureName:1 of
msgid ""
"A tuple of Floats specifying the name of the feature that created this "
"cell."
msgstr ""

#: ../../None:7:<autosummary>:1
msgid ":py:obj:`instanceName <abaqus.BasicGeometry.Cell.Cell.instanceName>`\\"
msgstr ""

#: ../../None:7:<autosummary>:1 ../../docstring
#: abaqus.BasicGeometry.Cell.Cell.instanceName:1 of
msgid ""
"A tuple of Floats specifying the name of the part instance for this cell "
"(if applicable)."
msgstr ""

#: abaqus.BasicGeometry.Cell.Cell abaqus.BasicGeometry.CellArray.CellArray
#: abaqus.BasicGeometry.Edge.Edge abaqus.BasicGeometry.EdgeArray.EdgeArray
#: abaqus.BasicGeometry.Face.Face abaqus.BasicGeometry.FaceArray.FaceArray
#: abaqus.BasicGeometry.IgnoredEdge.IgnoredEdge
#: abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray
#: abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray
#: abaqus.BasicGeometry.InterestingPoint.InterestingPoint
#: abaqus.BasicGeometry.ReferencePoint.ReferencePoint
#: abaqus.BasicGeometry.ReferencePoints.ReferencePoints
#: abaqus.BasicGeometry.Transform.Transform abaqus.BasicGeometry.Vertex.Vertex
#: abaqus.BasicGeometry.VertexArray.VertexArray of
msgid "Public Methods:"
msgstr ""

#: ../../None:9:<autosummary>:1
msgid ""
":py:obj:`getSize <abaqus.BasicGeometry.Cell.Cell.getSize>`\\ "
"\\(\\[printResults\\]\\)"
msgstr ""

#: ../../None:9:<autosummary>:1 abaqus.BasicGeometry.Cell.Cell.getSize:1 of
msgid "This method returns a Float indicating the volume of the cell."
msgstr ""

#: ../../None:9:<autosummary>:1
msgid ":py:obj:`getFaces <abaqus.BasicGeometry.Cell.Cell.getFaces>`\\ \\(\\)"
msgstr ""

#: ../../None:9:<autosummary>:1 abaqus.BasicGeometry.Cell.Cell.getFaces:1 of
msgid ""
"This method returns a sequence consisting of the face IDs of the faces "
"which bound the cell."
msgstr ""

#: ../../None:9:<autosummary>:1
msgid ":py:obj:`getEdges <abaqus.BasicGeometry.Cell.Cell.getEdges>`\\ \\(\\)"
msgstr ""

#: ../../None:9:<autosummary>:1 abaqus.BasicGeometry.Cell.Cell.getEdges:1 of
msgid ""
"This method returns a sequence consisting of the edge IDs of the edges on"
" the cell."
msgstr ""

#: ../../None:9:<autosummary>:1
msgid ""
":py:obj:`getVertices <abaqus.BasicGeometry.Cell.Cell.getVertices>`\\ "
"\\(\\)"
msgstr ""

#: ../../None:9:<autosummary>:1 abaqus.BasicGeometry.Cell.Cell.getVertices:1 of
msgid ""
"This method returns a sequence consisting of the vertex IDs of the "
"vertices on the cell."
msgstr ""

#: ../../None:9:<autosummary>:1
msgid ""
":py:obj:`getAdjacentCells "
"<abaqus.BasicGeometry.Cell.Cell.getAdjacentCells>`\\ \\(\\)"
msgstr ""

#: ../../None:9:<autosummary>:1
#: abaqus.BasicGeometry.Cell.Cell.getAdjacentCells:1 of
msgid ""
"This method returns an array of cell objects that share at least one face"
" of the cell."
msgstr ""

#: ../../None:9:<autosummary>:1
msgid ":py:obj:`getNodes <abaqus.BasicGeometry.Cell.Cell.getNodes>`\\ \\(\\)"
msgstr ""

#: ../../None:9:<autosummary>:1 abaqus.BasicGeometry.Cell.Cell.getNodes:1 of
msgid ""
"This method returns an array of node objects that are associated with the"
" cell."
msgstr ""

#: ../../None:9:<autosummary>:1
msgid ""
":py:obj:`getElements <abaqus.BasicGeometry.Cell.Cell.getElements>`\\ "
"\\(\\)"
msgstr ""

#: ../../None:9:<autosummary>:1 abaqus.BasicGeometry.Cell.Cell.getElements:1 of
msgid ""
"This method returns an array of element objects that are associated with "
"the cell."
msgstr ""

#: abaqus.BasicGeometry.Cell.Cell.getAdjacentCells
#: abaqus.BasicGeometry.Cell.Cell.getEdges
#: abaqus.BasicGeometry.Cell.Cell.getElements
#: abaqus.BasicGeometry.Cell.Cell.getFaces
#: abaqus.BasicGeometry.Cell.Cell.getNodes
#: abaqus.BasicGeometry.Cell.Cell.getSize
#: abaqus.BasicGeometry.Cell.Cell.getVertices
#: abaqus.BasicGeometry.CellArray.CellArray.findAt
#: abaqus.BasicGeometry.CellArray.CellArray.getBoundingBox
#: abaqus.BasicGeometry.CellArray.CellArray.getByBoundingBox
#: abaqus.BasicGeometry.CellArray.CellArray.getByBoundingCylinder
#: abaqus.BasicGeometry.CellArray.CellArray.getByBoundingSphere
#: abaqus.BasicGeometry.CellArray.CellArray.getMask
#: abaqus.BasicGeometry.CellArray.CellArray.getSequenceFromMask
#: abaqus.BasicGeometry.Edge.Edge.getAdjacentEdges
#: abaqus.BasicGeometry.Edge.Edge.getCurvature
#: abaqus.BasicGeometry.Edge.Edge.getEdgesByEdgeAngle
#: abaqus.BasicGeometry.Edge.Edge.getElements
#: abaqus.BasicGeometry.Edge.Edge.getFaces
#: abaqus.BasicGeometry.Edge.Edge.getNodes
#: abaqus.BasicGeometry.Edge.Edge.getRadius
#: abaqus.BasicGeometry.Edge.Edge.getSize
#: abaqus.BasicGeometry.Edge.Edge.getVertices
#: abaqus.BasicGeometry.Edge.Edge.isTangentFlipped
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.findAt
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getBoundingBox
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getByBoundingBox
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getByBoundingCylinder
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getByBoundingSphere
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getClosest
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getMask
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getSequenceFromMask
#: abaqus.BasicGeometry.Face.Face.getAdjacentFaces
#: abaqus.BasicGeometry.Face.Face.getCells
#: abaqus.BasicGeometry.Face.Face.getCentroid
#: abaqus.BasicGeometry.Face.Face.getCurvature
#: abaqus.BasicGeometry.Face.Face.getEdges
#: abaqus.BasicGeometry.Face.Face.getElementFaces
#: abaqus.BasicGeometry.Face.Face.getElements
#: abaqus.BasicGeometry.Face.Face.getFacesByCurvature
#: abaqus.BasicGeometry.Face.Face.getFacesByFaceAngle
#: abaqus.BasicGeometry.Face.Face.getNodes
#: abaqus.BasicGeometry.Face.Face.getNormal
#: abaqus.BasicGeometry.Face.Face.getSize
#: abaqus.BasicGeometry.Face.Face.getVertices
#: abaqus.BasicGeometry.Face.Face.isNormalFlipped
#: abaqus.BasicGeometry.FaceArray.FaceArray.findAt
#: abaqus.BasicGeometry.FaceArray.FaceArray.getBoundingBox
#: abaqus.BasicGeometry.FaceArray.FaceArray.getByBoundingBox
#: abaqus.BasicGeometry.FaceArray.FaceArray.getByBoundingCylinder
#: abaqus.BasicGeometry.FaceArray.FaceArray.getByBoundingSphere
#: abaqus.BasicGeometry.FaceArray.FaceArray.getClosest
#: abaqus.BasicGeometry.FaceArray.FaceArray.getMask
#: abaqus.BasicGeometry.FaceArray.FaceArray.getSequenceFromMask
#: abaqus.BasicGeometry.IgnoredEdge.IgnoredEdge.getCurvature
#: abaqus.BasicGeometry.IgnoredEdge.IgnoredEdge.getRadius
#: abaqus.BasicGeometry.IgnoredEdge.IgnoredEdge.getSize
#: abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.findAt
#: abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.getClosest
#: abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.getMask
#: abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.getSequenceFromMask
#: abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.findAt
#: abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.getClosest
#: abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.getMask
#: abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.getSequenceFromMask
#: abaqus.BasicGeometry.Transform.Transform.matrix
#: abaqus.BasicGeometry.Vertex.Vertex.getEdges
#: abaqus.BasicGeometry.Vertex.Vertex.getElements
#: abaqus.BasicGeometry.Vertex.Vertex.getNodes
#: abaqus.BasicGeometry.VertexArray.VertexArray.findAt
#: abaqus.BasicGeometry.VertexArray.VertexArray.getBoundingBox
#: abaqus.BasicGeometry.VertexArray.VertexArray.getByBoundingBox
#: abaqus.BasicGeometry.VertexArray.VertexArray.getByBoundingCylinder
#: abaqus.BasicGeometry.VertexArray.VertexArray.getByBoundingSphere
#: abaqus.BasicGeometry.VertexArray.VertexArray.getClosest
#: abaqus.BasicGeometry.VertexArray.VertexArray.getMask
#: abaqus.BasicGeometry.VertexArray.VertexArray.getSequenceFromMask of
msgid "Returns"
msgstr ""

#: abaqus.BasicGeometry.Cell.Cell.getAdjacentCells:3 of
msgid ""
"A :py:class:`~abaqus.BasicGeometry.CellArray.CellArray` object which is a"
" sequence of Cell objects."
msgstr ""

#: abaqus.BasicGeometry.Cell.Cell.getAdjacentCells
#: abaqus.BasicGeometry.Cell.Cell.getEdges
#: abaqus.BasicGeometry.Cell.Cell.getElements
#: abaqus.BasicGeometry.Cell.Cell.getFaces
#: abaqus.BasicGeometry.Cell.Cell.getNodes
#: abaqus.BasicGeometry.Cell.Cell.getSize
#: abaqus.BasicGeometry.Cell.Cell.getVertices
#: abaqus.BasicGeometry.CellArray.CellArray.findAt
#: abaqus.BasicGeometry.CellArray.CellArray.getBoundingBox
#: abaqus.BasicGeometry.CellArray.CellArray.getByBoundingBox
#: abaqus.BasicGeometry.CellArray.CellArray.getByBoundingCylinder
#: abaqus.BasicGeometry.CellArray.CellArray.getByBoundingSphere
#: abaqus.BasicGeometry.CellArray.CellArray.getMask
#: abaqus.BasicGeometry.CellArray.CellArray.getSequenceFromMask
#: abaqus.BasicGeometry.Edge.Edge.getAdjacentEdges
#: abaqus.BasicGeometry.Edge.Edge.getCurvature
#: abaqus.BasicGeometry.Edge.Edge.getEdgesByEdgeAngle
#: abaqus.BasicGeometry.Edge.Edge.getElements
#: abaqus.BasicGeometry.Edge.Edge.getFaces
#: abaqus.BasicGeometry.Edge.Edge.getNodes
#: abaqus.BasicGeometry.Edge.Edge.getRadius
#: abaqus.BasicGeometry.Edge.Edge.getSize
#: abaqus.BasicGeometry.Edge.Edge.getVertices
#: abaqus.BasicGeometry.Edge.Edge.isTangentFlipped
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.findAt
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getBoundingBox
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getByBoundingBox
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getByBoundingCylinder
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getByBoundingSphere
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getClosest
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getMask
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getSequenceFromMask
#: abaqus.BasicGeometry.Face.Face.getAdjacentFaces
#: abaqus.BasicGeometry.Face.Face.getCells
#: abaqus.BasicGeometry.Face.Face.getCentroid
#: abaqus.BasicGeometry.Face.Face.getCurvature
#: abaqus.BasicGeometry.Face.Face.getElementFaces
#: abaqus.BasicGeometry.Face.Face.getElements
#: abaqus.BasicGeometry.Face.Face.getFacesByCurvature
#: abaqus.BasicGeometry.Face.Face.getFacesByFaceAngle
#: abaqus.BasicGeometry.Face.Face.getNodes
#: abaqus.BasicGeometry.Face.Face.getNormal
#: abaqus.BasicGeometry.Face.Face.getSize
#: abaqus.BasicGeometry.Face.Face.getVertices
#: abaqus.BasicGeometry.Face.Face.isNormalFlipped
#: abaqus.BasicGeometry.FaceArray.FaceArray.findAt
#: abaqus.BasicGeometry.FaceArray.FaceArray.getBoundingBox
#: abaqus.BasicGeometry.FaceArray.FaceArray.getByBoundingBox
#: abaqus.BasicGeometry.FaceArray.FaceArray.getByBoundingCylinder
#: abaqus.BasicGeometry.FaceArray.FaceArray.getByBoundingSphere
#: abaqus.BasicGeometry.FaceArray.FaceArray.getClosest
#: abaqus.BasicGeometry.FaceArray.FaceArray.getMask
#: abaqus.BasicGeometry.FaceArray.FaceArray.getSequenceFromMask
#: abaqus.BasicGeometry.IgnoredEdge.IgnoredEdge.getCurvature
#: abaqus.BasicGeometry.IgnoredEdge.IgnoredEdge.getRadius
#: abaqus.BasicGeometry.IgnoredEdge.IgnoredEdge.getSize
#: abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.findAt
#: abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.getClosest
#: abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.getMask
#: abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.getSequenceFromMask
#: abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.findAt
#: abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.getClosest
#: abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.getMask
#: abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.getSequenceFromMask
#: abaqus.BasicGeometry.Transform.Transform.matrix
#: abaqus.BasicGeometry.Vertex.Vertex.getEdges
#: abaqus.BasicGeometry.Vertex.Vertex.getElements
#: abaqus.BasicGeometry.Vertex.Vertex.getNodes
#: abaqus.BasicGeometry.VertexArray.VertexArray.findAt
#: abaqus.BasicGeometry.VertexArray.VertexArray.getBoundingBox
#: abaqus.BasicGeometry.VertexArray.VertexArray.getByBoundingBox
#: abaqus.BasicGeometry.VertexArray.VertexArray.getByBoundingCylinder
#: abaqus.BasicGeometry.VertexArray.VertexArray.getByBoundingSphere
#: abaqus.BasicGeometry.VertexArray.VertexArray.getClosest
#: abaqus.BasicGeometry.VertexArray.VertexArray.getMask
#: abaqus.BasicGeometry.VertexArray.VertexArray.getSequenceFromMask of
msgid "Return type"
msgstr ""

#: abaqus.BasicGeometry.Cell.Cell.getAdjacentCells:4
#: abaqus.BasicGeometry.CellArray.CellArray.getByBoundingBox:20
#: abaqus.BasicGeometry.CellArray.CellArray.getByBoundingCylinder:17
#: abaqus.BasicGeometry.CellArray.CellArray.getByBoundingSphere:13 of
msgid ":class:`CellArray`"
msgstr ""

#: abaqus.BasicGeometry.Cell.Cell.getEdges:3
#: abaqus.BasicGeometry.Cell.Cell.getFaces:4
#: abaqus.BasicGeometry.Cell.Cell.getVertices:3
#: abaqus.BasicGeometry.Edge.Edge.getFaces:4
#: abaqus.BasicGeometry.Edge.Edge.getVertices:6
#: abaqus.BasicGeometry.Face.Face.getCells:4
#: abaqus.BasicGeometry.Face.Face.getVertices:3
#: abaqus.BasicGeometry.Vertex.Vertex.getEdges:4 of
msgid "A tuple of integers."
msgstr ""

#: abaqus.BasicGeometry.Cell.Cell.getEdges:4
#: abaqus.BasicGeometry.Cell.Cell.getFaces:5
#: abaqus.BasicGeometry.Cell.Cell.getVertices:4
#: abaqus.BasicGeometry.Edge.Edge.getFaces:5
#: abaqus.BasicGeometry.Edge.Edge.getVertices:7
#: abaqus.BasicGeometry.Face.Face.getCells:5
#: abaqus.BasicGeometry.Face.Face.getEdges:3
#: abaqus.BasicGeometry.Face.Face.getVertices:4
#: abaqus.BasicGeometry.Vertex.Vertex.getEdges:5 of
msgid ":class:`Tuple[int`, :class:`...]`"
msgstr ""

#: abaqus.BasicGeometry.Cell.Cell.getElements:3
#: abaqus.BasicGeometry.Edge.Edge.getElements:3
#: abaqus.BasicGeometry.Face.Face.getElements:3
#: abaqus.BasicGeometry.Vertex.Vertex.getElements:3 of
msgid ""
"A :py:class:`~abaqus.Mesh.MeshElementArray.MeshElementArray` object which"
" is a sequence of MeshElement objects."
msgstr ""

#: abaqus.BasicGeometry.Cell.Cell.getElements:4
#: abaqus.BasicGeometry.Edge.Edge.getElements:4
#: abaqus.BasicGeometry.Face.Face.getElements:4
#: abaqus.BasicGeometry.Vertex.Vertex.getElements:4 of
msgid ":class:`MeshElementArray`"
msgstr ""

#: abaqus.BasicGeometry.Cell.Cell.getNodes:3
#: abaqus.BasicGeometry.Face.Face.getNodes:14
#: abaqus.BasicGeometry.Vertex.Vertex.getNodes:3 of
msgid ""
"A :py:class:`~abaqus.Mesh.MeshNodeArray.MeshNodeArray` object which is a "
"sequence of MeshNode objects."
msgstr ""

#: abaqus.BasicGeometry.Cell.Cell.getNodes:4
#: abaqus.BasicGeometry.Edge.Edge.getNodes:4
#: abaqus.BasicGeometry.Face.Face.getNodes:15
#: abaqus.BasicGeometry.Vertex.Vertex.getNodes:4 of
msgid ":class:`MeshNodeArray`"
msgstr ""

#: abaqus.BasicGeometry.Cell.Cell.getSize:4 of
msgid ""
"Check `Cell.getSize on help.3ds.com/2017 "
"<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-cellpyc.htm?contextscope=all"
"#simaker-cellgetsizepyc>`__."
msgstr ""

#: abaqus.BasicGeometry.Cell.Cell.getSize
#: abaqus.BasicGeometry.CellArray.CellArray.findAt
#: abaqus.BasicGeometry.CellArray.CellArray.getByBoundingBox
#: abaqus.BasicGeometry.CellArray.CellArray.getByBoundingCylinder
#: abaqus.BasicGeometry.CellArray.CellArray.getByBoundingSphere
#: abaqus.BasicGeometry.CellArray.CellArray.getSequenceFromMask
#: abaqus.BasicGeometry.Edge.Edge.getCurvature
#: abaqus.BasicGeometry.Edge.Edge.getEdgesByEdgeAngle
#: abaqus.BasicGeometry.Edge.Edge.getSize
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.findAt
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getByBoundingBox
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getByBoundingCylinder
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getByBoundingSphere
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getClosest
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getSequenceFromMask
#: abaqus.BasicGeometry.Face.Face.getCurvature
#: abaqus.BasicGeometry.Face.Face.getElementFaces
#: abaqus.BasicGeometry.Face.Face.getFacesByFaceAngle
#: abaqus.BasicGeometry.Face.Face.getNodes
#: abaqus.BasicGeometry.Face.Face.getNormal
#: abaqus.BasicGeometry.Face.Face.getSize
#: abaqus.BasicGeometry.FaceArray.FaceArray.findAt
#: abaqus.BasicGeometry.FaceArray.FaceArray.getByBoundingBox
#: abaqus.BasicGeometry.FaceArray.FaceArray.getByBoundingCylinder
#: abaqus.BasicGeometry.FaceArray.FaceArray.getByBoundingSphere
#: abaqus.BasicGeometry.FaceArray.FaceArray.getClosest
#: abaqus.BasicGeometry.FaceArray.FaceArray.getSequenceFromMask
#: abaqus.BasicGeometry.IgnoredEdge.IgnoredEdge.getCurvature
#: abaqus.BasicGeometry.IgnoredEdge.IgnoredEdge.getSize
#: abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.findAt
#: abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.getClosest
#: abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.getSequenceFromMask
#: abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.findAt
#: abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.getClosest
#: abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.getSequenceFromMask
#: abaqus.BasicGeometry.VertexArray.VertexArray.findAt
#: abaqus.BasicGeometry.VertexArray.VertexArray.getByBoundingBox
#: abaqus.BasicGeometry.VertexArray.VertexArray.getByBoundingCylinder
#: abaqus.BasicGeometry.VertexArray.VertexArray.getByBoundingSphere
#: abaqus.BasicGeometry.VertexArray.VertexArray.getClosest
#: abaqus.BasicGeometry.VertexArray.VertexArray.getSequenceFromMask of
msgid "Parameters"
msgstr ""

#: abaqus.BasicGeometry.Cell.Cell.getSize:7 of
msgid ""
"A Boolean that determines whether a verbose output is to be printed. The "
"default is True."
msgstr ""

#: abaqus.BasicGeometry.Cell.Cell.getSize:10
#: abaqus.BasicGeometry.Edge.Edge.getSize:9
#: abaqus.BasicGeometry.Face.Face.getSize:9
#: abaqus.BasicGeometry.IgnoredEdge.IgnoredEdge.getSize:9 of
msgid "A Float."
msgstr ""

#: abaqus.BasicGeometry.Cell.Cell.getSize:11
#: abaqus.BasicGeometry.Edge.Edge.getRadius:4
#: abaqus.BasicGeometry.Edge.Edge.getSize:10
#: abaqus.BasicGeometry.Face.Face.getSize:10
#: abaqus.BasicGeometry.IgnoredEdge.IgnoredEdge.getRadius:4
#: abaqus.BasicGeometry.IgnoredEdge.IgnoredEdge.getSize:10 of
msgid ":class:`float`"
msgstr ""

#: ../../reference/mdb/model/part_assembly/geometry.rst:19
msgid "CellArray"
msgstr ""

#: abaqus.BasicGeometry.CellArray.CellArray:1 of
msgid "The CellArray is a sequence of Cell objects."
msgstr ""

#: abaqus.BasicGeometry.CellArray.CellArray:22 of
msgid ""
"Check `CellArray on help.3ds.com/2017 "
"<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-cellarraypyc.htm?contextscope=all>`__."
msgstr ""

#: ../../None:10:<autosummary>:1 ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__init__ <abaqus.BasicGeometry.CellArray.CellArray.__init__>`\\ "
"\\(cells\\)"
msgstr ""

#: ../../None:10:<autosummary>:1 ../../None:36:<autosummary>:1
msgid "This method creates a CellArray object."
msgstr ""

#: ../../None:10:<autosummary>:1
msgid ""
":py:obj:`findAt <abaqus.BasicGeometry.CellArray.CellArray.findAt>`\\ "
"\\(coordinates\\[\\, printWarning\\]\\)"
msgstr ""

#: ../../None:10:<autosummary>:1
msgid ""
"This method returns the object or objects in the CellArray located at the"
" given coordinates."
msgstr ""

#: ../../None:10:<autosummary>:1
msgid ""
":py:obj:`getSequenceFromMask "
"<abaqus.BasicGeometry.CellArray.CellArray.getSequenceFromMask>`\\ "
"\\(mask\\)"
msgstr ""

#: ../../None:10:<autosummary>:1
msgid ""
"This method returns the object or objects in the CellArray identified "
"using the specified **mask**."
msgstr ""

#: ../../None:10:<autosummary>:1
msgid ""
":py:obj:`getMask <abaqus.BasicGeometry.CellArray.CellArray.getMask>`\\ "
"\\(\\)"
msgstr ""

#: ../../None:10:<autosummary>:1 ../../None:11:<autosummary>:1
#: ../../None:6:<autosummary>:1
#: abaqus.BasicGeometry.CellArray.CellArray.getMask:1
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getMask:1
#: abaqus.BasicGeometry.FaceArray.FaceArray.getMask:1
#: abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.getMask:1
#: abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.getMask:1
#: abaqus.BasicGeometry.VertexArray.VertexArray.getMask:1 of
msgid "This method returns a string specifying the object or objects."
msgstr ""

#: ../../None:10:<autosummary>:1
msgid ""
":py:obj:`getByBoundingBox "
"<abaqus.BasicGeometry.CellArray.CellArray.getByBoundingBox>`\\ "
"\\(\\[xMin\\, yMin\\, zMin\\, xMax\\, ...\\]\\)"
msgstr ""

#: ../../None:10:<autosummary>:1
#: abaqus.BasicGeometry.CellArray.CellArray.getByBoundingBox:1 of
msgid ""
"This method returns an array of cell objects that lie within the "
"specified bounding box."
msgstr ""

#: ../../None:10:<autosummary>:1
msgid ""
":py:obj:`getByBoundingCylinder "
"<abaqus.BasicGeometry.CellArray.CellArray.getByBoundingCylinder>`\\ "
"\\(center1\\, center2\\, radius\\)"
msgstr ""

#: ../../None:10:<autosummary>:1
#: abaqus.BasicGeometry.CellArray.CellArray.getByBoundingCylinder:1 of
msgid ""
"This method returns an array of cell objects that lie within the "
"specified bounding cylinder."
msgstr ""

#: ../../None:10:<autosummary>:1
msgid ""
":py:obj:`getByBoundingSphere "
"<abaqus.BasicGeometry.CellArray.CellArray.getByBoundingSphere>`\\ "
"\\(center\\, radius\\)"
msgstr ""

#: ../../None:10:<autosummary>:1
#: abaqus.BasicGeometry.CellArray.CellArray.getByBoundingSphere:1 of
msgid ""
"This method returns an array of cell objects that lie within the "
"specified bounding sphere."
msgstr ""

#: ../../None:10:<autosummary>:1
msgid ""
":py:obj:`getBoundingBox "
"<abaqus.BasicGeometry.CellArray.CellArray.getBoundingBox>`\\ \\(\\)"
msgstr ""

#: ../../None:10:<autosummary>:1
#: abaqus.BasicGeometry.CellArray.CellArray.getBoundingBox:1 of
msgid ""
"This method returns a dictionary of two tuples representing minimum and "
"maximum boundary values of the bounding box of the minimum size "
"containing the cell sequence."
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__repr__ <abaqus.BasicGeometry.CellArray.CellArray.__repr__>`\\ "
"\\(\\)"
msgstr ""

#: ../../None:34:<autosummary>:1 ../../None:36:<autosummary>:1
msgid "Return repr(self)."
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__getattribute__ "
"<abaqus.BasicGeometry.CellArray.CellArray.__getattribute__>`\\ \\(name\\,"
" \\/\\)"
msgstr ""

#: ../../None:34:<autosummary>:1 ../../None:36:<autosummary>:1
msgid "Return getattr(self, name)."
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__lt__ <abaqus.BasicGeometry.CellArray.CellArray.__lt__>`\\ "
"\\(value\\, \\/\\)"
msgstr ""

#: ../../None:34:<autosummary>:1 ../../None:36:<autosummary>:1
msgid "Return self<value."
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__le__ <abaqus.BasicGeometry.CellArray.CellArray.__le__>`\\ "
"\\(value\\, \\/\\)"
msgstr ""

#: ../../None:34:<autosummary>:1 ../../None:36:<autosummary>:1
msgid "Return self<=value."
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__eq__ <abaqus.BasicGeometry.CellArray.CellArray.__eq__>`\\ "
"\\(value\\, \\/\\)"
msgstr ""

#: ../../None:34:<autosummary>:1 ../../None:36:<autosummary>:1
msgid "Return self==value."
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__ne__ <abaqus.BasicGeometry.CellArray.CellArray.__ne__>`\\ "
"\\(value\\, \\/\\)"
msgstr ""

#: ../../None:34:<autosummary>:1 ../../None:36:<autosummary>:1
msgid "Return self!=value."
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__gt__ <abaqus.BasicGeometry.CellArray.CellArray.__gt__>`\\ "
"\\(value\\, \\/\\)"
msgstr ""

#: ../../None:34:<autosummary>:1 ../../None:36:<autosummary>:1
msgid "Return self>value."
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__ge__ <abaqus.BasicGeometry.CellArray.CellArray.__ge__>`\\ "
"\\(value\\, \\/\\)"
msgstr ""

#: ../../None:34:<autosummary>:1 ../../None:36:<autosummary>:1
msgid "Return self>=value."
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__iter__ <abaqus.BasicGeometry.CellArray.CellArray.__iter__>`\\ "
"\\(\\)"
msgstr ""

#: ../../None:34:<autosummary>:1 ../../None:36:<autosummary>:1
msgid "Implement iter(self)."
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__len__ <abaqus.BasicGeometry.CellArray.CellArray.__len__>`\\ "
"\\(\\)"
msgstr ""

#: ../../None:34:<autosummary>:1 ../../None:36:<autosummary>:1
msgid "Return len(self)."
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__getitem__ "
"<abaqus.BasicGeometry.CellArray.CellArray.__getitem__>`\\"
msgstr ""

#: ../../None:34:<autosummary>:1 ../../None:36:<autosummary>:1
#: ../../None:3:<autosummary>:1
msgid "x.__getitem__(y) <==> x[y]"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__setitem__ "
"<abaqus.BasicGeometry.CellArray.CellArray.__setitem__>`\\ \\(key\\, "
"value\\, \\/\\)"
msgstr ""

#: ../../None:34:<autosummary>:1 ../../None:36:<autosummary>:1
msgid "Set self[key] to value."
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__delitem__ "
"<abaqus.BasicGeometry.CellArray.CellArray.__delitem__>`\\ \\(key\\, "
"\\/\\)"
msgstr ""

#: ../../None:34:<autosummary>:1 ../../None:36:<autosummary>:1
msgid "Delete self[key]."
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__add__ <abaqus.BasicGeometry.CellArray.CellArray.__add__>`\\ "
"\\(value\\, \\/\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid "Return self+value."
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__mul__ <abaqus.BasicGeometry.CellArray.CellArray.__mul__>`\\ "
"\\(value\\, \\/\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid "Return self*value."
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__rmul__ <abaqus.BasicGeometry.CellArray.CellArray.__rmul__>`\\ "
"\\(value\\, \\/\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid "Return value*self."
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__contains__ "
"<abaqus.BasicGeometry.CellArray.CellArray.__contains__>`\\ \\(key\\, "
"\\/\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid "Return key in self."
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__iadd__ <abaqus.BasicGeometry.CellArray.CellArray.__iadd__>`\\ "
"\\(value\\, \\/\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid "Implement self+=value."
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__imul__ <abaqus.BasicGeometry.CellArray.CellArray.__imul__>`\\ "
"\\(value\\, \\/\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid "Implement self*=value."
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__reversed__ "
"<abaqus.BasicGeometry.CellArray.CellArray.__reversed__>`\\ \\(\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid "Return a reverse iterator over the list."
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__sizeof__ "
"<abaqus.BasicGeometry.CellArray.CellArray.__sizeof__>`\\ \\(\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid "Return the size of the list in memory, in bytes."
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ":py:obj:`clear <abaqus.BasicGeometry.CellArray.CellArray.clear>`\\ \\(\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid "Remove all items from list."
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ":py:obj:`copy <abaqus.BasicGeometry.CellArray.CellArray.copy>`\\ \\(\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid "Return a shallow copy of the list."
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`append <abaqus.BasicGeometry.CellArray.CellArray.append>`\\ "
"\\(object\\, \\/\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid "Append object to the end of the list."
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`insert <abaqus.BasicGeometry.CellArray.CellArray.insert>`\\ "
"\\(index\\, object\\, \\/\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid "Insert object before index."
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`extend <abaqus.BasicGeometry.CellArray.CellArray.extend>`\\ "
"\\(iterable\\, \\/\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid "Extend list by appending elements from the iterable."
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`pop <abaqus.BasicGeometry.CellArray.CellArray.pop>`\\ "
"\\(\\[index\\]\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid "Remove and return item at index (default last)."
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`remove <abaqus.BasicGeometry.CellArray.CellArray.remove>`\\ "
"\\(value\\, \\/\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid "Remove first occurrence of value."
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`index <abaqus.BasicGeometry.CellArray.CellArray.index>`\\ "
"\\(value\\[\\, start\\, stop\\]\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid "Return first index of value."
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`count <abaqus.BasicGeometry.CellArray.CellArray.count>`\\ "
"\\(value\\, \\/\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid "Return number of occurrences of value."
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`reverse <abaqus.BasicGeometry.CellArray.CellArray.reverse>`\\ "
"\\(\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid "Reverse *IN PLACE*."
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`sort <abaqus.BasicGeometry.CellArray.CellArray.sort>`\\ "
"\\(\\*\\[\\, key\\, reverse\\]\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid "Sort the list in ascending order and return None."
msgstr ""

#: ../../None:36:<autosummary>:1 ../../None:4:<autosummary>:1
msgid ""
":py:obj:`__class_getitem__ "
"<abaqus.BasicGeometry.CellArray.CellArray.__class_getitem__>`\\"
msgstr ""

#: ../../None:34:<autosummary>:1 ../../None:36:<autosummary>:1
#: ../../None:4:<autosummary>:1
msgid "See PEP 585"
msgstr ""

#: ../../None:4:<autosummary>:1
msgid ""
":py:obj:`__init_subclass__ "
"<abaqus.BasicGeometry.CellArray.CellArray.__init_subclass__>`\\ "
"\\(\\*args\\, \\*\\*kwargs\\)"
msgstr ""

#: ../../None:4:<autosummary>:1
msgid "This method is called when a class is subclassed."
msgstr ""

#: abaqus.BasicGeometry.CellArray.CellArray
#: abaqus.BasicGeometry.EdgeArray.EdgeArray
#: abaqus.BasicGeometry.FaceArray.FaceArray
#: abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray
#: abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray
#: abaqus.BasicGeometry.ReferencePoints.ReferencePoints
#: abaqus.BasicGeometry.VertexArray.VertexArray of
msgid "Private Data Attributes:"
msgstr ""

#: ../../None:3:<autosummary>:1
msgid ""
":py:obj:`_is_protocol "
"<abaqus.BasicGeometry.CellArray.CellArray._is_protocol>`\\"
msgstr ""

#: abaqus.BasicGeometry.CellArray.CellArray.findAt:1 of
msgid ""
"This method returns the object or objects in the CellArray located at the"
" given coordinates. findAt initially uses the ACIS tolerance of 1E-6. As "
"a result, findAt returns any entity that is at the arbitrary point "
"specified or at a distance of less than 1E-6 from the arbitrary point. If"
" nothing is found, findAt uses the tolerance for imprecise geometry "
"(applicable only for imprecise geometric entities). The arbitrary point "
"must not be shared by a second cell. If two cells intersect or coincide "
"at the arbitrary point, findAt chooses the first cell that it encounters,"
" and you should not rely on the return value being consistent. findAt "
"will always try to find objects among all the cells in the part or "
"assembly instance and will not restrict itself to a subset even if the "
"CellArray represents such subset."
msgstr ""

#: abaqus.BasicGeometry.CellArray.CellArray.findAt:14 of
msgid ""
"Check `CellArray.findAt on help.3ds.com/2017 "
"<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-cellarraypyc.htm?contextscope=all"
"#simaker-cellarrayfindatpyc>`__."
msgstr ""

#: abaqus.BasicGeometry.CellArray.CellArray.findAt:17 of
msgid ""
"A sequence of Floats specifying the **X**-, **Y**-, and **Z**-coordinates"
" of the object to find. `findAt` returns either a Cell object or a "
"sequence of Cell objects based on the type of input.  * If "
"**coordinates** is a sequence of Floats, findAt returns the Cell object "
"at that point.  * If **coordinates** is a sequence of sequence of Floats,"
" findAt returns a sequence of Cell   objects at the given locations. The "
"sequence of sequence of Floats must be a sequence of   sequence of point "
"and normal data, not a sequence of point data. For example::      cells1 "
"= myCrackedBlockInstance.cells.findAt(((5.5, -8.3, 294.2),),"
"                                                  ((12.1, -8.3, 287.8),),"
"                                                  ((14.4, -10.4, "
"285.5),),)"
msgstr ""

#: abaqus.BasicGeometry.CellArray.CellArray.findAt:17 of
msgid ""
"A sequence of Floats specifying the **X**-, **Y**-, and **Z**-coordinates"
" of the object to find. `findAt` returns either a Cell object or a "
"sequence of Cell objects based on the type of input."
msgstr ""

#: abaqus.BasicGeometry.CellArray.CellArray.findAt:21 of
msgid ""
"If **coordinates** is a sequence of Floats, findAt returns the Cell "
"object at that point."
msgstr ""

#: abaqus.BasicGeometry.CellArray.CellArray.findAt:23 of
msgid ""
"If **coordinates** is a sequence of sequence of Floats, findAt returns a "
"sequence of Cell objects at the given locations. The sequence of sequence"
" of Floats must be a sequence of sequence of point and normal data, not a"
" sequence of point data. For example::"
msgstr ""

#: abaqus.BasicGeometry.CellArray.CellArray.findAt:31
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.findAt:28
#: abaqus.BasicGeometry.FaceArray.FaceArray.findAt:36
#: abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.findAt:29
#: abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.findAt:26
#: abaqus.BasicGeometry.VertexArray.VertexArray.findAt:25 of
msgid ""
"A Boolean specifying whether a message is to be printed to the CLI if no "
"entity is found at the specified location. The default value is True."
msgstr ""

#: abaqus.BasicGeometry.CellArray.CellArray.findAt:34 of
msgid "A :py:class:`~abaqus.BasicGeometry.Cell.Cell` object."
msgstr ""

#: abaqus.BasicGeometry.CellArray.CellArray.findAt:35
#: abaqus.BasicGeometry.CellArray.CellArray.getSequenceFromMask:13 of
msgid ":class:`Cell`"
msgstr ""

#: abaqus.BasicGeometry.CellArray.CellArray.getBoundingBox:4
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getBoundingBox:4
#: abaqus.BasicGeometry.VertexArray.VertexArray.getBoundingBox:4 of
msgid ""
"A Dictionary object with the following items:  - **low**: a tuple of "
"three floats representing the minimum **X** -, **Y** -, and **Z** "
"-boundary   values of the bounding box. - **high**: a tuple of three "
"floats representing the maximum **X** -, **Y** -, and **Z** -boundary   "
"values of the bounding box."
msgstr ""

#: abaqus.BasicGeometry.CellArray.CellArray.getBoundingBox:4
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getBoundingBox:4
#: abaqus.BasicGeometry.FaceArray.FaceArray.getBoundingBox:4
#: abaqus.BasicGeometry.VertexArray.VertexArray.getBoundingBox:4 of
msgid "A Dictionary object with the following items:"
msgstr ""

#: abaqus.BasicGeometry.CellArray.CellArray.getBoundingBox:6
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getBoundingBox:6
#: abaqus.BasicGeometry.VertexArray.VertexArray.getBoundingBox:6 of
msgid ""
"**low**: a tuple of three floats representing the minimum **X** -, **Y** "
"-, and **Z** -boundary values of the bounding box."
msgstr ""

#: abaqus.BasicGeometry.CellArray.CellArray.getBoundingBox:8
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getBoundingBox:8
#: abaqus.BasicGeometry.VertexArray.VertexArray.getBoundingBox:8 of
msgid ""
"**high**: a tuple of three floats representing the maximum **X** -, **Y**"
" -, and **Z** -boundary values of the bounding box."
msgstr ""

#: abaqus.BasicGeometry.CellArray.CellArray.getBoundingBox:10
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getBoundingBox:10
#: abaqus.BasicGeometry.VertexArray.VertexArray.getBoundingBox:10 of
msgid ":class:`Dict[str`, :class:`Tuple[float`, :class:`float`, :class:`float]]`"
msgstr ""

#: abaqus.BasicGeometry.CellArray.CellArray.getByBoundingBox:4 of
msgid ""
"Check `CellArray.getByBoundingBox on help.3ds.com/2017 "
"<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-cellarraypyc.htm?contextscope=all"
"#simaker-cellarraygetbyboundingboxpyc>`__."
msgstr ""

#: abaqus.BasicGeometry.CellArray.CellArray.getByBoundingBox:7
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getByBoundingBox:7
#: abaqus.BasicGeometry.FaceArray.FaceArray.getByBoundingBox:7
#: abaqus.BasicGeometry.VertexArray.VertexArray.getByBoundingBox:8 of
msgid "A float specifying the minimum **X**-boundary of the bounding box."
msgstr ""

#: abaqus.BasicGeometry.CellArray.CellArray.getByBoundingBox:9
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getByBoundingBox:9
#: abaqus.BasicGeometry.FaceArray.FaceArray.getByBoundingBox:9
#: abaqus.BasicGeometry.VertexArray.VertexArray.getByBoundingBox:10 of
msgid "A float specifying the minimum **Y**-boundary of the bounding box."
msgstr ""

#: abaqus.BasicGeometry.CellArray.CellArray.getByBoundingBox:11
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getByBoundingBox:11
#: abaqus.BasicGeometry.FaceArray.FaceArray.getByBoundingBox:11
#: abaqus.BasicGeometry.VertexArray.VertexArray.getByBoundingBox:12 of
msgid "A float specifying the minimum **Z**-boundary of the bounding box."
msgstr ""

#: abaqus.BasicGeometry.CellArray.CellArray.getByBoundingBox:13
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getByBoundingBox:13
#: abaqus.BasicGeometry.FaceArray.FaceArray.getByBoundingBox:13
#: abaqus.BasicGeometry.VertexArray.VertexArray.getByBoundingBox:14 of
msgid "A float specifying the maximum **X**-boundary of the bounding box."
msgstr ""

#: abaqus.BasicGeometry.CellArray.CellArray.getByBoundingBox:15
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getByBoundingBox:15
#: abaqus.BasicGeometry.FaceArray.FaceArray.getByBoundingBox:15
#: abaqus.BasicGeometry.VertexArray.VertexArray.getByBoundingBox:16 of
msgid "A float specifying the maximum **Y**-boundary of the bounding box."
msgstr ""

#: abaqus.BasicGeometry.CellArray.CellArray.getByBoundingBox:17
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getByBoundingBox:17
#: abaqus.BasicGeometry.FaceArray.FaceArray.getByBoundingBox:17
#: abaqus.BasicGeometry.VertexArray.VertexArray.getByBoundingBox:18 of
msgid "A float specifying the maximum **Z**-boundary of the bounding box."
msgstr ""

#: abaqus.BasicGeometry.CellArray.CellArray.getByBoundingBox:19
#: abaqus.BasicGeometry.CellArray.CellArray.getByBoundingCylinder:16
#: abaqus.BasicGeometry.CellArray.CellArray.getByBoundingSphere:12 of
msgid ""
"A :py:class:`~abaqus.BasicGeometry.CellArray.CellArray` object, which is "
"a sequence of Cell objects."
msgstr ""

#: abaqus.BasicGeometry.CellArray.CellArray.getByBoundingCylinder:5 of
msgid ""
"Check `CellArray.getByBoundingCylinder on help.3ds.com/2017 "
"<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-cellarraypyc.htm?contextscope=all"
"#simaker-cellarraygetbyboundingcylinderpyc>`__."
msgstr ""

#: abaqus.BasicGeometry.CellArray.CellArray.getByBoundingCylinder:8
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getByBoundingCylinder:8
#: abaqus.BasicGeometry.FaceArray.FaceArray.getByBoundingCylinder:8
#: abaqus.BasicGeometry.VertexArray.VertexArray.getByBoundingCylinder:8 of
msgid ""
"A tuple of the **X**-, **Y**-, and **Z**-coordinates of the center of the"
" first end of the cylinder."
msgstr ""

#: abaqus.BasicGeometry.CellArray.CellArray.getByBoundingCylinder:11
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getByBoundingCylinder:11
#: abaqus.BasicGeometry.FaceArray.FaceArray.getByBoundingCylinder:11
#: abaqus.BasicGeometry.VertexArray.VertexArray.getByBoundingCylinder:11 of
msgid ""
"A tuple of the **X**-, **Y**-, and **Z**-coordinates of the center of the"
" second end of the cylinder."
msgstr ""

#: abaqus.BasicGeometry.CellArray.CellArray.getByBoundingCylinder:14
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getByBoundingCylinder:14
#: abaqus.BasicGeometry.FaceArray.FaceArray.getByBoundingCylinder:14
#: abaqus.BasicGeometry.VertexArray.VertexArray.getByBoundingCylinder:14 of
msgid "A float specifying the radius of the cylinder."
msgstr ""

#: abaqus.BasicGeometry.CellArray.CellArray.getByBoundingSphere:5 of
msgid ""
"Check `CellArray.getByBoundingSphere on help.3ds.com/2017 "
"<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-cellarraypyc.htm?contextscope=all"
"#simaker-cellarraygetbyboundingspherepyc>`__."
msgstr ""

#: abaqus.BasicGeometry.CellArray.CellArray.getByBoundingSphere:8
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getByBoundingSphere:8
#: abaqus.BasicGeometry.FaceArray.FaceArray.getByBoundingSphere:8
#: abaqus.BasicGeometry.VertexArray.VertexArray.getByBoundingSphere:8 of
msgid ""
"A tuple of the **X**-, **Y**-, and **Z**-coordinates of the center of the"
" sphere."
msgstr ""

#: abaqus.BasicGeometry.CellArray.CellArray.getByBoundingSphere:10
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getByBoundingSphere:10
#: abaqus.BasicGeometry.FaceArray.FaceArray.getByBoundingSphere:10
#: abaqus.BasicGeometry.VertexArray.VertexArray.getByBoundingSphere:10 of
msgid "A float specifying the radius of the sphere."
msgstr ""

#: abaqus.BasicGeometry.CellArray.CellArray.getMask:3
#: abaqus.BasicGeometry.CellArray.CellArray.getSequenceFromMask:10
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getMask:3
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getSequenceFromMask:10
#: abaqus.BasicGeometry.FaceArray.FaceArray.getMask:3
#: abaqus.BasicGeometry.FaceArray.FaceArray.getSequenceFromMask:10
#: abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.getMask:3
#: abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.getSequenceFromMask:10
#: abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.getMask:3
#: abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.getSequenceFromMask:10
#: abaqus.BasicGeometry.VertexArray.VertexArray.getMask:3
#: abaqus.BasicGeometry.VertexArray.VertexArray.getSequenceFromMask:10 of
msgid "A String specifying the object or objects."
msgstr ""

#: abaqus.BasicGeometry.CellArray.CellArray.getMask:4
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getMask:4
#: abaqus.BasicGeometry.FaceArray.FaceArray.getMask:4
#: abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.getMask:4
#: abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.getMask:4
#: abaqus.BasicGeometry.VertexArray.VertexArray.getMask:4 of
msgid ":class:`str`"
msgstr ""

#: abaqus.BasicGeometry.CellArray.CellArray.getSequenceFromMask:1 of
msgid ""
"This method returns the object or objects in the CellArray identified "
"using the specified **mask**. This command is generated when the "
"JournalOptions are set to COMPRESSEDINDEX. When large number of objects "
"are involved, this method is highly efficient."
msgstr ""

#: abaqus.BasicGeometry.CellArray.CellArray.getSequenceFromMask:7 of
msgid ""
"Check `CellArray.getSequenceFromMask on help.3ds.com/2017 "
"<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-cellarraypyc.htm?contextscope=all"
"#simaker-cellarraygetsequencefrommaskpyc>`__."
msgstr ""

#: abaqus.BasicGeometry.CellArray.CellArray.getSequenceFromMask:12 of
msgid ""
"A :py:class:`~abaqus.BasicGeometry.Cell.Cell` object or a sequence of "
"Cell objects."
msgstr ""

#: abaqus.BasicGeometry.CellArray.CellArray.getSequenceFromMask
#: abaqus.BasicGeometry.Edge.Edge.getCurvature
#: abaqus.BasicGeometry.Edge.Edge.getRadius
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getSequenceFromMask
#: abaqus.BasicGeometry.Face.Face.getNormal
#: abaqus.BasicGeometry.FaceArray.FaceArray.getClosest
#: abaqus.BasicGeometry.IgnoredEdge.IgnoredEdge.getCurvature
#: abaqus.BasicGeometry.IgnoredEdge.IgnoredEdge.getRadius
#: abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.getClosest
#: abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.getClosest
#: abaqus.BasicGeometry.VertexArray.VertexArray.getClosest of
msgid "Raises"
msgstr ""

#: abaqus.BasicGeometry.CellArray.CellArray.getSequenceFromMask:15
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getSequenceFromMask:15
#: abaqus.BasicGeometry.FaceArray.FaceArray.getClosest:29
#: abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.getClosest:29
#: abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.getClosest:30
#: abaqus.BasicGeometry.VertexArray.VertexArray.getClosest:29 of
msgid "An exception occurs if the resulting sequence is empty."
msgstr ""

#: ../../reference/mdb/model/part_assembly/geometry.rst:27
msgid "Edge"
msgstr ""

#: abaqus.BasicGeometry.Edge.Edge:1 of
msgid "Edges are one-dimensional regions of geometry."
msgstr ""

#: abaqus.BasicGeometry.Edge.Edge:33 of
msgid ""
"Check `Edge on help.3ds.com/2017 "
"<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-edgepyc.htm?contextscope=all>`__."
msgstr ""

#: ../../None:7:<autosummary>:1
msgid ":py:obj:`index <abaqus.BasicGeometry.Edge.Edge.index>`\\"
msgstr ""

#: ../../None:7:<autosummary>:1 ../../docstring
#: abaqus.BasicGeometry.Edge.Edge.index:1 of
msgid "An Int specifying the index of the edge in the EdgeArray."
msgstr ""

#: ../../None:7:<autosummary>:1
msgid ":py:obj:`isReferenceRep <abaqus.BasicGeometry.Edge.Edge.isReferenceRep>`\\"
msgstr ""

#: ../../None:7:<autosummary>:1 ../../docstring
#: abaqus.BasicGeometry.Edge.Edge.isReferenceRep:1 of
msgid ""
"A Boolean specifying whether the edge belongs to the reference "
"representation of the Part or Instance."
msgstr ""

#: ../../None:7:<autosummary>:1
msgid ":py:obj:`pointOn <abaqus.BasicGeometry.Edge.Edge.pointOn>`\\"
msgstr ""

#: ../../None:4:<autosummary>:1 ../../None:7:<autosummary>:1 ../../docstring
#: abaqus.BasicGeometry.Edge.Edge.pointOn:1
#: abaqus.BasicGeometry.IgnoredEdge.IgnoredEdge.pointOn:1 of
msgid ""
"A tuple of Floats specifying the **X**-, **Y**-, and **Z**-coordinates of"
" a point located on the edge."
msgstr ""

#: ../../None:7:<autosummary>:1
msgid ":py:obj:`featureName <abaqus.BasicGeometry.Edge.Edge.featureName>`\\"
msgstr ""

#: ../../None:7:<autosummary>:1 ../../docstring
#: abaqus.BasicGeometry.Edge.Edge.featureName:1 of
msgid ""
"A tuple of Floats specifying the name of the feature that created this "
"edge."
msgstr ""

#: ../../None:7:<autosummary>:1
msgid ":py:obj:`instanceName <abaqus.BasicGeometry.Edge.Edge.instanceName>`\\"
msgstr ""

#: ../../None:7:<autosummary>:1 ../../docstring
#: abaqus.BasicGeometry.Edge.Edge.instanceName:1 of
msgid ""
"A tuple of Floats specifying the name of the part instance for this edge "
"(if applicable)."
msgstr ""

#: ../../None:12:<autosummary>:1
msgid ""
":py:obj:`isTangentFlipped "
"<abaqus.BasicGeometry.Edge.Edge.isTangentFlipped>`\\ \\(\\)"
msgstr ""

#: ../../None:12:<autosummary>:1
#: abaqus.BasicGeometry.Edge.Edge.isTangentFlipped:1 of
msgid ""
"This method determines whether the tangent to the edge is flipped from "
"its default direction by the use of the flipTangent method on a Part "
"object."
msgstr ""

#: ../../None:12:<autosummary>:1
msgid ""
":py:obj:`getCurvature <abaqus.BasicGeometry.Edge.Edge.getCurvature>`\\ "
"\\(parameter\\, point\\)"
msgstr ""

#: ../../None:12:<autosummary>:1 abaqus.BasicGeometry.Edge.Edge.getCurvature:1
#: of
msgid "This method returns curvature information at a location on the edge."
msgstr ""

#: ../../None:12:<autosummary>:1
msgid ":py:obj:`getFaces <abaqus.BasicGeometry.Edge.Edge.getFaces>`\\ \\(\\)"
msgstr ""

#: ../../None:12:<autosummary>:1 abaqus.BasicGeometry.Edge.Edge.getFaces:1 of
msgid ""
"This method returns a sequence consisting of the face ids of the faces "
"which share this edge."
msgstr ""

#: ../../None:12:<autosummary>:1
msgid ""
":py:obj:`getAdjacentEdges "
"<abaqus.BasicGeometry.Edge.Edge.getAdjacentEdges>`\\ \\(\\)"
msgstr ""

#: ../../None:12:<autosummary>:1
#: abaqus.BasicGeometry.Edge.Edge.getAdjacentEdges:1 of
msgid ""
"This method returns an array of Edge objects that share at least one "
"vertex of the edge."
msgstr ""

#: ../../None:12:<autosummary>:1
msgid ""
":py:obj:`getEdgesByEdgeAngle "
"<abaqus.BasicGeometry.Edge.Edge.getEdgesByEdgeAngle>`\\ \\(angle\\)"
msgstr ""

#: ../../None:12:<autosummary>:1
#: abaqus.BasicGeometry.Edge.Edge.getEdgesByEdgeAngle:1 of
msgid ""
"This method returns an array of Edge objects that are obtained by "
"recursively finding adjacent edges that are at an angle of less than or "
"equal to the specified face angle."
msgstr ""

#: ../../None:12:<autosummary>:1
msgid ":py:obj:`getNodes <abaqus.BasicGeometry.Edge.Edge.getNodes>`\\ \\(\\)"
msgstr ""

#: ../../None:12:<autosummary>:1 abaqus.BasicGeometry.Edge.Edge.getNodes:1 of
msgid ""
"This method returns an array of node objects that are associated with the"
" edge."
msgstr ""

#: ../../None:12:<autosummary>:1
msgid ""
":py:obj:`getElements <abaqus.BasicGeometry.Edge.Edge.getElements>`\\ "
"\\(\\)"
msgstr ""

#: ../../None:12:<autosummary>:1 abaqus.BasicGeometry.Edge.Edge.getElements:1
#: of
msgid ""
"This method returns an array of element objects that are associated with "
"the edge."
msgstr ""

#: ../../None:12:<autosummary>:1
msgid ":py:obj:`getRadius <abaqus.BasicGeometry.Edge.Edge.getRadius>`\\ \\(\\)"
msgstr ""

#: ../../None:12:<autosummary>:1 abaqus.BasicGeometry.Edge.Edge.getRadius:1 of
msgid "This method returns the radius of circular edges."
msgstr ""

#: ../../None:12:<autosummary>:1
msgid ""
":py:obj:`getSize <abaqus.BasicGeometry.Edge.Edge.getSize>`\\ "
"\\(\\[printResults\\]\\)"
msgstr ""

#: ../../None:12:<autosummary>:1 ../../None:5:<autosummary>:1
#: abaqus.BasicGeometry.Edge.Edge.getSize:1
#: abaqus.BasicGeometry.IgnoredEdge.IgnoredEdge.getSize:1 of
msgid "This method returns a Float indicating the length of the edge."
msgstr ""

#: ../../None:12:<autosummary>:1
msgid ""
":py:obj:`getVertices <abaqus.BasicGeometry.Edge.Edge.getVertices>`\\ "
"\\(\\)"
msgstr ""

#: ../../None:12:<autosummary>:1
msgid ""
"This method returns a sequence of indices of the vertices that bound this"
" edge."
msgstr ""

#: abaqus.BasicGeometry.Edge.Edge.getAdjacentEdges:3
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getByBoundingBox:19
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getByBoundingCylinder:16
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getByBoundingSphere:12 of
msgid ""
"An :py:class:`~abaqus.BasicGeometry.EdgeArray.EdgeArray` object, which is"
" a sequence of Edge objects."
msgstr ""

#: abaqus.BasicGeometry.Edge.Edge.getAdjacentEdges:4
#: abaqus.BasicGeometry.Edge.Edge.getEdgesByEdgeAngle:11
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getByBoundingBox:20
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getByBoundingCylinder:17
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getByBoundingSphere:13 of
msgid ":class:`EdgeArray`"
msgstr ""

#: abaqus.BasicGeometry.Edge.Edge.getCurvature:4 of
msgid ""
"Check `Edge.getCurvature on help.3ds.com/2017 "
"<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-edgepyc.htm?contextscope=all"
"#simaker-edgegetcurvaturepyc>`__."
msgstr ""

#: abaqus.BasicGeometry.Edge.Edge.getCurvature:7 of
msgid ""
"A Float specifying the normalized parameter location on the edge where "
"the curvature is to be computed. This argument is mutually exclusive with"
" the argument **point**."
msgstr ""

#: abaqus.BasicGeometry.Edge.Edge.getCurvature:10 of
msgid ""
"A tuple of **X**-, **Y**-, and **Z**-coordinates of a point at which the "
"curvature is to be computed. If **point** does not lie on the edge an "
"attempt is made to project it onto the edge and use the projected point."
msgstr ""

#: abaqus.BasicGeometry.Edge.Edge.getCurvature:14 of
msgid ""
"A dictionary with keys 'evaluationPoint', 'curvature', 'radius', and "
"'tangent', where 'evaluationPoint' specifies the location at which the "
"curvature was computed; 'curvature' specifies the curvature vector at "
"that location; 'radius' is the radius of curvature; and 'tangent' "
"specifies the tangent to the edge at that location."
msgstr ""

#: abaqus.BasicGeometry.Edge.Edge.getCurvature:18
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getClosest:27
#: abaqus.BasicGeometry.Face.Face.getCurvature:23
#: abaqus.BasicGeometry.FaceArray.FaceArray.getClosest:27
#: abaqus.BasicGeometry.IgnoredEdge.IgnoredEdge.getCurvature:19
#: abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.getClosest:27
#: abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.getClosest:28
#: abaqus.BasicGeometry.VertexArray.VertexArray.getClosest:27 of
msgid ":class:`dict`"
msgstr ""

#: abaqus.BasicGeometry.Edge.Edge.getEdgesByEdgeAngle:5 of
msgid ""
"Check `Edge.getEdgesByEdgeAngle on help.3ds.com/2017 "
"<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-edgepyc.htm?contextscope=all"
"#simaker-edgegetedgesbyedgeanglepyc>`__."
msgstr ""

#: abaqus.BasicGeometry.Edge.Edge.getEdgesByEdgeAngle:8 of
msgid "A float specifying the value of the face angle in degrees."
msgstr ""

#: abaqus.BasicGeometry.Edge.Edge.getEdgesByEdgeAngle:10 of
msgid ""
"An :py:class:`~abaqus.BasicGeometry.EdgeArray.EdgeArray` object, which is"
" a sequence of Edgeobjects."
msgstr ""

#: abaqus.BasicGeometry.Edge.Edge.getNodes:3 of
msgid ""
"A :py:class:`~abaqus.Mesh.MeshNodeArray.MeshNodeArray` object, which is a"
" sequence of MeshNode objects."
msgstr ""

#: abaqus.BasicGeometry.Edge.Edge.getRadius:3
#: abaqus.BasicGeometry.IgnoredEdge.IgnoredEdge.getRadius:3 of
msgid "A Float specifying the radius."
msgstr ""

#: abaqus.BasicGeometry.Edge.Edge.getSize:4 of
msgid ""
"Check `Edge.getSize on help.3ds.com/2017 "
"<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-edgepyc.htm?contextscope=all"
"#simaker-edgegetsizepyc>`__."
msgstr ""

#: abaqus.BasicGeometry.Edge.Edge.getSize:7
#: abaqus.BasicGeometry.IgnoredEdge.IgnoredEdge.getSize:7 of
msgid "A Bool specifying whether verbose output is printed. The default is True."
msgstr ""

#: abaqus.BasicGeometry.Edge.Edge.getVertices:1 of
msgid ""
"This method returns a sequence of indices of the vertices that bound this"
" edge. The first index refers to the vertex where the normalized curve "
"parameter = 0.0, and the second index refers to the vertex where the "
"normalized curve parameter = 1.0. If the edge is a closed curve, only one"
" vertex index is returned."
msgstr ""

#: abaqus.BasicGeometry.Edge.Edge.isTangentFlipped:4 of
msgid "A Boolean value of True if the tangent is flipped and False if not."
msgstr ""

#: abaqus.BasicGeometry.Edge.Edge.isTangentFlipped:5
#: abaqus.BasicGeometry.Face.Face.isNormalFlipped:5 of
msgid ":class:`Boolean`"
msgstr ""

#: ../../reference/mdb/model/part_assembly/geometry.rst:35
msgid "EdgeArray"
msgstr ""

#: abaqus.BasicGeometry.EdgeArray.EdgeArray:1 of
msgid ""
"The EdgeArray is a sequence of Edge objects. If the part is modified, "
"then EdgeArray must be updated for that part."
msgstr ""

#: abaqus.BasicGeometry.EdgeArray.EdgeArray:34 of
msgid ""
"Check `EdgeArray on help.3ds.com/2017 "
"<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-edgearraypyc.htm?contextscope=all>`__."
msgstr ""

#: ../../None:11:<autosummary>:1 ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__init__ <abaqus.BasicGeometry.EdgeArray.EdgeArray.__init__>`\\ "
"\\(edges\\)"
msgstr ""

#: ../../None:11:<autosummary>:1 ../../None:36:<autosummary>:1
msgid "This method creates an EdgeArray object."
msgstr ""

#: ../../None:11:<autosummary>:1
msgid ""
":py:obj:`findAt <abaqus.BasicGeometry.EdgeArray.EdgeArray.findAt>`\\ "
"\\(coordinates\\[\\, printWarning\\]\\)"
msgstr ""

#: ../../None:11:<autosummary>:1
msgid ""
"This method returns the object or objects in the EdgeArray located at the"
" given coordinates."
msgstr ""

#: ../../None:11:<autosummary>:1
msgid ""
":py:obj:`getClosest "
"<abaqus.BasicGeometry.EdgeArray.EdgeArray.getClosest>`\\ "
"\\(coordinates\\[\\, searchTolerance\\]\\)"
msgstr ""

#: ../../None:11:<autosummary>:1
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getClosest:1 of
msgid ""
"This method returns an object or objects in the EdgeArray closest to the "
"given set of points, where the given points need not lie on the edges in "
"the EdgeArray."
msgstr ""

#: ../../None:11:<autosummary>:1
msgid ""
":py:obj:`getSequenceFromMask "
"<abaqus.BasicGeometry.EdgeArray.EdgeArray.getSequenceFromMask>`\\ "
"\\(mask\\)"
msgstr ""

#: ../../None:11:<autosummary>:1
msgid ""
"This method returns the object or objects in the EdgeArray identified "
"using the specified **mask**."
msgstr ""

#: ../../None:11:<autosummary>:1
msgid ""
":py:obj:`getMask <abaqus.BasicGeometry.EdgeArray.EdgeArray.getMask>`\\ "
"\\(\\)"
msgstr ""

#: ../../None:11:<autosummary>:1
msgid ""
":py:obj:`getByBoundingBox "
"<abaqus.BasicGeometry.EdgeArray.EdgeArray.getByBoundingBox>`\\ "
"\\(\\[xMin\\, yMin\\, zMin\\, xMax\\, ...\\]\\)"
msgstr ""

#: ../../None:11:<autosummary>:1
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getByBoundingBox:1 of
msgid ""
"This method returns an array of edge objects that lie within the "
"specified bounding box."
msgstr ""

#: ../../None:11:<autosummary>:1
msgid ""
":py:obj:`getByBoundingCylinder "
"<abaqus.BasicGeometry.EdgeArray.EdgeArray.getByBoundingCylinder>`\\ "
"\\(center1\\, center2\\, radius\\)"
msgstr ""

#: ../../None:11:<autosummary>:1
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getByBoundingCylinder:1 of
msgid ""
"This method returns an array of edge objects that lie within the "
"specified bounding cylinder."
msgstr ""

#: ../../None:11:<autosummary>:1
msgid ""
":py:obj:`getByBoundingSphere "
"<abaqus.BasicGeometry.EdgeArray.EdgeArray.getByBoundingSphere>`\\ "
"\\(center\\, radius\\)"
msgstr ""

#: ../../None:11:<autosummary>:1
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getByBoundingSphere:1 of
msgid ""
"This method returns an array of edge objects that lie within the "
"specified bounding sphere."
msgstr ""

#: ../../None:11:<autosummary>:1
msgid ""
":py:obj:`getBoundingBox "
"<abaqus.BasicGeometry.EdgeArray.EdgeArray.getBoundingBox>`\\ \\(\\)"
msgstr ""

#: ../../None:11:<autosummary>:1
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getBoundingBox:1 of
msgid ""
"This method returns a dictionary of two tuples representing minimum and "
"maximum boundary values of the bounding box of the minimum size "
"containing the edge sequence."
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__repr__ <abaqus.BasicGeometry.EdgeArray.EdgeArray.__repr__>`\\ "
"\\(\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__getattribute__ "
"<abaqus.BasicGeometry.EdgeArray.EdgeArray.__getattribute__>`\\ \\(name\\,"
" \\/\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__lt__ <abaqus.BasicGeometry.EdgeArray.EdgeArray.__lt__>`\\ "
"\\(value\\, \\/\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__le__ <abaqus.BasicGeometry.EdgeArray.EdgeArray.__le__>`\\ "
"\\(value\\, \\/\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__eq__ <abaqus.BasicGeometry.EdgeArray.EdgeArray.__eq__>`\\ "
"\\(value\\, \\/\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__ne__ <abaqus.BasicGeometry.EdgeArray.EdgeArray.__ne__>`\\ "
"\\(value\\, \\/\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__gt__ <abaqus.BasicGeometry.EdgeArray.EdgeArray.__gt__>`\\ "
"\\(value\\, \\/\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__ge__ <abaqus.BasicGeometry.EdgeArray.EdgeArray.__ge__>`\\ "
"\\(value\\, \\/\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__iter__ <abaqus.BasicGeometry.EdgeArray.EdgeArray.__iter__>`\\ "
"\\(\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__len__ <abaqus.BasicGeometry.EdgeArray.EdgeArray.__len__>`\\ "
"\\(\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__getitem__ "
"<abaqus.BasicGeometry.EdgeArray.EdgeArray.__getitem__>`\\"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__setitem__ "
"<abaqus.BasicGeometry.EdgeArray.EdgeArray.__setitem__>`\\ \\(key\\, "
"value\\, \\/\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__delitem__ "
"<abaqus.BasicGeometry.EdgeArray.EdgeArray.__delitem__>`\\ \\(key\\, "
"\\/\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__add__ <abaqus.BasicGeometry.EdgeArray.EdgeArray.__add__>`\\ "
"\\(value\\, \\/\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__mul__ <abaqus.BasicGeometry.EdgeArray.EdgeArray.__mul__>`\\ "
"\\(value\\, \\/\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__rmul__ <abaqus.BasicGeometry.EdgeArray.EdgeArray.__rmul__>`\\ "
"\\(value\\, \\/\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__contains__ "
"<abaqus.BasicGeometry.EdgeArray.EdgeArray.__contains__>`\\ \\(key\\, "
"\\/\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__iadd__ <abaqus.BasicGeometry.EdgeArray.EdgeArray.__iadd__>`\\ "
"\\(value\\, \\/\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__imul__ <abaqus.BasicGeometry.EdgeArray.EdgeArray.__imul__>`\\ "
"\\(value\\, \\/\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__reversed__ "
"<abaqus.BasicGeometry.EdgeArray.EdgeArray.__reversed__>`\\ \\(\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__sizeof__ "
"<abaqus.BasicGeometry.EdgeArray.EdgeArray.__sizeof__>`\\ \\(\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ":py:obj:`clear <abaqus.BasicGeometry.EdgeArray.EdgeArray.clear>`\\ \\(\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ":py:obj:`copy <abaqus.BasicGeometry.EdgeArray.EdgeArray.copy>`\\ \\(\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`append <abaqus.BasicGeometry.EdgeArray.EdgeArray.append>`\\ "
"\\(object\\, \\/\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`insert <abaqus.BasicGeometry.EdgeArray.EdgeArray.insert>`\\ "
"\\(index\\, object\\, \\/\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`extend <abaqus.BasicGeometry.EdgeArray.EdgeArray.extend>`\\ "
"\\(iterable\\, \\/\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`pop <abaqus.BasicGeometry.EdgeArray.EdgeArray.pop>`\\ "
"\\(\\[index\\]\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`remove <abaqus.BasicGeometry.EdgeArray.EdgeArray.remove>`\\ "
"\\(value\\, \\/\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`index <abaqus.BasicGeometry.EdgeArray.EdgeArray.index>`\\ "
"\\(value\\[\\, start\\, stop\\]\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`count <abaqus.BasicGeometry.EdgeArray.EdgeArray.count>`\\ "
"\\(value\\, \\/\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`reverse <abaqus.BasicGeometry.EdgeArray.EdgeArray.reverse>`\\ "
"\\(\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`sort <abaqus.BasicGeometry.EdgeArray.EdgeArray.sort>`\\ "
"\\(\\*\\[\\, key\\, reverse\\]\\)"
msgstr ""

#: ../../None:36:<autosummary>:1 ../../None:4:<autosummary>:1
msgid ""
":py:obj:`__class_getitem__ "
"<abaqus.BasicGeometry.EdgeArray.EdgeArray.__class_getitem__>`\\"
msgstr ""

#: ../../None:4:<autosummary>:1
msgid ""
":py:obj:`__init_subclass__ "
"<abaqus.BasicGeometry.EdgeArray.EdgeArray.__init_subclass__>`\\ "
"\\(\\*args\\, \\*\\*kwargs\\)"
msgstr ""

#: ../../None:3:<autosummary>:1
msgid ""
":py:obj:`_is_protocol "
"<abaqus.BasicGeometry.EdgeArray.EdgeArray._is_protocol>`\\"
msgstr ""

#: abaqus.BasicGeometry.EdgeArray.EdgeArray.findAt:1 of
msgid ""
"This method returns the object or objects in the EdgeArray located at the"
" given coordinates. findAt initially uses the ACIS tolerance of 1E-6. As "
"a result, findAt returns any edge that is at the arbitrary point "
"specified or at a distance of less than 1E-6 from the arbitrary point. If"
" nothing is found, findAt uses the tolerance for imprecise geometry "
"(applicable only for imprecise geometric entities). The arbitrary point "
"must not be shared by a second edge. If two edges intersect or coincide "
"at the arbitrary point, findAt chooses the first edge that it encounters,"
" and you should not rely on the return value being consistent. findAt "
"will always try to find objects among all the edges in the part or "
"assembly instance and will not restrict itself to a subset even if the "
"EdgeArray represents such subset."
msgstr ""

#: abaqus.BasicGeometry.EdgeArray.EdgeArray.findAt:15 of
msgid ""
"Check `EdgeArray.findAt on help.3ds.com/2017 "
"<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-edgearraypyc.htm?contextscope=all"
"#simaker-edgearrayfindatpyc>`__."
msgstr ""

#: abaqus.BasicGeometry.EdgeArray.EdgeArray.findAt:18 of
msgid ""
"A sequence of Floats specifying the **X**-, **Y**-, and **Z**-coordinates"
" of the object to find. findAt returns either an Edge object or a "
"sequence of Edge objects based on the type of input. If **coordinates** "
"is a sequence of Floats, findAt returns the Edge object at that point. If"
" you omit the **coordinates** keyword argument, findAt accepts as "
"arguments a sequence of sequence of floats in the following format::"
"      edges = e.findAt(((20.19686, -169.513997, 27.798593), ),"
"                      ((19.657627, -167.295749, 27.056402), ),"
"                      ((18.274129, -157.144741, 25.15218), ))"
msgstr ""

#: abaqus.BasicGeometry.EdgeArray.EdgeArray.findAt:18 of
msgid ""
"A sequence of Floats specifying the **X**-, **Y**-, and **Z**-coordinates"
" of the object to find. findAt returns either an Edge object or a "
"sequence of Edge objects based on the type of input. If **coordinates** "
"is a sequence of Floats, findAt returns the Edge object at that point. If"
" you omit the **coordinates** keyword argument, findAt accepts as "
"arguments a sequence of sequence of floats in the following format::"
msgstr ""

#: abaqus.BasicGeometry.EdgeArray.EdgeArray.findAt:31
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getSequenceFromMask:12 of
msgid ""
"An :py:class:`~abaqus.BasicGeometry.Edge.Edge` object or a sequence of "
"Edge objects."
msgstr ""

#: abaqus.BasicGeometry.EdgeArray.EdgeArray.findAt:32
#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getSequenceFromMask:13 of
msgid ":class:`Edge`"
msgstr ""

#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getByBoundingBox:4 of
msgid ""
"Check `EdgeArray.getByBoundingBox on help.3ds.com/2017 "
"<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-edgearraypyc.htm?contextscope=all"
"#simaker-edgearraygetbyboundingboxpyc>`__."
msgstr ""

#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getByBoundingCylinder:5 of
msgid ""
"Check `EdgeArray.getByBoundingCylinder on help.3ds.com/2017 "
"<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-edgearraypyc.htm?contextscope=all"
"#simaker-edgearraygetbyboundingcylinderpyc>`__."
msgstr ""

#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getByBoundingSphere:5 of
msgid ""
"Check `EdgeArray.getByBoundingSphere on help.3ds.com/2017 "
"<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-edgearraypyc.htm?contextscope=all"
"#simaker-edgearraygetbyboundingspherepyc>`__."
msgstr ""

#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getClosest:5 of
msgid ""
"Check `EdgeArray.getClosest on help.3ds.com/2017 "
"<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-edgearraypyc.htm?contextscope=all"
"#simaker-edgearraygetclosestpyc>`__."
msgstr ""

#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getClosest:8 of
msgid ""
"A sequence of a sequence of floats, where each sequence of floats "
"describes the **X**-, **Y**-, and **Z**- coordinates of a point::      "
">>> r=e.getClosest(coordinates=((20.0, 20.0, 10.0), (-1.0, -15.0, 15), ))"
"     >>> r.keys()     [0, 1]     >>> r[0]     "
"(mdb.models['Model-1'].parts['Part-1'].edges[3], (15.7090625762939, 20.0,"
" 10.0))"
msgstr ""

#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getClosest:8 of
msgid ""
"A sequence of a sequence of floats, where each sequence of floats "
"describes the **X**-, **Y**-, and **Z**- coordinates of a point::"
msgstr ""

#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getClosest:17
#: abaqus.BasicGeometry.FaceArray.FaceArray.getClosest:17
#: abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.getClosest:17
#: abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.getClosest:18
#: abaqus.BasicGeometry.VertexArray.VertexArray.getClosest:17 of
msgid ""
"A double specifying the distance within which the closest object must "
"lie. The default value is half of the parent part/instance size."
msgstr ""

#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getClosest:20 of
msgid ""
"This method returns a dictionary object. The key to the dictionary object"
" is the position of the input point in the tuple specified in the "
"**coordinates** starting at index 0. If a closest edge could be found "
"then the value is a sequence consisting of two objects. The first object "
"in the sequence is an Edge that is close to the input point referred to "
"by the key. The second object in the sequence is a sequence of floats "
"that specifies the **X**-, **Y**-, and **Z**- location of the closest "
"point on the Edge to the given point. See program listing above."
msgstr ""

#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getSequenceFromMask:1 of
msgid ""
"This method returns the object or objects in the EdgeArray identified "
"using the specified **mask**. This command is generated when the "
"JournalOptions are set to COMPRESSEDINDEX. When a large number of objects"
" are involved, this method is highly efficient."
msgstr ""

#: abaqus.BasicGeometry.EdgeArray.EdgeArray.getSequenceFromMask:7 of
msgid ""
"Check `EdgeArray.getSequenceFromMask on help.3ds.com/2017 "
"<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-edgearraypyc.htm?contextscope=all"
"#simaker-edgearraygetsequencefrommaskpyc>`__."
msgstr ""

#: ../../reference/mdb/model/part_assembly/geometry.rst:43
msgid "Face"
msgstr ""

#: abaqus.BasicGeometry.Face.Face:1 of
msgid "Faces are two-dimensional regions of geometry."
msgstr ""

#: abaqus.BasicGeometry.Face.Face:31 of
msgid ""
"Check `Face on help.3ds.com/2017 "
"<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-facepyc.htm?contextscope=all>`__."
msgstr ""

#: ../../None:7:<autosummary>:1
msgid ":py:obj:`index <abaqus.BasicGeometry.Face.Face.index>`\\"
msgstr ""

#: ../../None:7:<autosummary>:1 ../../docstring
#: abaqus.BasicGeometry.Face.Face.index:1 of
msgid "An Int specifying the index of the face in the FaceArray."
msgstr ""

#: ../../None:7:<autosummary>:1
msgid ":py:obj:`isReferenceRep <abaqus.BasicGeometry.Face.Face.isReferenceRep>`\\"
msgstr ""

#: ../../None:7:<autosummary>:1 ../../docstring
#: abaqus.BasicGeometry.Face.Face.isReferenceRep:1 of
msgid ""
"A Boolean specifying whether the face belongs to the reference "
"representation of the Part or Instance."
msgstr ""

#: ../../None:7:<autosummary>:1
msgid ":py:obj:`pointOn <abaqus.BasicGeometry.Face.Face.pointOn>`\\"
msgstr ""

#: ../../None:7:<autosummary>:1
msgid "A tuple of tuples of Floats specifying the coordinates."
msgstr ""

#: ../../None:7:<autosummary>:1
msgid ":py:obj:`featureName <abaqus.BasicGeometry.Face.Face.featureName>`\\"
msgstr ""

#: ../../None:7:<autosummary>:1 ../../docstring
#: abaqus.BasicGeometry.Face.Face.featureName:1 of
msgid ""
"A tuple of Floats specifying the name of the feature that created this "
"face."
msgstr ""

#: ../../None:7:<autosummary>:1
msgid ":py:obj:`instanceName <abaqus.BasicGeometry.Face.Face.instanceName>`\\"
msgstr ""

#: ../../None:7:<autosummary>:1 ../../docstring
#: abaqus.BasicGeometry.Face.Face.instanceName:1 of
msgid ""
"A tuple of Floats specifying the name of the part instance for this face "
"(if applicable)."
msgstr ""

#: ../../None:16:<autosummary>:1
msgid ""
":py:obj:`getCentroid <abaqus.BasicGeometry.Face.Face.getCentroid>`\\ "
"\\(\\)"
msgstr ""

#: ../../None:16:<autosummary>:1 abaqus.BasicGeometry.Face.Face.getCentroid:1
#: of
msgid "This method returns the centroid of a face."
msgstr ""

#: ../../None:16:<autosummary>:1
msgid ""
":py:obj:`getCurvature <abaqus.BasicGeometry.Face.Face.getCurvature>`\\ "
"\\(point\\, uParam\\, vParam\\)"
msgstr ""

#: ../../None:16:<autosummary>:1 abaqus.BasicGeometry.Face.Face.getCurvature:1
#: of
msgid ""
"This method returns information about the curvature at a location on the "
"face."
msgstr ""

#: ../../None:16:<autosummary>:1
msgid ""
":py:obj:`getElements <abaqus.BasicGeometry.Face.Face.getElements>`\\ "
"\\(\\)"
msgstr ""

#: ../../None:16:<autosummary>:1 abaqus.BasicGeometry.Face.Face.getElements:1
#: of
msgid ""
"This method returns an array of element objects that are associated with "
"the face."
msgstr ""

#: ../../None:16:<autosummary>:1
msgid ""
":py:obj:`getElementFaces "
"<abaqus.BasicGeometry.Face.Face.getElementFaces>`\\ \\(\\[faceSide\\]\\)"
msgstr ""

#: ../../None:16:<autosummary>:1
msgid "This method returns an array of mesh face objects."
msgstr ""

#: ../../None:16:<autosummary>:1
msgid ""
":py:obj:`getNodes <abaqus.BasicGeometry.Face.Face.getNodes>`\\ "
"\\(\\[faceSide\\]\\)"
msgstr ""

#: ../../None:16:<autosummary>:1
msgid "This method returns an array of mesh node objects."
msgstr ""

#: ../../None:16:<autosummary>:1
msgid ""
":py:obj:`getNormal <abaqus.BasicGeometry.Face.Face.getNormal>`\\ "
"\\(\\[point\\]\\)"
msgstr ""

#: ../../None:16:<autosummary>:1
msgid ""
"This method returns the normal to a face at the location specified by the"
" **pointOn** member."
msgstr ""

#: ../../None:16:<autosummary>:1
msgid ""
":py:obj:`getSize <abaqus.BasicGeometry.Face.Face.getSize>`\\ "
"\\(\\[printResults\\]\\)"
msgstr ""

#: ../../None:16:<autosummary>:1 abaqus.BasicGeometry.Face.Face.getSize:1 of
msgid "This method returns a Float indicating the area of the face."
msgstr ""

#: ../../None:16:<autosummary>:1
msgid ":py:obj:`getEdges <abaqus.BasicGeometry.Face.Face.getEdges>`\\ \\(\\)"
msgstr ""

#: ../../None:16:<autosummary>:1 abaqus.BasicGeometry.Face.Face.getEdges:1 of
msgid ""
"This method returns a sequence consisting of the edge ids of the edges on"
" the face."
msgstr ""

#: ../../None:16:<autosummary>:1
msgid ""
":py:obj:`getVertices <abaqus.BasicGeometry.Face.Face.getVertices>`\\ "
"\\(\\)"
msgstr ""

#: ../../None:16:<autosummary>:1 abaqus.BasicGeometry.Face.Face.getVertices:1
#: of
msgid ""
"This method returns a sequence consisting of the vertex ids of the "
"vertices of the face."
msgstr ""

#: ../../None:16:<autosummary>:1
msgid ":py:obj:`getCells <abaqus.BasicGeometry.Face.Face.getCells>`\\ \\(\\)"
msgstr ""

#: ../../None:16:<autosummary>:1 abaqus.BasicGeometry.Face.Face.getCells:1 of
msgid ""
"This method returns a sequence consisting of the cell ids of the cells to"
" which this face belongs."
msgstr ""

#: ../../None:16:<autosummary>:1
msgid ""
":py:obj:`getAdjacentFaces "
"<abaqus.BasicGeometry.Face.Face.getAdjacentFaces>`\\ \\(\\)"
msgstr ""

#: ../../None:16:<autosummary>:1
#: abaqus.BasicGeometry.Face.Face.getAdjacentFaces:1 of
msgid ""
"This method returns an array of face objects that share at least one edge"
" of the face."
msgstr ""

#: ../../None:16:<autosummary>:1
msgid ""
":py:obj:`getFacesByFaceAngle "
"<abaqus.BasicGeometry.Face.Face.getFacesByFaceAngle>`\\ \\(angle\\)"
msgstr ""

#: ../../None:16:<autosummary>:1
#: abaqus.BasicGeometry.Face.Face.getFacesByFaceAngle:1 of
msgid ""
"This method returns an array of Face objects that are obtained by "
"recursively finding adjacent faces that are at an angle of less than or "
"equal to the specified angle."
msgstr ""

#: ../../None:16:<autosummary>:1
msgid ""
":py:obj:`getFacesByCurvature "
"<abaqus.BasicGeometry.Face.Face.getFacesByCurvature>`\\ \\(\\)"
msgstr ""

#: ../../None:16:<autosummary>:1
#: abaqus.BasicGeometry.Face.Face.getFacesByCurvature:1 of
msgid ""
"This method returns an array of Face objects that are obtained by "
"recursively finding adjacent faces that share the same curvature."
msgstr ""

#: ../../None:16:<autosummary>:1
msgid ""
":py:obj:`isNormalFlipped "
"<abaqus.BasicGeometry.Face.Face.isNormalFlipped>`\\ \\(\\)"
msgstr ""

#: ../../None:16:<autosummary>:1
#: abaqus.BasicGeometry.Face.Face.isNormalFlipped:1 of
msgid ""
"This method determines whether the normal to the face is flipped from its"
" default direction by the use of the flipNormal method on a Part object."
msgstr ""

#: abaqus.BasicGeometry.Face.Face.getAdjacentFaces:3 of
msgid ""
"A :py:class:`~abaqus.BasicGeometry.FaceArray.FaceArray` object which is a"
" sequence of Face objects."
msgstr ""

#: abaqus.BasicGeometry.Face.Face.getAdjacentFaces:4
#: abaqus.BasicGeometry.Face.Face.getFacesByCurvature:5
#: abaqus.BasicGeometry.Face.Face.getFacesByFaceAngle:11
#: abaqus.BasicGeometry.FaceArray.FaceArray.getByBoundingBox:20
#: abaqus.BasicGeometry.FaceArray.FaceArray.getByBoundingCylinder:17
#: abaqus.BasicGeometry.FaceArray.FaceArray.getByBoundingSphere:13 of
msgid ":class:`FaceArray`"
msgstr ""

#: abaqus.BasicGeometry.Face.Face.getCentroid:3 of
msgid ""
"A sequence of Floats specifying the **X**-, **Y**-, and **Z**-coordinates"
" of the centroid of the face."
msgstr ""

#: abaqus.BasicGeometry.Face.Face.getCentroid:5
#: abaqus.BasicGeometry.Face.Face.getNormal:15 of
msgid ":class:`Tuple[float`, :class:`...]`"
msgstr ""

#: abaqus.BasicGeometry.Face.Face.getCurvature:4 of
msgid ""
"Check `Face.getCurvature on help.3ds.com/2017 "
"<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-facepyc.htm?contextscope=all"
"#simaker-facegetcurvaturepyc>`__."
msgstr ""

#: abaqus.BasicGeometry.Face.Face.getCurvature:7 of
msgid ""
"A tuple specifying the **X**-, **Y**-, and **Z** coordinates of the point"
" where the curvature is desired. If the **point** does not lie on the "
"face it will be projected onto the face. This argument and **uParam** and"
" **vParam** are mutually exclusive."
msgstr ""

#: abaqus.BasicGeometry.Face.Face.getCurvature:11 of
msgid ""
"A Float specifying the normalized **U** parameter value at which the "
"curvature is to be computed. This value must lie between (0,1). "
"**vParam** must also be specified. This argument is mutually exclusive "
"with **point**."
msgstr ""

#: abaqus.BasicGeometry.Face.Face.getCurvature:15 of
msgid ""
"A Float specifying the normalized **V** parameter value at which the "
"curvature is to be computed. This value must lie between (0,1)."
msgstr ""

#: abaqus.BasicGeometry.Face.Face.getCurvature:18 of
msgid ""
"A dictionary with keys 'evaluationPoint', 'principalAxis1', "
"'principalAxis2', 'curvature1', 'curvature2' and 'gaussianCurvature'. "
"Where the evaluationPoint specifies the location at which the curvature "
"was evaluated. 'principalAxis1' and 'principalAxis2' refer to the vectors"
" specifying the two principal axes of the face. 'curvature1' and "
"'curvature2' specify the curvatures along the two principal axes."
msgstr ""

#: abaqus.BasicGeometry.Face.Face.getEdges:3 of
msgid ""
"* :class:`Tuple[int`, :class:`...]` * :class:`A tuple` of "
":class:`integers.`"
msgstr ""

#: abaqus.BasicGeometry.Face.Face.getEdges:4 of
msgid ":class:`A tuple` of :class:`integers.`"
msgstr ""

#: abaqus.BasicGeometry.Face.Face.getElementFaces:1 of
msgid ""
"This method returns an array of mesh face objects. Each mesh face object "
"contains the element label and the side of the element that lies on the "
"geometric face."
msgstr ""

#: abaqus.BasicGeometry.Face.Face.getElementFaces:5 of
msgid ""
"Check `Face.getElementFaces on help.3ds.com/2017 "
"<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-facepyc.htm?contextscope=all"
"#simaker-facegetelementfacespyc>`__."
msgstr ""

#: abaqus.BasicGeometry.Face.Face.getElementFaces:8 of
msgid ""
"A symbolic constant specifying the side of the geometric face of a solid "
"from which the element faces should be retrieved. Possible values are "
"**SIDE1**, **SIDE2**, and **BOTH_SIDES**. The default value is "
"**BOTH_SIDES**. For shell faces this option is ignored."
msgstr ""

#: abaqus.BasicGeometry.Face.Face.getElementFaces:12 of
msgid ""
"A :py:class:`~abaqus.Mesh.MeshFaceArray.MeshFaceArray` object which is a "
"sequence of MeshFace objects."
msgstr ""

#: abaqus.BasicGeometry.Face.Face.getElementFaces:13 of
msgid ":class:`MeshFaceArray`"
msgstr ""

#: abaqus.BasicGeometry.Face.Face.getFacesByCurvature:4
#: abaqus.BasicGeometry.Face.Face.getFacesByFaceAngle:10
#: abaqus.BasicGeometry.FaceArray.FaceArray.getByBoundingBox:19
#: abaqus.BasicGeometry.FaceArray.FaceArray.getByBoundingCylinder:16
#: abaqus.BasicGeometry.FaceArray.FaceArray.getByBoundingSphere:12 of
msgid ""
"A :py:class:`~abaqus.BasicGeometry.FaceArray.FaceArray` object, which is "
"a sequence of Face objects."
msgstr ""

#: abaqus.BasicGeometry.Face.Face.getFacesByFaceAngle:5 of
msgid ""
"Check `Face.getFacesByFaceAngle on help.3ds.com/2017 "
"<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-facepyc.htm?contextscope=all"
"#simaker-facegetfacesbyfaceanglepyc>`__."
msgstr ""

#: abaqus.BasicGeometry.Face.Face.getFacesByFaceAngle:8 of
msgid "A float specifying the value of the face angle."
msgstr ""

#: abaqus.BasicGeometry.Face.Face.getNodes:1 of
msgid ""
"This method returns an array of mesh node objects. Each mesh node object "
"contains the label of the node that lies on the geometric face."
msgstr ""

#: abaqus.BasicGeometry.Face.Face.getNodes:5 of
msgid ""
"Check `Face.getNodes on help.3ds.com/2017 "
"<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-facepyc.htm?contextscope=all"
"#simaker-facegetnodespyc>`__."
msgstr ""

#: abaqus.BasicGeometry.Face.Face.getNodes:8 of
msgid ""
"A symbolic constant specifying the side of the geometric face of a solid "
"from which the nodes should be retrieved. Possible values are xo*SIDE1*, "
"**SIDE2**, and **BOTH_SIDES**. The default value is **BOTH_SIDES**. For "
"shell faces and for faces with compatible meshes on either sides this "
"option is ignored. Otherwise, the nodes on the specified side(s) of the "
"face are output."
msgstr ""

#: abaqus.BasicGeometry.Face.Face.getNormal:1 of
msgid ""
"This method returns the normal to a face at the location specified by the"
" **pointOn** member. The normal at a different location on the face can "
"be obtained by specifying the optional **point** argument."
msgstr ""

#: abaqus.BasicGeometry.Face.Face.getNormal:6 of
msgid ""
"Check `Face.getNormal on help.3ds.com/2017 "
"<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-facepyc.htm?contextscope=all"
"#simaker-facegetnormalpyc>`__."
msgstr ""

#: abaqus.BasicGeometry.Face.Face.getNormal:9 of
msgid ""
"A tuple specifying the **X**-, **Y**-, and **Z** coordinates of the point"
" where the normal to the face is desired. If the **point** does not lie "
"on the face it will be projected onto the face."
msgstr ""

#: abaqus.BasicGeometry.Face.Face.getNormal:13 of
msgid ""
"A sequence of Floats specifying the **X**-, **Y**-, and **Z**-components "
"of the normal to the face."
msgstr ""

#: abaqus.BasicGeometry.Face.Face.getSize:4 of
msgid ""
"Check `Face.getSize on help.3ds.com/2017 "
"<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-facepyc.htm?contextscope=all"
"#simaker-facegetsizepyc>`__."
msgstr ""

#: abaqus.BasicGeometry.Face.Face.getSize:7 of
msgid ""
"A Bool specifying whether verbose output is printed. The default value is"
" True."
msgstr ""

#: abaqus.BasicGeometry.Face.Face.isNormalFlipped:4 of
msgid "A Boolean value of True if the normal is flipped and False if not."
msgstr ""

#: ../../docstring abaqus.BasicGeometry.Face.Face.pointOn:1 of
msgid ""
"A tuple of tuples of Floats specifying the coordinates. For a face of a "
"shell **pointOn** specifies the **X**-, **Y**-, and **Z**-coordinates of "
"a point located on the face and the **X**-, **Y**-, and **Z**-components "
"of the normal to the face.For a face of a solid **pointOn** specifies the"
" **X**-, **Y**-, and **Z**-coordinates of a point located on the face."
msgstr ""

#: ../../reference/mdb/model/part_assembly/geometry.rst:51
msgid "FaceArray"
msgstr ""

#: abaqus.BasicGeometry.FaceArray.FaceArray:1 of
msgid ""
"The FaceArray is a sequence of Face objects. If the part is modified, "
"then FaceArray must be updated for that part."
msgstr ""

#: abaqus.BasicGeometry.FaceArray.FaceArray:32 of
msgid ""
"Check `FaceArray on help.3ds.com/2017 "
"<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-facearraypyc.htm?contextscope=all>`__."
msgstr ""

#: ../../None:11:<autosummary>:1 ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__init__ <abaqus.BasicGeometry.FaceArray.FaceArray.__init__>`\\ "
"\\(faces\\)"
msgstr ""

#: ../../None:11:<autosummary>:1 ../../None:36:<autosummary>:1
msgid "This method creates a FaceArray object."
msgstr ""

#: ../../None:11:<autosummary>:1
msgid ""
":py:obj:`findAt <abaqus.BasicGeometry.FaceArray.FaceArray.findAt>`\\ "
"\\(coordinates\\[\\, normal\\, printWarning\\]\\)"
msgstr ""

#: ../../None:11:<autosummary>:1
msgid ""
"This method returns the object or objects in the FaceArray located at the"
" given coordinates."
msgstr ""

#: ../../None:11:<autosummary>:1
msgid ""
":py:obj:`getSequenceFromMask "
"<abaqus.BasicGeometry.FaceArray.FaceArray.getSequenceFromMask>`\\ "
"\\(mask\\)"
msgstr ""

#: ../../None:11:<autosummary>:1
msgid ""
"This method returns the object or objects in the FaceArray identified "
"using the specified **mask**."
msgstr ""

#: ../../None:11:<autosummary>:1
msgid ""
":py:obj:`getMask <abaqus.BasicGeometry.FaceArray.FaceArray.getMask>`\\ "
"\\(\\)"
msgstr ""

#: ../../None:11:<autosummary>:1
msgid ""
":py:obj:`getByBoundingBox "
"<abaqus.BasicGeometry.FaceArray.FaceArray.getByBoundingBox>`\\ "
"\\(\\[xMin\\, yMin\\, zMin\\, xMax\\, ...\\]\\)"
msgstr ""

#: ../../None:11:<autosummary>:1
#: abaqus.BasicGeometry.FaceArray.FaceArray.getByBoundingBox:1 of
msgid ""
"This method returns an array of face objects that lie within the "
"specified bounding box."
msgstr ""

#: ../../None:11:<autosummary>:1
msgid ""
":py:obj:`getByBoundingCylinder "
"<abaqus.BasicGeometry.FaceArray.FaceArray.getByBoundingCylinder>`\\ "
"\\(center1\\, center2\\, radius\\)"
msgstr ""

#: ../../None:11:<autosummary>:1
#: abaqus.BasicGeometry.FaceArray.FaceArray.getByBoundingCylinder:1 of
msgid ""
"This method returns an array of face objects that lie within the "
"specified bounding cylinder."
msgstr ""

#: ../../None:11:<autosummary>:1
msgid ""
":py:obj:`getByBoundingSphere "
"<abaqus.BasicGeometry.FaceArray.FaceArray.getByBoundingSphere>`\\ "
"\\(center\\, radius\\)"
msgstr ""

#: ../../None:11:<autosummary>:1
#: abaqus.BasicGeometry.FaceArray.FaceArray.getByBoundingSphere:1 of
msgid ""
"This method returns an array of face objects that lie within the "
"specified bounding sphere."
msgstr ""

#: ../../None:11:<autosummary>:1
msgid ""
":py:obj:`getBoundingBox "
"<abaqus.BasicGeometry.FaceArray.FaceArray.getBoundingBox>`\\ \\(\\)"
msgstr ""

#: ../../None:11:<autosummary>:1
#: abaqus.BasicGeometry.FaceArray.FaceArray.getBoundingBox:1 of
msgid ""
"This method returns a dictionary of two tuples representing minimum and "
"maximum boundary values of the bounding box of the minimum size "
"containing the face sequence."
msgstr ""

#: ../../None:11:<autosummary>:1
msgid ""
":py:obj:`getClosest "
"<abaqus.BasicGeometry.FaceArray.FaceArray.getClosest>`\\ "
"\\(coordinates\\[\\, searchTolerance\\]\\)"
msgstr ""

#: ../../None:11:<autosummary>:1
#: abaqus.BasicGeometry.FaceArray.FaceArray.getClosest:1 of
msgid ""
"This method returns an object or objects in the FaceArray closest to the "
"given set of points, where the given points need not lie on the faces in "
"the FaceArray."
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__repr__ <abaqus.BasicGeometry.FaceArray.FaceArray.__repr__>`\\ "
"\\(\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__getattribute__ "
"<abaqus.BasicGeometry.FaceArray.FaceArray.__getattribute__>`\\ \\(name\\,"
" \\/\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__lt__ <abaqus.BasicGeometry.FaceArray.FaceArray.__lt__>`\\ "
"\\(value\\, \\/\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__le__ <abaqus.BasicGeometry.FaceArray.FaceArray.__le__>`\\ "
"\\(value\\, \\/\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__eq__ <abaqus.BasicGeometry.FaceArray.FaceArray.__eq__>`\\ "
"\\(value\\, \\/\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__ne__ <abaqus.BasicGeometry.FaceArray.FaceArray.__ne__>`\\ "
"\\(value\\, \\/\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__gt__ <abaqus.BasicGeometry.FaceArray.FaceArray.__gt__>`\\ "
"\\(value\\, \\/\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__ge__ <abaqus.BasicGeometry.FaceArray.FaceArray.__ge__>`\\ "
"\\(value\\, \\/\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__iter__ <abaqus.BasicGeometry.FaceArray.FaceArray.__iter__>`\\ "
"\\(\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__len__ <abaqus.BasicGeometry.FaceArray.FaceArray.__len__>`\\ "
"\\(\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__getitem__ "
"<abaqus.BasicGeometry.FaceArray.FaceArray.__getitem__>`\\"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__setitem__ "
"<abaqus.BasicGeometry.FaceArray.FaceArray.__setitem__>`\\ \\(key\\, "
"value\\, \\/\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__delitem__ "
"<abaqus.BasicGeometry.FaceArray.FaceArray.__delitem__>`\\ \\(key\\, "
"\\/\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__add__ <abaqus.BasicGeometry.FaceArray.FaceArray.__add__>`\\ "
"\\(value\\, \\/\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__mul__ <abaqus.BasicGeometry.FaceArray.FaceArray.__mul__>`\\ "
"\\(value\\, \\/\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__rmul__ <abaqus.BasicGeometry.FaceArray.FaceArray.__rmul__>`\\ "
"\\(value\\, \\/\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__contains__ "
"<abaqus.BasicGeometry.FaceArray.FaceArray.__contains__>`\\ \\(key\\, "
"\\/\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__iadd__ <abaqus.BasicGeometry.FaceArray.FaceArray.__iadd__>`\\ "
"\\(value\\, \\/\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__imul__ <abaqus.BasicGeometry.FaceArray.FaceArray.__imul__>`\\ "
"\\(value\\, \\/\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__reversed__ "
"<abaqus.BasicGeometry.FaceArray.FaceArray.__reversed__>`\\ \\(\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__sizeof__ "
"<abaqus.BasicGeometry.FaceArray.FaceArray.__sizeof__>`\\ \\(\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ":py:obj:`clear <abaqus.BasicGeometry.FaceArray.FaceArray.clear>`\\ \\(\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ":py:obj:`copy <abaqus.BasicGeometry.FaceArray.FaceArray.copy>`\\ \\(\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`append <abaqus.BasicGeometry.FaceArray.FaceArray.append>`\\ "
"\\(object\\, \\/\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`insert <abaqus.BasicGeometry.FaceArray.FaceArray.insert>`\\ "
"\\(index\\, object\\, \\/\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`extend <abaqus.BasicGeometry.FaceArray.FaceArray.extend>`\\ "
"\\(iterable\\, \\/\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`pop <abaqus.BasicGeometry.FaceArray.FaceArray.pop>`\\ "
"\\(\\[index\\]\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`remove <abaqus.BasicGeometry.FaceArray.FaceArray.remove>`\\ "
"\\(value\\, \\/\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`index <abaqus.BasicGeometry.FaceArray.FaceArray.index>`\\ "
"\\(value\\[\\, start\\, stop\\]\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`count <abaqus.BasicGeometry.FaceArray.FaceArray.count>`\\ "
"\\(value\\, \\/\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`reverse <abaqus.BasicGeometry.FaceArray.FaceArray.reverse>`\\ "
"\\(\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`sort <abaqus.BasicGeometry.FaceArray.FaceArray.sort>`\\ "
"\\(\\*\\[\\, key\\, reverse\\]\\)"
msgstr ""

#: ../../None:36:<autosummary>:1 ../../None:4:<autosummary>:1
msgid ""
":py:obj:`__class_getitem__ "
"<abaqus.BasicGeometry.FaceArray.FaceArray.__class_getitem__>`\\"
msgstr ""

#: ../../None:4:<autosummary>:1
msgid ""
":py:obj:`__init_subclass__ "
"<abaqus.BasicGeometry.FaceArray.FaceArray.__init_subclass__>`\\ "
"\\(\\*args\\, \\*\\*kwargs\\)"
msgstr ""

#: ../../None:3:<autosummary>:1
msgid ""
":py:obj:`_is_protocol "
"<abaqus.BasicGeometry.FaceArray.FaceArray._is_protocol>`\\"
msgstr ""

#: abaqus.BasicGeometry.FaceArray.FaceArray.findAt:1 of
msgid ""
"This method returns the object or objects in the FaceArray located at the"
" given coordinates. findAt initially uses the ACIS tolerance of 1E-6. As "
"a result, findAt returns any face that is at the arbitrary point "
"specified or at a distance of less than 1E-6 from the arbitrary point. If"
" nothing is found, findAt uses the tolerance for imprecise geometry "
"(applicable only for imprecise geometric entities). The arbitrary point "
"must not be shared by a second face. If two faces intersect or coincide "
"at the arbitrary point, findAt chooses the first face that it encounters,"
" and you should not rely on the return value being consistent. findAt "
"will always try to find objects among all the faces in the part or "
"assembly instance and will not restrict itself to a subset even if the "
"FaceArray represents such subset."
msgstr ""

#: abaqus.BasicGeometry.FaceArray.FaceArray.findAt:15 of
msgid ""
"Check `FaceArray.findAt on help.3ds.com/2017 "
"<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-facearraypyc.htm?contextscope=all"
"#simaker-facearrayfindatpyc>`__."
msgstr ""

#: abaqus.BasicGeometry.FaceArray.FaceArray.findAt:18 of
msgid ""
"A sequence of Floats specifying the **X**-, **Y**-, and **Z**-coordinates"
" of the object to find. `findAt` returns either a Face object or a "
"sequence of Face objects based on the type of input.  * If "
"**coordinates** is a sequence of Floats, findAt returns the Face object "
"at that point.  * If you omit the **coordinates** keyword argument, "
"findAt accepts as arguments a   sequence of pairs of sequences describing"
" each face's coordinate and normal, and findAt   returns a sequence of "
"Face objects at the given locations. If you omit the **coordinates**   "
"keyword argument, you must also omit the **normal** argument::      faces"
" = f.findAt(((-16.438578, -41.835673, -24.19804), ),"
"                      ((25.210364, -35.689868, 1.860314), ),"
"                      ((26.727683, -38.207055, 4.164759), ))"
msgstr ""

#: abaqus.BasicGeometry.FaceArray.FaceArray.findAt:18 of
msgid ""
"A sequence of Floats specifying the **X**-, **Y**-, and **Z**-coordinates"
" of the object to find. `findAt` returns either a Face object or a "
"sequence of Face objects based on the type of input."
msgstr ""

#: abaqus.BasicGeometry.FaceArray.FaceArray.findAt:22 of
msgid ""
"If **coordinates** is a sequence of Floats, findAt returns the Face "
"object at that point."
msgstr ""

#: abaqus.BasicGeometry.FaceArray.FaceArray.findAt:24 of
msgid ""
"If you omit the **coordinates** keyword argument, findAt accepts as "
"arguments a sequence of pairs of sequences describing each face's "
"coordinate and normal, and findAt returns a sequence of Face objects at "
"the given locations. If you omit the **coordinates** keyword argument, "
"you must also omit the **normal** argument::"
msgstr ""

#: abaqus.BasicGeometry.FaceArray.FaceArray.findAt:33 of
msgid ""
"A sequence of Floats specifying the **X**-, **Y**-, and **Z**-components "
"of a vector indicating the face normal."
msgstr ""

#: abaqus.BasicGeometry.FaceArray.FaceArray.findAt:39 of
msgid "A :py:class:`~abaqus.BasicGeometry.Face.Face` object."
msgstr ""

#: abaqus.BasicGeometry.FaceArray.FaceArray.findAt:40
#: abaqus.BasicGeometry.FaceArray.FaceArray.getSequenceFromMask:13 of
msgid ":class:`Face`"
msgstr ""

#: abaqus.BasicGeometry.FaceArray.FaceArray.getBoundingBox:4 of
msgid ""
"A Dictionary object with the following items:  - **low**: a tuple of "
"three floats representing the minimum **X** -, **Y** -, and **Z**  "
"-boundary   values of the bounding box. - **high**: a tuple of three "
"floats representing the maximum **X** -, **Y** -, and **Z**  -boundary   "
"values of the bounding box."
msgstr ""

#: abaqus.BasicGeometry.FaceArray.FaceArray.getBoundingBox:6 of
msgid ""
"**low**: a tuple of three floats representing the minimum **X** -, **Y** "
"-, and **Z**  -boundary values of the bounding box."
msgstr ""

#: abaqus.BasicGeometry.FaceArray.FaceArray.getBoundingBox:8 of
msgid ""
"**high**: a tuple of three floats representing the maximum **X** -, **Y**"
" -, and **Z**  -boundary values of the bounding box."
msgstr ""

#: abaqus.BasicGeometry.FaceArray.FaceArray.getBoundingBox:10 of
msgid ":class:`Dict[str`, :class:`Tuple[float`, :class:`...]]`"
msgstr ""

#: abaqus.BasicGeometry.FaceArray.FaceArray.getByBoundingBox:4 of
msgid ""
"Check `FaceArray.getByBoundingBox on help.3ds.com/2017 "
"<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-facearraypyc.htm?contextscope=all"
"#simaker-facearraygetbyboundingboxpyc>`__."
msgstr ""

#: abaqus.BasicGeometry.FaceArray.FaceArray.getByBoundingCylinder:5 of
msgid ""
"Check `FaceArray.getByBoundingCylinder on help.3ds.com/2017 "
"<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-facearraypyc.htm?contextscope=all"
"#simaker-facearraygetbyboundingcylinderpyc>`__."
msgstr ""

#: abaqus.BasicGeometry.FaceArray.FaceArray.getByBoundingSphere:5 of
msgid ""
"Check `FaceArray.getByBoundingSphere on help.3ds.com/2017 "
"<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-facearraypyc.htm?contextscope=all"
"#simaker-facearraygetbyboundingspherepyc>`__."
msgstr ""

#: abaqus.BasicGeometry.FaceArray.FaceArray.getClosest:5 of
msgid ""
"Check `FaceArray.getClosest on help.3ds.com/2017 "
"<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-facearraypyc.htm?contextscope=all"
"#simaker-facearraygetclosestpyc>`__."
msgstr ""

#: abaqus.BasicGeometry.FaceArray.FaceArray.getClosest:8 of
msgid ""
"A sequence of a sequence of floats, where each sequence of floats "
"describes the **X**-, **Y**-, and **Z**-coordinates of a point::      >>>"
" r=f.getClosest(coordinates=((20.0, 20.0, 10.0), (-1.0, -15.0, 15), ))"
"     >>> r.keys()     [0, 1]     >>> r[0]     "
"(mdb.models['Model-1'].parts['Part-1'].faces[0], (15.7090625762939, 20.0,"
" 10.0))"
msgstr ""

#: abaqus.BasicGeometry.FaceArray.FaceArray.getClosest:8
#: abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.getClosest:8
#: abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.getClosest:9
#: abaqus.BasicGeometry.VertexArray.VertexArray.getClosest:8 of
msgid ""
"A sequence of a sequence of floats, where each sequence of floats "
"describes the **X**-, **Y**-, and **Z**-coordinates of a point::"
msgstr ""

#: abaqus.BasicGeometry.FaceArray.FaceArray.getClosest:20 of
msgid ""
"This method returns a dictionary object. The key to the dictionary object"
" is the position of the input point in the tuple specified in the "
"**coordinates** starting at index 0. If a closest face could be found "
"then the value is a sequence consisting of two objects. The first object "
"in the sequence is a Face that is close to the input point referred to by"
" the key. The second object in the sequence is a sequence of floats that "
"specifies the **X**-, **Y**-, and **Z**- location of the closest point on"
" the Face to the given point. See program listing above."
msgstr ""

#: abaqus.BasicGeometry.FaceArray.FaceArray.getSequenceFromMask:1 of
msgid ""
"This method returns the object or objects in the FaceArray identified "
"using the specified **mask**. This command is generated when the "
"JournalOptions are set to COMPRESSEDINDEX. When a large number of objects"
" are involved, this method is highly efficient."
msgstr ""

#: abaqus.BasicGeometry.FaceArray.FaceArray.getSequenceFromMask:7 of
msgid ""
"Check `FaceArray.getSequenceFromMask on help.3ds.com/2017 "
"<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-facearraypyc.htm?contextscope=all"
"#simaker-facearraygetsequencefrommaskpyc>`__."
msgstr ""

#: abaqus.BasicGeometry.FaceArray.FaceArray.getSequenceFromMask:12 of
msgid ""
"A :py:class:`~abaqus.BasicGeometry.Face.Face` object or a sequence of "
"Face objects."
msgstr ""

#: ../../reference/mdb/model/part_assembly/geometry.rst:59
msgid "IgnoredEdge"
msgstr ""

#: abaqus.BasicGeometry.IgnoredEdge.IgnoredEdge:1 of
msgid ""
"An :py:class:`~abaqus.BasicGeometry.IgnoredEdge.IgnoredEdge` object is a "
"one-dimensional region of geometry that has been abstracted away by a "
"virtual topology feature."
msgstr ""

#: abaqus.BasicGeometry.IgnoredEdge.IgnoredEdge:14 of
msgid ""
"Check `IgnoredEdge on help.3ds.com/2017 "
"<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-ignorededgepyc.htm?contextscope=all>`__."
msgstr ""

#: ../../None:4:<autosummary>:1
msgid ":py:obj:`index <abaqus.BasicGeometry.IgnoredEdge.IgnoredEdge.index>`\\"
msgstr ""

#: ../../None:4:<autosummary>:1 ../../docstring
#: abaqus.BasicGeometry.IgnoredEdge.IgnoredEdge.index:1 of
msgid "An Int specifying the index of the IgnoredEdge in the IgnoredEdgeArray."
msgstr ""

#: ../../None:4:<autosummary>:1
msgid ":py:obj:`pointOn <abaqus.BasicGeometry.IgnoredEdge.IgnoredEdge.pointOn>`\\"
msgstr ""

#: ../../None:5:<autosummary>:1
msgid ""
":py:obj:`getSize "
"<abaqus.BasicGeometry.IgnoredEdge.IgnoredEdge.getSize>`\\ "
"\\(\\[printResults\\]\\)"
msgstr ""

#: ../../None:5:<autosummary>:1
msgid ""
":py:obj:`getRadius "
"<abaqus.BasicGeometry.IgnoredEdge.IgnoredEdge.getRadius>`\\ \\(\\)"
msgstr ""

#: ../../None:5:<autosummary>:1
#: abaqus.BasicGeometry.IgnoredEdge.IgnoredEdge.getRadius:1 of
msgid "This method returns the radius of a circular IgnoredEdge object."
msgstr ""

#: ../../None:5:<autosummary>:1
msgid ""
":py:obj:`getCurvature "
"<abaqus.BasicGeometry.IgnoredEdge.IgnoredEdge.getCurvature>`\\ "
"\\(parameter\\, point\\)"
msgstr ""

#: ../../None:5:<autosummary>:1
#: abaqus.BasicGeometry.IgnoredEdge.IgnoredEdge.getCurvature:1 of
msgid ""
"This method returns curvature information at a location on the "
"IgnoredEdge object."
msgstr ""

#: abaqus.BasicGeometry.IgnoredEdge.IgnoredEdge.getCurvature:4 of
msgid ""
"Check `IgnoredEdge.getCurvature on help.3ds.com/2017 "
"<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-ignorededgepyc.htm?contextscope=all"
"#simaker-ignorededgegetcurvaturepyc>`__."
msgstr ""

#: abaqus.BasicGeometry.IgnoredEdge.IgnoredEdge.getCurvature:7 of
msgid ""
"A Float specifying the normalized parameter location on the IgnoredEdge "
"where the curvature is to be computed. This argument is mutually "
"exclusive with the argument **point**."
msgstr ""

#: abaqus.BasicGeometry.IgnoredEdge.IgnoredEdge.getCurvature:11 of
msgid ""
"A tuple of **X**-, **Y**-, and **Z**-coordinates of a point at which the "
"curvature is to be computed. If **point** does not lie on the IgnoredEdge"
" an attempt is made to project it onto the IgnoredEdge and use the "
"projected point."
msgstr ""

#: abaqus.BasicGeometry.IgnoredEdge.IgnoredEdge.getCurvature:15 of
msgid ""
"A dictionary with keys 'evaluationPoint', 'curvature', 'radius', "
"'tangent'. Where 'evaluationPoint' specifies the location at which the "
"curvature was computed. 'curvature' specifies the curvature vector at "
"that location. 'radius' is the Radius of curvature and 'tangent' "
"specifies the tangent to the IgnoredEdge at that location."
msgstr ""

#: abaqus.BasicGeometry.IgnoredEdge.IgnoredEdge.getSize:4 of
msgid ""
"Check `IgnoredEdge.getSize on help.3ds.com/2017 "
"<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-ignorededgepyc.htm?contextscope=all"
"#simaker-ignorededgegetsizepyc>`__."
msgstr ""

#: ../../reference/mdb/model/part_assembly/geometry.rst:67
msgid "IgnoredEdgeArray"
msgstr ""

#: abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray:1 of
msgid ""
"The IgnoredEdgeArray is a sequence of IgnoredEdge objects. If the part is"
" modified, then IgnoredEdgeArray must be updated for that part."
msgstr ""

#: abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray:14 of
msgid ""
"Check `IgnoredEdgeArray on help.3ds.com/2017 "
"<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-ignorededgearraypyc.htm?contextscope=all>`__."
msgstr ""

#: ../../None:6:<autosummary>:1
msgid ""
":py:obj:`findAt "
"<abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.findAt>`\\ "
"\\(coordinates\\[\\, printWarning\\]\\)"
msgstr ""

#: ../../None:6:<autosummary>:1
msgid ""
"This method returns the object or objects in the IgnoredEdgeArray located"
" at the given coordinates."
msgstr ""

#: ../../None:6:<autosummary>:1
msgid ""
":py:obj:`getSequenceFromMask "
"<abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.getSequenceFromMask>`\\"
" \\(mask\\)"
msgstr ""

#: ../../None:6:<autosummary>:1
msgid ""
"This method returns the object or objects in the IgnoredEdgeArray "
"identified using the specified **mask**."
msgstr ""

#: ../../None:6:<autosummary>:1
msgid ""
":py:obj:`getMask "
"<abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.getMask>`\\ "
"\\(\\)"
msgstr ""

#: ../../None:6:<autosummary>:1
msgid ""
":py:obj:`getClosest "
"<abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.getClosest>`\\ "
"\\(coordinates\\[\\, searchTolerance\\]\\)"
msgstr ""

#: ../../None:6:<autosummary>:1
#: abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.getClosest:1 of
msgid ""
"This method returns a object or objects in the IgnoredEdgeArray closest "
"to the given set of points, where the given points need not lie on the "
"edges in the IgnoredEdgeArray."
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__repr__ "
"<abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.__repr__>`\\ "
"\\(\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__getattribute__ "
"<abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.__getattribute__>`\\"
" \\(name\\, \\/\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__lt__ "
"<abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.__lt__>`\\ "
"\\(value\\, \\/\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__le__ "
"<abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.__le__>`\\ "
"\\(value\\, \\/\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__eq__ "
"<abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.__eq__>`\\ "
"\\(value\\, \\/\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__ne__ "
"<abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.__ne__>`\\ "
"\\(value\\, \\/\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__gt__ "
"<abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.__gt__>`\\ "
"\\(value\\, \\/\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__ge__ "
"<abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.__ge__>`\\ "
"\\(value\\, \\/\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__iter__ "
"<abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.__iter__>`\\ "
"\\(\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__init__ "
"<abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.__init__>`\\ "
"\\(\\*args\\, \\*\\*kwargs\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__len__ "
"<abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.__len__>`\\ "
"\\(\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__getitem__ "
"<abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.__getitem__>`\\"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__setitem__ "
"<abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.__setitem__>`\\ "
"\\(key\\, value\\, \\/\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__delitem__ "
"<abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.__delitem__>`\\ "
"\\(key\\, \\/\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__add__ "
"<abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.__add__>`\\ "
"\\(value\\, \\/\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__mul__ "
"<abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.__mul__>`\\ "
"\\(value\\, \\/\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__rmul__ "
"<abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.__rmul__>`\\ "
"\\(value\\, \\/\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__contains__ "
"<abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.__contains__>`\\ "
"\\(key\\, \\/\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__iadd__ "
"<abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.__iadd__>`\\ "
"\\(value\\, \\/\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__imul__ "
"<abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.__imul__>`\\ "
"\\(value\\, \\/\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__reversed__ "
"<abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.__reversed__>`\\ "
"\\(\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__sizeof__ "
"<abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.__sizeof__>`\\ "
"\\(\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`clear "
"<abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.clear>`\\ \\(\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`copy "
"<abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.copy>`\\ \\(\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`append "
"<abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.append>`\\ "
"\\(object\\, \\/\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`insert "
"<abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.insert>`\\ "
"\\(index\\, object\\, \\/\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`extend "
"<abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.extend>`\\ "
"\\(iterable\\, \\/\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`pop "
"<abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.pop>`\\ "
"\\(\\[index\\]\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`remove "
"<abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.remove>`\\ "
"\\(value\\, \\/\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`index "
"<abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.index>`\\ "
"\\(value\\[\\, start\\, stop\\]\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`count "
"<abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.count>`\\ "
"\\(value\\, \\/\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`reverse "
"<abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.reverse>`\\ "
"\\(\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`sort "
"<abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.sort>`\\ "
"\\(\\*\\[\\, key\\, reverse\\]\\)"
msgstr ""

#: ../../None:36:<autosummary>:1 ../../None:4:<autosummary>:1
msgid ""
":py:obj:`__class_getitem__ "
"<abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.__class_getitem__>`\\"
msgstr ""

#: ../../None:4:<autosummary>:1
msgid ""
":py:obj:`__init_subclass__ "
"<abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.__init_subclass__>`\\"
" \\(\\*args\\, \\*\\*kwargs\\)"
msgstr ""

#: ../../None:3:<autosummary>:1
msgid ""
":py:obj:`_is_protocol "
"<abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray._is_protocol>`\\"
msgstr ""

#: abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.findAt:1 of
msgid ""
"This method returns the object or objects in the IgnoredEdgeArray located"
" at the given coordinates. findAt initially uses the ACIS tolerance of "
"1E-6. As a result, findAt returns any IgnoredEdge that is at the "
"arbitrary point specified or at a distance of less than 1E-6 from the "
"arbitrary point. If nothing is found, findAt uses the tolerance for "
"imprecise geometry (applicable only for imprecise geometric entities). "
"The arbitrary point must not be shared by a second IgnoredEdge. If two "
"IgnoredEdge objects intersect or coincide at the arbitrary point, findAt "
"chooses the first IgnoredEdge that it encounters, and you should not rely"
" on the return value being consistent. findAt will always try to find "
"objects among all the ignored edges in the part or assembly instance and "
"will not restrict itself to a subset even if the IgnoredEdgeArray "
"represents such subset."
msgstr ""

#: abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.findAt:15 of
msgid ""
"Check `IgnoredEdgeArray.findAt on help.3ds.com/2017 "
"<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-ignorededgearraypyc.htm?contextscope=all"
"#simaker-ignorededgearrayfindatpyc>`__."
msgstr ""

#: abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.findAt:18 of
msgid ""
"A sequence of Floats specifying the **X**-, **Y**-, and **Z**- "
"coordinates of the object to find.findAt returns either an IgnoredEdge "
"object or a sequence of IgnoredEdge objects based on the type of input.If"
" **coordinates** is a sequence of Floats, findAt returns the IgnoredEdge "
"object at that point.If you omit the **coordinates** keyword argument, "
"findAt accepts as arguments a sequence of sequence of floats in the "
"following format::      ignoredEdges = e.findAt(((20.19686, -169.513997, "
"27.798593), ),                             ((19.657627, -167.295749, "
"27.056402), ),                             ((18.274129, -157.144741, "
"25.15218), ))"
msgstr ""

#: abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.findAt:18 of
msgid ""
"A sequence of Floats specifying the **X**-, **Y**-, and **Z**- "
"coordinates of the object to find.findAt returns either an IgnoredEdge "
"object or a sequence of IgnoredEdge objects based on the type of input.If"
" **coordinates** is a sequence of Floats, findAt returns the IgnoredEdge "
"object at that point.If you omit the **coordinates** keyword argument, "
"findAt accepts as arguments a sequence of sequence of floats in the "
"following format::"
msgstr ""

#: abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.findAt:32
#: abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.getSequenceFromMask:12
#: of
msgid ""
"An :py:class:`~abaqus.BasicGeometry.IgnoredEdge.IgnoredEdge` object or a "
"sequence of IgnoredEdge objects."
msgstr ""

#: abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.findAt:33
#: abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.getSequenceFromMask:13
#: of
msgid ":class:`IgnoredEdge`"
msgstr ""

#: abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.getClosest:5 of
msgid ""
"Check `IgnoredEdgeArray.getClosest on help.3ds.com/2017 "
"<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-ignorededgearraypyc.htm?contextscope=all"
"#simaker-ignorededgearraygetclosestpyc>`__."
msgstr ""

#: abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.getClosest:8 of
msgid ""
"A sequence of a sequence of floats, where each sequence of floats "
"describes the **X**-, **Y**-, and **Z**-coordinates of a point::      >>>"
" r=e.getClosest(coordinates=((20.0, 20.0, 10.0),(-1.0, -15.0, 15), ))"
"     >>> r.keys()     [0, 1]     >>> r[0]     "
"(mdb.models['Model-1'].parts['Part-1'].ignoredEdges[3], "
"(15.7090625762939, 20.0, 10.0))"
msgstr ""

#: abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.getClosest:20 of
msgid ""
"This method returns a dictionary object. The key to the dictionary object"
" is the position of the input point in the tuple specified in the "
"**coordinates** starting at index 0. If a closest IgnoredEdge could be "
"found then the value is a sequence consisting of two objects. The first "
"object in the sequence is an IgnoredEdge that is close to the input point"
" referred to by the key. The second object in the sequence, is a sequence"
" of floats which specify the **X**-, **Y**-, and **Z**- location of the "
"closest point on the IgnoredEdge to the given point. See program listing "
"above."
msgstr ""

#: abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.getSequenceFromMask:1
#: of
msgid ""
"This method returns the object or objects in the IgnoredEdgeArray "
"identified using the specified **mask**. This command is generated when "
"the JournalOptions are set to COMPRESSEDINDEX. When large number of "
"objects are involved, this method is highly efficient."
msgstr ""

#: abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.getSequenceFromMask:7
#: of
msgid ""
"Check `IgnoredEdgeArray.getSequenceFromMask on help.3ds.com/2017 "
"<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-ignorededgearraypyc.htm?contextscope=all"
"#simaker-ignorededgearraygetsequencefrommaskpyc>`__."
msgstr ""

#: ../../reference/mdb/model/part_assembly/geometry.rst:75
msgid "IgnoredVertex"
msgstr ""

#: abaqus.BasicGeometry.IgnoredVertex.IgnoredVertex:1 of
msgid ""
"An :py:class:`~abaqus.BasicGeometry.IgnoredVertex.IgnoredVertex` object "
"is a point region of the geometry that was abstracted away by a virtual "
"topology feature."
msgstr ""

#: abaqus.BasicGeometry.IgnoredVertex.IgnoredVertex:14 of
msgid ""
"Check `IgnoredVertex on help.3ds.com/2017 "
"<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-ignoredvertexpyc.htm?contextscope=all>`__."
msgstr ""

#: ../../None:4:<autosummary>:1
msgid ":py:obj:`index <abaqus.BasicGeometry.IgnoredVertex.IgnoredVertex.index>`\\"
msgstr ""

#: ../../None:4:<autosummary>:1 ../../docstring
#: abaqus.BasicGeometry.IgnoredVertex.IgnoredVertex.index:1 of
msgid ""
"An Int specifying the index of the IgnoredVertex in the "
"IgnoredVertexArray."
msgstr ""

#: ../../None:4:<autosummary>:1
msgid ""
":py:obj:`pointOn "
"<abaqus.BasicGeometry.IgnoredVertex.IgnoredVertex.pointOn>`\\"
msgstr ""

#: ../../None:4:<autosummary>:1 ../../docstring
#: abaqus.BasicGeometry.IgnoredVertex.IgnoredVertex.pointOn:1 of
msgid ""
"A tuple of Floats specifying the **X**-, **Y**-, and **Z**-coordinates of"
" the vertex."
msgstr ""

#: ../../reference/mdb/model/part_assembly/geometry.rst:83
msgid "IgnoredVertexArray"
msgstr ""

#: abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray:1 of
msgid ""
"The IgnoredVertexArray is a sequence of IgnoredVertex objects. If the "
"part is modified, then IgnoredVertexArray must be updated for that part."
msgstr ""

#: abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray:14 of
msgid ""
"Check `IgnoredVertexArray on help.3ds.com/2017 "
"<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-ignoredvertexarraypyc.htm?contextscope=all>`__."
msgstr ""

#: ../../None:6:<autosummary>:1
msgid ""
":py:obj:`findAt "
"<abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.findAt>`\\ "
"\\(coordinates\\[\\, printWarning\\]\\)"
msgstr ""

#: ../../None:6:<autosummary>:1
msgid ""
"This method returns the object or objects in the IgnoredVertexArray "
"located at the given coordinates."
msgstr ""

#: ../../None:6:<autosummary>:1
msgid ""
":py:obj:`getSequenceFromMask "
"<abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.getSequenceFromMask>`\\"
" \\(mask\\)"
msgstr ""

#: ../../None:6:<autosummary>:1
msgid ""
"This method returns the object or objects in the IgnoredVertexArray "
"identified using the specified **mask**."
msgstr ""

#: ../../None:6:<autosummary>:1
msgid ""
":py:obj:`getMask "
"<abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.getMask>`\\ "
"\\(\\)"
msgstr ""

#: ../../None:6:<autosummary>:1
msgid ""
":py:obj:`getClosest "
"<abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.getClosest>`\\"
" \\(coordinates\\[\\, searchTolerance\\]\\)"
msgstr ""

#: ../../None:6:<autosummary>:1
#: abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.getClosest:1 of
msgid ""
"This method returns a object or objects in the IgnoredVertexArray closest"
" to the given set of points, where the given points need not lie on the "
"vertices in the IgnoredVertexArray."
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__repr__ "
"<abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.__repr__>`\\ "
"\\(\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__getattribute__ "
"<abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.__getattribute__>`\\"
" \\(name\\, \\/\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__lt__ "
"<abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.__lt__>`\\ "
"\\(value\\, \\/\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__le__ "
"<abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.__le__>`\\ "
"\\(value\\, \\/\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__eq__ "
"<abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.__eq__>`\\ "
"\\(value\\, \\/\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__ne__ "
"<abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.__ne__>`\\ "
"\\(value\\, \\/\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__gt__ "
"<abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.__gt__>`\\ "
"\\(value\\, \\/\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__ge__ "
"<abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.__ge__>`\\ "
"\\(value\\, \\/\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__iter__ "
"<abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.__iter__>`\\ "
"\\(\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__init__ "
"<abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.__init__>`\\ "
"\\(\\*args\\, \\*\\*kwargs\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__len__ "
"<abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.__len__>`\\ "
"\\(\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__getitem__ "
"<abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.__getitem__>`\\"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__setitem__ "
"<abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.__setitem__>`\\"
" \\(key\\, value\\, \\/\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__delitem__ "
"<abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.__delitem__>`\\"
" \\(key\\, \\/\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__add__ "
"<abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.__add__>`\\ "
"\\(value\\, \\/\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__mul__ "
"<abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.__mul__>`\\ "
"\\(value\\, \\/\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__rmul__ "
"<abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.__rmul__>`\\ "
"\\(value\\, \\/\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__contains__ "
"<abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.__contains__>`\\"
" \\(key\\, \\/\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__iadd__ "
"<abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.__iadd__>`\\ "
"\\(value\\, \\/\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__imul__ "
"<abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.__imul__>`\\ "
"\\(value\\, \\/\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__reversed__ "
"<abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.__reversed__>`\\"
" \\(\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__sizeof__ "
"<abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.__sizeof__>`\\"
" \\(\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`clear "
"<abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.clear>`\\ "
"\\(\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`copy "
"<abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.copy>`\\ "
"\\(\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`append "
"<abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.append>`\\ "
"\\(object\\, \\/\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`insert "
"<abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.insert>`\\ "
"\\(index\\, object\\, \\/\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`extend "
"<abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.extend>`\\ "
"\\(iterable\\, \\/\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`pop "
"<abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.pop>`\\ "
"\\(\\[index\\]\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`remove "
"<abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.remove>`\\ "
"\\(value\\, \\/\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`index "
"<abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.index>`\\ "
"\\(value\\[\\, start\\, stop\\]\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`count "
"<abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.count>`\\ "
"\\(value\\, \\/\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`reverse "
"<abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.reverse>`\\ "
"\\(\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`sort "
"<abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.sort>`\\ "
"\\(\\*\\[\\, key\\, reverse\\]\\)"
msgstr ""

#: ../../None:36:<autosummary>:1 ../../None:4:<autosummary>:1
msgid ""
":py:obj:`__class_getitem__ "
"<abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.__class_getitem__>`\\"
msgstr ""

#: ../../None:4:<autosummary>:1
msgid ""
":py:obj:`__init_subclass__ "
"<abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.__init_subclass__>`\\"
" \\(\\*args\\, \\*\\*kwargs\\)"
msgstr ""

#: ../../None:3:<autosummary>:1
msgid ""
":py:obj:`_is_protocol "
"<abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray._is_protocol>`\\"
msgstr ""

#: abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.findAt:1 of
msgid ""
"This method returns the object or objects in the IgnoredVertexArray "
"located at the given coordinates. findAt initially uses the ACIS "
"tolerance of 1E-6. As a result, findAt returns any IgnoredVertex object "
"that is at the arbitrary point specified or at a distance of less than "
"1E-6 from the arbitrary point. If nothing is found, findAt uses the "
"tolerance for imprecise geometry (applicable only for imprecise geometric"
" entities). findAt will always try to find objects among all the ignored "
"vertices in the part or assembly instance and will not restrict itself to"
" a subset even if the IgnoredVertexArray represents such subset."
msgstr ""

#: abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.findAt:12 of
msgid ""
"Check `IgnoredVertexArray.findAt on help.3ds.com/2017 "
"<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-ignoredvertexarraypyc.htm?contextscope=all"
"#simaker-ignoredvertexarrayfindatpyc>`__."
msgstr ""

#: abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.findAt:15 of
msgid ""
"A sequence of Floats specifying the **X**-, **Y**-, and **Z**-coordinates"
" of the object to find.findAt returns either a IgnoredVertex object or a "
"sequence of IgnoredVertex objects based on the type of input.If "
"**coordinates** is a sequence of Floats, findAt returns the IgnoredVertex"
" object at that point.If you omit the **coordinates** keyword argument, "
"findAt accepts as arguments a sequence of sequence of floats in the "
"following format::      verts = v.findAt(((20.19686, -169.513997, "
"27.798593), ),                     ((19.657627, -167.295749, 27.056402), "
"),                     ((18.274129, -157.144741, 25.15218), ))"
msgstr ""

#: abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.findAt:15 of
msgid ""
"A sequence of Floats specifying the **X**-, **Y**-, and **Z**-coordinates"
" of the object to find.findAt returns either a IgnoredVertex object or a "
"sequence of IgnoredVertex objects based on the type of input.If "
"**coordinates** is a sequence of Floats, findAt returns the IgnoredVertex"
" object at that point.If you omit the **coordinates** keyword argument, "
"findAt accepts as arguments a sequence of sequence of floats in the "
"following format::"
msgstr ""

#: abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.findAt:29
#: abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.getSequenceFromMask:12
#: of
msgid ""
"An :py:class:`~abaqus.BasicGeometry.IgnoredVertex.IgnoredVertex` object "
"or a sequence of IgnoredVertex objects."
msgstr ""

#: abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.findAt:30
#: abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.getSequenceFromMask:13
#: of
msgid ":class:`IgnoredVertex`"
msgstr ""

#: abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.getClosest:6 of
msgid ""
"Check `IgnoredVertexArray.getClosest on help.3ds.com/2017 "
"<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-ignoredvertexarraypyc.htm?contextscope=all"
"#simaker-ignoredvertexarraygetclosestpyc>`__."
msgstr ""

#: abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.getClosest:9 of
msgid ""
"A sequence of a sequence of floats, where each sequence of floats "
"describes the **X**-, **Y**-, and **Z**-coordinates of a point::      >>>"
" r=e.getClosest(coordinates=((20.0, 20.0, 10.0),(-1.0, -15.0, 15), ))"
"     >>> r.keys()     [0, 1]     >>> r[0]     "
"(mdb.models['Model-1'].parts['Part-1'].ignoredVertices[3], "
"(15.7090625762939, 20.0, 10.0))"
msgstr ""

#: abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.getClosest:21 of
msgid ""
"This method returns a dictionary object. The key to the dictionary object"
" is the position of the input point in the tuple specified in the "
"**coordinates** starting at index 0. If a closest IgnoredVertex could be "
"found then the value is a sequence consisting of two objects. The first "
"object in the sequence is a IgnoredVertex that is close to the input "
"point referred to by the key. The second object in the sequence, is a "
"sequence of floats which specify the **X**-, **Y**-, and **Z**- location "
"of the IgnoredVertex. See program listing above."
msgstr ""

#: abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.getSequenceFromMask:1
#: of
msgid ""
"This method returns the object or objects in the IgnoredVertexArray "
"identified using the specified **mask**. This command is generated when "
"the JournalOptions are set to COMPRESSEDINDEX. When large number of "
"objects are involved, this method is highly efficient."
msgstr ""

#: abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.getSequenceFromMask:7
#: of
msgid ""
"Check `IgnoredVertexArray.getSequenceFromMask on help.3ds.com/2017 "
"<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-ignoredvertexarraypyc.htm?contextscope=all"
"#simaker-ignoredvertexarraygetsequencefrommaskpyc>`__."
msgstr ""

#: ../../reference/mdb/model/part_assembly/geometry.rst:91
msgid "InterestingPoint"
msgstr ""

#: abaqus.BasicGeometry.InterestingPoint.InterestingPoint:1 of
msgid "Interesting points can be located at the following:"
msgstr ""

#: abaqus.BasicGeometry.InterestingPoint.InterestingPoint:3 of
msgid "The middle of an edge."
msgstr ""

#: abaqus.BasicGeometry.InterestingPoint.InterestingPoint:4 of
msgid "The middle of an arc."
msgstr ""

#: abaqus.BasicGeometry.InterestingPoint.InterestingPoint:5 of
msgid "The center of an arc."
msgstr ""

#: abaqus.BasicGeometry.InterestingPoint.InterestingPoint:7 of
msgid ""
"An :py:class:`~abaqus.BasicGeometry.InterestingPoint.InterestingPoint` "
"object is a temporary object and cannot be accessed from the Mdb object."
msgstr ""

#: abaqus.BasicGeometry.InterestingPoint.InterestingPoint:17 of
msgid ""
"Check `InterestingPoint on help.3ds.com/2017 "
"<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-interestingpointpyc.htm?contextscope=all>`__."
msgstr ""

#: ../../None:3:<autosummary>:1
msgid ""
":py:obj:`__init__ "
"<abaqus.BasicGeometry.InterestingPoint.InterestingPoint.__init__>`\\ "
"\\(edge\\, rule\\)"
msgstr ""

#: ../../None:3:<autosummary>:1
msgid "This method creates an interesting point along an edge."
msgstr ""

#: ../../reference/mdb/model/part_assembly/geometry.rst:99
msgid "ModelDot"
msgstr ""

#: abaqus.BasicGeometry.ModelDot.ModelDot:1 of
msgid ""
"The ModelDot object can be used to access an actual MeshNode, "
"ReferencePoint, or ConstrainedSketchVertex object."
msgstr ""

#: abaqus.BasicGeometry.ModelDot.ModelDot:5 of
msgid ""
"Check `ModelDot on help.3ds.com/2017 "
"<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-modeldotpyc.htm?contextscope=all>`__."
msgstr ""

#: ../../reference/mdb/model/part_assembly/geometry.rst:107
msgid "ModelDotArray"
msgstr ""

#: ../../reference/mdb/model/part_assembly/geometry.rst:115
msgid "ReferencePoint"
msgstr ""

#: abaqus.BasicGeometry.ReferencePoint.ReferencePoint:1 of
msgid ""
"The ReferencePoint object has no direct constructor; it is created when a"
" Feature object is created. The ReferencePoint method creates a Feature "
"object that creates a ReferencePoint object."
msgstr ""

#: abaqus.BasicGeometry.ReferencePoint.ReferencePoint:26 of
msgid ""
"Check `ReferencePoint on help.3ds.com/2017 "
"<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-referencepointpyc.htm?contextscope=all>`__."
msgstr ""

#: ../../None:3:<autosummary>:1
msgid ""
":py:obj:`__init__ "
"<abaqus.BasicGeometry.ReferencePoint.ReferencePoint.__init__>`\\ "
"\\(point\\[\\, instanceName\\]\\)"
msgstr ""

#: ../../None:3:<autosummary>:1
msgid ""
"This method creates a Feature object and a ReferencePoint object at the "
"specified location."
msgstr ""

#: ../../reference/mdb/model/part_assembly/geometry.rst:123
msgid "ReferencePointArray"
msgstr ""

#: ../../reference/mdb/model/part_assembly/geometry.rst:131
msgid "ReferencePoints"
msgstr ""

#: ../../None:34:<autosummary>:1 ../../None:3:<autosummary>:1
msgid ""
":py:obj:`__getitem__ "
"<abaqus.BasicGeometry.ReferencePoints.ReferencePoints.__getitem__>`\\ "
"\\(key\\)"
msgstr ""

#: ../../None:34:<autosummary>:1
msgid ""
":py:obj:`__repr__ "
"<abaqus.BasicGeometry.ReferencePoints.ReferencePoints.__repr__>`\\ \\(\\)"
msgstr ""

#: ../../None:34:<autosummary>:1
msgid ""
":py:obj:`__getattribute__ "
"<abaqus.BasicGeometry.ReferencePoints.ReferencePoints.__getattribute__>`\\"
" \\(name\\, \\/\\)"
msgstr ""

#: ../../None:34:<autosummary>:1
msgid ""
":py:obj:`__lt__ "
"<abaqus.BasicGeometry.ReferencePoints.ReferencePoints.__lt__>`\\ "
"\\(value\\, \\/\\)"
msgstr ""

#: ../../None:34:<autosummary>:1
msgid ""
":py:obj:`__le__ "
"<abaqus.BasicGeometry.ReferencePoints.ReferencePoints.__le__>`\\ "
"\\(value\\, \\/\\)"
msgstr ""

#: ../../None:34:<autosummary>:1
msgid ""
":py:obj:`__eq__ "
"<abaqus.BasicGeometry.ReferencePoints.ReferencePoints.__eq__>`\\ "
"\\(value\\, \\/\\)"
msgstr ""

#: ../../None:34:<autosummary>:1
msgid ""
":py:obj:`__ne__ "
"<abaqus.BasicGeometry.ReferencePoints.ReferencePoints.__ne__>`\\ "
"\\(value\\, \\/\\)"
msgstr ""

#: ../../None:34:<autosummary>:1
msgid ""
":py:obj:`__gt__ "
"<abaqus.BasicGeometry.ReferencePoints.ReferencePoints.__gt__>`\\ "
"\\(value\\, \\/\\)"
msgstr ""

#: ../../None:34:<autosummary>:1
msgid ""
":py:obj:`__ge__ "
"<abaqus.BasicGeometry.ReferencePoints.ReferencePoints.__ge__>`\\ "
"\\(value\\, \\/\\)"
msgstr ""

#: ../../None:34:<autosummary>:1
msgid ""
":py:obj:`__iter__ "
"<abaqus.BasicGeometry.ReferencePoints.ReferencePoints.__iter__>`\\ \\(\\)"
msgstr ""

#: ../../None:34:<autosummary>:1
msgid ""
":py:obj:`__init__ "
"<abaqus.BasicGeometry.ReferencePoints.ReferencePoints.__init__>`\\ "
"\\(\\*args\\, \\*\\*kwargs\\)"
msgstr ""

#: ../../None:34:<autosummary>:1
msgid ""
":py:obj:`__or__ "
"<abaqus.BasicGeometry.ReferencePoints.ReferencePoints.__or__>`\\ "
"\\(value\\, \\/\\)"
msgstr ""

#: ../../None:34:<autosummary>:1
msgid "Return self|value."
msgstr ""

#: ../../None:34:<autosummary>:1
msgid ""
":py:obj:`__ror__ "
"<abaqus.BasicGeometry.ReferencePoints.ReferencePoints.__ror__>`\\ "
"\\(value\\, \\/\\)"
msgstr ""

#: ../../None:34:<autosummary>:1
msgid "Return value|self."
msgstr ""

#: ../../None:34:<autosummary>:1
msgid ""
":py:obj:`__ior__ "
"<abaqus.BasicGeometry.ReferencePoints.ReferencePoints.__ior__>`\\ "
"\\(value\\, \\/\\)"
msgstr ""

#: ../../None:34:<autosummary>:1
msgid "Return self|=value."
msgstr ""

#: ../../None:34:<autosummary>:1
msgid ""
":py:obj:`__len__ "
"<abaqus.BasicGeometry.ReferencePoints.ReferencePoints.__len__>`\\ \\(\\)"
msgstr ""

#: ../../None:34:<autosummary>:1
msgid ""
":py:obj:`__setitem__ "
"<abaqus.BasicGeometry.ReferencePoints.ReferencePoints.__setitem__>`\\ "
"\\(key\\, value\\, \\/\\)"
msgstr ""

#: ../../None:34:<autosummary>:1
msgid ""
":py:obj:`__delitem__ "
"<abaqus.BasicGeometry.ReferencePoints.ReferencePoints.__delitem__>`\\ "
"\\(key\\, \\/\\)"
msgstr ""

#: ../../None:34:<autosummary>:1
msgid ""
":py:obj:`__contains__ "
"<abaqus.BasicGeometry.ReferencePoints.ReferencePoints.__contains__>`\\ "
"\\(key\\, \\/\\)"
msgstr ""

#: ../../None:34:<autosummary>:1
msgid "True if the dictionary has the specified key, else False."
msgstr ""

#: ../../None:34:<autosummary>:1
msgid ""
":py:obj:`__sizeof__ "
"<abaqus.BasicGeometry.ReferencePoints.ReferencePoints.__sizeof__>`\\ "
"\\(\\)"
msgstr ""

#: ../../None:34:<autosummary>:1
msgid ""
":py:obj:`get "
"<abaqus.BasicGeometry.ReferencePoints.ReferencePoints.get>`\\ "
"\\(key\\[\\, default\\]\\)"
msgstr ""

#: ../../None:34:<autosummary>:1
msgid "Return the value for key if key is in the dictionary, else default."
msgstr ""

#: ../../None:34:<autosummary>:1
msgid ""
":py:obj:`setdefault "
"<abaqus.BasicGeometry.ReferencePoints.ReferencePoints.setdefault>`\\ "
"\\(key\\[\\, default\\]\\)"
msgstr ""

#: ../../None:34:<autosummary>:1
msgid "Insert key with a value of default if key is not in the dictionary."
msgstr ""

#: ../../None:34:<autosummary>:1
msgid ""
":py:obj:`pop "
"<abaqus.BasicGeometry.ReferencePoints.ReferencePoints.pop>`\\ "
"\\(k\\[\\,d\\]\\)"
msgstr ""

#: ../../None:34:<autosummary>:1
msgid ""
"If key is not found, default is returned if given, otherwise KeyError is "
"raised"
msgstr ""

#: ../../None:34:<autosummary>:1
msgid ""
":py:obj:`popitem "
"<abaqus.BasicGeometry.ReferencePoints.ReferencePoints.popitem>`\\ \\(\\)"
msgstr ""

#: ../../None:34:<autosummary>:1
msgid "Remove and return a (key, value) pair as a 2-tuple."
msgstr ""

#: ../../None:34:<autosummary>:1
msgid ""
":py:obj:`keys "
"<abaqus.BasicGeometry.ReferencePoints.ReferencePoints.keys>`\\ \\(\\)"
msgstr ""

#: ../../None:34:<autosummary>:1
msgid ""
":py:obj:`items "
"<abaqus.BasicGeometry.ReferencePoints.ReferencePoints.items>`\\ \\(\\)"
msgstr ""

#: ../../None:34:<autosummary>:1
msgid ""
":py:obj:`values "
"<abaqus.BasicGeometry.ReferencePoints.ReferencePoints.values>`\\ \\(\\)"
msgstr ""

#: ../../None:34:<autosummary>:1
msgid ""
":py:obj:`update "
"<abaqus.BasicGeometry.ReferencePoints.ReferencePoints.update>`\\ "
"\\(\\[E\\, \\]\\*\\*F\\)"
msgstr ""

#: ../../None:34:<autosummary>:1
msgid ""
"If E is present and has a .keys() method, then does:  for k in E: D[k] = "
"E[k] If E is present and lacks a .keys() method, then does:  for k, v in "
"E: D[k] = v In either case, this is followed by: for k in F:  D[k] = F[k]"
msgstr ""

#: ../../None:34:<autosummary>:1
msgid ""
":py:obj:`fromkeys "
"<abaqus.BasicGeometry.ReferencePoints.ReferencePoints.fromkeys>`\\ "
"\\(\\[value\\]\\)"
msgstr ""

#: ../../None:34:<autosummary>:1
msgid "Create a new dictionary with keys from iterable and values set to value."
msgstr ""

#: ../../None:34:<autosummary>:1
msgid ""
":py:obj:`clear "
"<abaqus.BasicGeometry.ReferencePoints.ReferencePoints.clear>`\\ \\(\\)"
msgstr ""

#: ../../None:34:<autosummary>:1
msgid ""
":py:obj:`copy "
"<abaqus.BasicGeometry.ReferencePoints.ReferencePoints.copy>`\\ \\(\\)"
msgstr ""

#: ../../None:34:<autosummary>:1
msgid ""
":py:obj:`__reversed__ "
"<abaqus.BasicGeometry.ReferencePoints.ReferencePoints.__reversed__>`\\ "
"\\(\\)"
msgstr ""

#: ../../None:34:<autosummary>:1
msgid "Return a reverse iterator over the dict keys."
msgstr ""

#: ../../None:34:<autosummary>:1 ../../None:4:<autosummary>:1
msgid ""
":py:obj:`__class_getitem__ "
"<abaqus.BasicGeometry.ReferencePoints.ReferencePoints.__class_getitem__>`\\"
msgstr ""

#: ../../None:4:<autosummary>:1
msgid ""
":py:obj:`__init_subclass__ "
"<abaqus.BasicGeometry.ReferencePoints.ReferencePoints.__init_subclass__>`\\"
" \\(\\*args\\, \\*\\*kwargs\\)"
msgstr ""

#: ../../None:3:<autosummary>:1
msgid ""
":py:obj:`_is_protocol "
"<abaqus.BasicGeometry.ReferencePoints.ReferencePoints._is_protocol>`\\"
msgstr ""

#: ../../reference/mdb/model/part_assembly/geometry.rst:139
msgid "Transform"
msgstr ""

#: abaqus.BasicGeometry.Transform.Transform:1 of
msgid ""
"The MakeSketchTransform method creates a Transform object. The Transform "
"object has no direct constructor. A "
":py:class:`~abaqus.BasicGeometry.Transform.Transform` object is a 4×3 "
"matrix of Floats that represents the transformation from sketch "
"coordinates to assembly coordinates or to part coordinates."
msgstr ""

#: abaqus.BasicGeometry.Transform.Transform:12 of
msgid ""
"Check `Transform on help.3ds.com/2017 "
"<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-transformpyc.htm?contextscope=all>`__."
msgstr ""

#: ../../None:3:<autosummary>:1
msgid ""
":py:obj:`matrix <abaqus.BasicGeometry.Transform.Transform.matrix>`\\ "
"\\(\\)"
msgstr ""

#: ../../None:3:<autosummary>:1
#: abaqus.BasicGeometry.Transform.Transform.matrix:1 of
msgid "This method returns the transformation matrix as a tuple of 12 Floats."
msgstr ""

#: abaqus.BasicGeometry.Transform.Transform.matrix:3 of
msgid "A tuple of 12 Floats."
msgstr ""

#: abaqus.BasicGeometry.Transform.Transform.matrix:4 of
msgid ""
":class:`Tuple[float`, :class:`float`, :class:`float`, :class:`float`, "
":class:`float`, :class:`float`, :class:`float`, :class:`float`, "
":class:`float`, :class:`float`, :class:`float`, :class:`float]`"
msgstr ""

#: ../../reference/mdb/model/part_assembly/geometry.rst:147
msgid "Vertex"
msgstr ""

#: abaqus.BasicGeometry.Vertex.Vertex:1 of
msgid "Vertices are point regions of geometry."
msgstr ""

#: abaqus.BasicGeometry.Vertex.Vertex:24 of
msgid ""
"Check `Vertex on help.3ds.com/2017 "
"<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-vertexpyc.htm?contextscope=all>`__."
msgstr ""

#: ../../None:7:<autosummary>:1
msgid ":py:obj:`index <abaqus.BasicGeometry.Vertex.Vertex.index>`\\"
msgstr ""

#: ../../None:7:<autosummary>:1 ../../docstring
#: abaqus.BasicGeometry.Vertex.Vertex.index:1 of
msgid ""
"An Int specifying the index of the ConstrainedSketchVertex in the "
"VertexArray."
msgstr ""

#: ../../None:7:<autosummary>:1
msgid ""
":py:obj:`isReferenceRep "
"<abaqus.BasicGeometry.Vertex.Vertex.isReferenceRep>`\\"
msgstr ""

#: ../../None:7:<autosummary>:1 ../../docstring
#: abaqus.BasicGeometry.Vertex.Vertex.isReferenceRep:1 of
msgid ""
"A Boolean specifying whether the vertex belongs to the reference "
"representation of the Part or Instance."
msgstr ""

#: ../../None:7:<autosummary>:1
msgid ":py:obj:`pointOn <abaqus.BasicGeometry.Vertex.Vertex.pointOn>`\\"
msgstr ""

#: ../../None:7:<autosummary>:1 ../../docstring
#: abaqus.BasicGeometry.Vertex.Vertex.pointOn:1 of
msgid ""
"A tuple of Floats specifying the **X** -, **Y** -, and **Z** -coordinates"
" of the vertex."
msgstr ""

#: ../../None:7:<autosummary>:1
msgid ":py:obj:`featureName <abaqus.BasicGeometry.Vertex.Vertex.featureName>`\\"
msgstr ""

#: ../../None:7:<autosummary>:1 ../../docstring
#: abaqus.BasicGeometry.Vertex.Vertex.featureName:1 of
msgid ""
"A tuple of Floats specifying the name of the feature that created this "
"vertex."
msgstr ""

#: ../../None:7:<autosummary>:1
msgid ":py:obj:`instanceName <abaqus.BasicGeometry.Vertex.Vertex.instanceName>`\\"
msgstr ""

#: ../../None:7:<autosummary>:1 ../../docstring
#: abaqus.BasicGeometry.Vertex.Vertex.instanceName:1 of
msgid ""
"A tuple of Floats specifying the name of the part instance for this "
"vertex (if applicable)."
msgstr ""

#: ../../None:5:<autosummary>:1
msgid ":py:obj:`getEdges <abaqus.BasicGeometry.Vertex.Vertex.getEdges>`\\ \\(\\)"
msgstr ""

#: ../../None:5:<autosummary>:1 abaqus.BasicGeometry.Vertex.Vertex.getEdges:1
#: of
msgid ""
"This method returns a sequence consisting of the edge ids of the edges "
"which share this vertex."
msgstr ""

#: ../../None:5:<autosummary>:1
msgid ":py:obj:`getNodes <abaqus.BasicGeometry.Vertex.Vertex.getNodes>`\\ \\(\\)"
msgstr ""

#: ../../None:5:<autosummary>:1 abaqus.BasicGeometry.Vertex.Vertex.getNodes:1
#: of
msgid ""
"This method returns an array of node objects that are associated with the"
" vertex."
msgstr ""

#: ../../None:5:<autosummary>:1
msgid ""
":py:obj:`getElements <abaqus.BasicGeometry.Vertex.Vertex.getElements>`\\ "
"\\(\\)"
msgstr ""

#: ../../None:5:<autosummary>:1
#: abaqus.BasicGeometry.Vertex.Vertex.getElements:1 of
msgid ""
"This method returns an array of element objects that are associated with "
"the vertex."
msgstr ""

#: ../../reference/mdb/model/part_assembly/geometry.rst:155
msgid "VertexArray"
msgstr ""

#: abaqus.BasicGeometry.VertexArray.VertexArray:1 of
msgid ""
"The VertexArray is a sequence of ConstrainedSketchVertex objects. If the "
"part is modified, then VertexArray must be updated for that part."
msgstr ""

#: abaqus.BasicGeometry.VertexArray.VertexArray:25 of
msgid ""
"Check `VertexArray on help.3ds.com/2017 "
"<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-vertexarraypyc.htm?contextscope=all>`__."
msgstr ""

#: ../../None:11:<autosummary>:1 ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__init__ "
"<abaqus.BasicGeometry.VertexArray.VertexArray.__init__>`\\ \\(vertices\\)"
msgstr ""

#: ../../None:11:<autosummary>:1 ../../None:36:<autosummary>:1
msgid "This method creates a VertexArray object."
msgstr ""

#: ../../None:11:<autosummary>:1
msgid ""
":py:obj:`findAt <abaqus.BasicGeometry.VertexArray.VertexArray.findAt>`\\ "
"\\(coordinates\\[\\, printWarning\\]\\)"
msgstr ""

#: ../../None:11:<autosummary>:1
msgid ""
"This method returns the object or objects in the VertexArray located at "
"the given coordinates."
msgstr ""

#: ../../None:11:<autosummary>:1
msgid ""
":py:obj:`getSequenceFromMask "
"<abaqus.BasicGeometry.VertexArray.VertexArray.getSequenceFromMask>`\\ "
"\\(mask\\)"
msgstr ""

#: ../../None:11:<autosummary>:1
msgid ""
"This method returns the object or objects in the VertexArray identified "
"using the specified **mask**."
msgstr ""

#: ../../None:11:<autosummary>:1
msgid ""
":py:obj:`getMask "
"<abaqus.BasicGeometry.VertexArray.VertexArray.getMask>`\\ \\(\\)"
msgstr ""

#: ../../None:11:<autosummary>:1
msgid ""
":py:obj:`getByBoundingBox "
"<abaqus.BasicGeometry.VertexArray.VertexArray.getByBoundingBox>`\\ "
"\\(\\[xMin\\, yMin\\, zMin\\, xMax\\, ...\\]\\)"
msgstr ""

#: ../../None:11:<autosummary>:1
#: abaqus.BasicGeometry.VertexArray.VertexArray.getByBoundingBox:1 of
msgid ""
"This method returns an array of vertex objects that lie within the "
"specified bounding box."
msgstr ""

#: ../../None:11:<autosummary>:1
msgid ""
":py:obj:`getByBoundingCylinder "
"<abaqus.BasicGeometry.VertexArray.VertexArray.getByBoundingCylinder>`\\ "
"\\(center1\\, center2\\, radius\\)"
msgstr ""

#: ../../None:11:<autosummary>:1
#: abaqus.BasicGeometry.VertexArray.VertexArray.getByBoundingCylinder:1 of
msgid ""
"This method returns an array of vertex objects that lie within the "
"specified bounding cylinder."
msgstr ""

#: ../../None:11:<autosummary>:1
msgid ""
":py:obj:`getByBoundingSphere "
"<abaqus.BasicGeometry.VertexArray.VertexArray.getByBoundingSphere>`\\ "
"\\(center\\, radius\\)"
msgstr ""

#: ../../None:11:<autosummary>:1
#: abaqus.BasicGeometry.VertexArray.VertexArray.getByBoundingSphere:1 of
msgid ""
"This method returns an array of vertex objects that lie within the "
"specified bounding sphere."
msgstr ""

#: ../../None:11:<autosummary>:1
msgid ""
":py:obj:`getBoundingBox "
"<abaqus.BasicGeometry.VertexArray.VertexArray.getBoundingBox>`\\ \\(\\)"
msgstr ""

#: ../../None:11:<autosummary>:1
#: abaqus.BasicGeometry.VertexArray.VertexArray.getBoundingBox:1 of
msgid ""
"This method returns a dictionary of two tuples representing minimum and "
"maximum boundary values of the bounding box of the minimum size "
"containing the vertex sequence."
msgstr ""

#: ../../None:11:<autosummary>:1
msgid ""
":py:obj:`getClosest "
"<abaqus.BasicGeometry.VertexArray.VertexArray.getClosest>`\\ "
"\\(coordinates\\[\\, searchTolerance\\]\\)"
msgstr ""

#: ../../None:11:<autosummary>:1
#: abaqus.BasicGeometry.VertexArray.VertexArray.getClosest:1 of
msgid ""
"This method returns a object or objects in the VertexArray closest to the"
" given set of points, where the given points need not lie on "
"ConstrainedSketchVertex objects in the VertexArray."
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__repr__ "
"<abaqus.BasicGeometry.VertexArray.VertexArray.__repr__>`\\ \\(\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__getattribute__ "
"<abaqus.BasicGeometry.VertexArray.VertexArray.__getattribute__>`\\ "
"\\(name\\, \\/\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__lt__ <abaqus.BasicGeometry.VertexArray.VertexArray.__lt__>`\\ "
"\\(value\\, \\/\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__le__ <abaqus.BasicGeometry.VertexArray.VertexArray.__le__>`\\ "
"\\(value\\, \\/\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__eq__ <abaqus.BasicGeometry.VertexArray.VertexArray.__eq__>`\\ "
"\\(value\\, \\/\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__ne__ <abaqus.BasicGeometry.VertexArray.VertexArray.__ne__>`\\ "
"\\(value\\, \\/\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__gt__ <abaqus.BasicGeometry.VertexArray.VertexArray.__gt__>`\\ "
"\\(value\\, \\/\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__ge__ <abaqus.BasicGeometry.VertexArray.VertexArray.__ge__>`\\ "
"\\(value\\, \\/\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__iter__ "
"<abaqus.BasicGeometry.VertexArray.VertexArray.__iter__>`\\ \\(\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__len__ "
"<abaqus.BasicGeometry.VertexArray.VertexArray.__len__>`\\ \\(\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__getitem__ "
"<abaqus.BasicGeometry.VertexArray.VertexArray.__getitem__>`\\"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__setitem__ "
"<abaqus.BasicGeometry.VertexArray.VertexArray.__setitem__>`\\ \\(key\\, "
"value\\, \\/\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__delitem__ "
"<abaqus.BasicGeometry.VertexArray.VertexArray.__delitem__>`\\ \\(key\\, "
"\\/\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__add__ "
"<abaqus.BasicGeometry.VertexArray.VertexArray.__add__>`\\ \\(value\\, "
"\\/\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__mul__ "
"<abaqus.BasicGeometry.VertexArray.VertexArray.__mul__>`\\ \\(value\\, "
"\\/\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__rmul__ "
"<abaqus.BasicGeometry.VertexArray.VertexArray.__rmul__>`\\ \\(value\\, "
"\\/\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__contains__ "
"<abaqus.BasicGeometry.VertexArray.VertexArray.__contains__>`\\ \\(key\\, "
"\\/\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__iadd__ "
"<abaqus.BasicGeometry.VertexArray.VertexArray.__iadd__>`\\ \\(value\\, "
"\\/\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__imul__ "
"<abaqus.BasicGeometry.VertexArray.VertexArray.__imul__>`\\ \\(value\\, "
"\\/\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__reversed__ "
"<abaqus.BasicGeometry.VertexArray.VertexArray.__reversed__>`\\ \\(\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`__sizeof__ "
"<abaqus.BasicGeometry.VertexArray.VertexArray.__sizeof__>`\\ \\(\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`clear <abaqus.BasicGeometry.VertexArray.VertexArray.clear>`\\ "
"\\(\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`copy <abaqus.BasicGeometry.VertexArray.VertexArray.copy>`\\ "
"\\(\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`append <abaqus.BasicGeometry.VertexArray.VertexArray.append>`\\ "
"\\(object\\, \\/\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`insert <abaqus.BasicGeometry.VertexArray.VertexArray.insert>`\\ "
"\\(index\\, object\\, \\/\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`extend <abaqus.BasicGeometry.VertexArray.VertexArray.extend>`\\ "
"\\(iterable\\, \\/\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`pop <abaqus.BasicGeometry.VertexArray.VertexArray.pop>`\\ "
"\\(\\[index\\]\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`remove <abaqus.BasicGeometry.VertexArray.VertexArray.remove>`\\ "
"\\(value\\, \\/\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`index <abaqus.BasicGeometry.VertexArray.VertexArray.index>`\\ "
"\\(value\\[\\, start\\, stop\\]\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`count <abaqus.BasicGeometry.VertexArray.VertexArray.count>`\\ "
"\\(value\\, \\/\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`reverse "
"<abaqus.BasicGeometry.VertexArray.VertexArray.reverse>`\\ \\(\\)"
msgstr ""

#: ../../None:36:<autosummary>:1
msgid ""
":py:obj:`sort <abaqus.BasicGeometry.VertexArray.VertexArray.sort>`\\ "
"\\(\\*\\[\\, key\\, reverse\\]\\)"
msgstr ""

#: ../../None:36:<autosummary>:1 ../../None:4:<autosummary>:1
msgid ""
":py:obj:`__class_getitem__ "
"<abaqus.BasicGeometry.VertexArray.VertexArray.__class_getitem__>`\\"
msgstr ""

#: ../../None:4:<autosummary>:1
msgid ""
":py:obj:`__init_subclass__ "
"<abaqus.BasicGeometry.VertexArray.VertexArray.__init_subclass__>`\\ "
"\\(\\*args\\, \\*\\*kwargs\\)"
msgstr ""

#: ../../None:3:<autosummary>:1
msgid ""
":py:obj:`_is_protocol "
"<abaqus.BasicGeometry.VertexArray.VertexArray._is_protocol>`\\"
msgstr ""

#: abaqus.BasicGeometry.VertexArray.VertexArray.findAt:1 of
msgid ""
"This method returns the object or objects in the VertexArray located at "
"the given coordinates. findAt initially uses the ACIS tolerance of 1E-6. "
"As a result, findAt returns any ConstrainedSketchVertex object that is at"
" the arbitrary point specified or at a distance of less than 1E-6 from "
"the arbitrary point. If nothing is found, findAt uses the tolerance for "
"imprecise geometry (applicable only for imprecise geometric entities). "
"findAt will always try to find objects among all the vertices in the part"
" or assembly instance and will not restrict itself to a subset even if "
"the VertexArray represents such subset."
msgstr ""

#: abaqus.BasicGeometry.VertexArray.VertexArray.findAt:12 of
msgid ""
"Check `VertexArray.findAt on help.3ds.com/2017 "
"<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-vertexarraypyc.htm?contextscope=all"
"#simaker-vertexarrayfindatpyc>`__."
msgstr ""

#: abaqus.BasicGeometry.VertexArray.VertexArray.findAt:15 of
msgid ""
"A sequence of Floats specifying the **X**-, **Y**-, and **Z**-coordinates"
" of the object to find.findAt returns either a ConstrainedSketchVertex "
"object or a sequence of ConstrainedSketchVertex objects based on the type"
" of input.If **coordinates** is a sequence of Floats, findAt returns the "
"ConstrainedSketchVertex object at that point.If you omit the "
"**coordinates** keyword argument, findAt accepts as arguments a sequence "
"of sequence of floats in the following format::      verts = "
"v.findAt(((20.19686, -169.513997, 27.798593), ),                     "
"((19.657627, -167.295749, 27.056402), ),                     ((18.274129,"
" -157.144741, 25.15218), ))"
msgstr ""

#: abaqus.BasicGeometry.VertexArray.VertexArray.findAt:15 of
msgid ""
"A sequence of Floats specifying the **X**-, **Y**-, and **Z**-coordinates"
" of the object to find.findAt returns either a ConstrainedSketchVertex "
"object or a sequence of ConstrainedSketchVertex objects based on the type"
" of input.If **coordinates** is a sequence of Floats, findAt returns the "
"ConstrainedSketchVertex object at that point.If you omit the "
"**coordinates** keyword argument, findAt accepts as arguments a sequence "
"of sequence of floats in the following format::"
msgstr ""

#: abaqus.BasicGeometry.VertexArray.VertexArray.findAt:28
#: abaqus.BasicGeometry.VertexArray.VertexArray.getSequenceFromMask:12 of
msgid ""
"A "
":py:class:`~abaqus.Sketcher.ConstrainedSketchVertex.ConstrainedSketchVertex.ConstrainedSketchVertex`"
" object or a sequence of ConstrainedSketchVertex objects.."
msgstr ""

#: abaqus.BasicGeometry.VertexArray.VertexArray.findAt:29
#: abaqus.BasicGeometry.VertexArray.VertexArray.getSequenceFromMask:13 of
msgid ":class:`ConstrainedSketchVertex`"
msgstr ""

#: abaqus.BasicGeometry.VertexArray.VertexArray.getByBoundingBox:5 of
msgid ""
"Check `VertexArray.getByBoundingBox on help.3ds.com/2017 "
"<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-vertexarraypyc.htm?contextscope=all"
"#simaker-vertexarraygetbyboundingboxpyc>`__."
msgstr ""

#: abaqus.BasicGeometry.VertexArray.VertexArray.getByBoundingBox:20
#: abaqus.BasicGeometry.VertexArray.VertexArray.getByBoundingCylinder:16
#: abaqus.BasicGeometry.VertexArray.VertexArray.getByBoundingSphere:12 of
msgid ""
"A :py:class:`~abaqus.BasicGeometry.VertexArray.VertexArray` object, which"
" is a sequence of ConstrainedSketchVertex objects.."
msgstr ""

#: abaqus.BasicGeometry.VertexArray.VertexArray.getByBoundingBox:21
#: abaqus.BasicGeometry.VertexArray.VertexArray.getByBoundingCylinder:17
#: abaqus.BasicGeometry.VertexArray.VertexArray.getByBoundingSphere:13 of
msgid ":class:`VertexArray`"
msgstr ""

#: abaqus.BasicGeometry.VertexArray.VertexArray.getByBoundingCylinder:5 of
msgid ""
"Check `VertexArray.getByBoundingCylinder on help.3ds.com/2017 "
"<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-vertexarraypyc.htm?contextscope=all"
"#simaker-vertexarraygetbyboundingcylinderpyc>`__."
msgstr ""

#: abaqus.BasicGeometry.VertexArray.VertexArray.getByBoundingSphere:5 of
msgid ""
"Check `VertexArray.getByBoundingSphere on help.3ds.com/2017 "
"<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-vertexarraypyc.htm?contextscope=all"
"#simaker-vertexarraygetbyboundingspherepyc>`__."
msgstr ""

#: abaqus.BasicGeometry.VertexArray.VertexArray.getClosest:5 of
msgid ""
"Check `VertexArray.getClosest on help.3ds.com/2017 "
"<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-vertexarraypyc.htm?contextscope=all"
"#simaker-vertexarraygetclosestpyc>`__."
msgstr ""

#: abaqus.BasicGeometry.VertexArray.VertexArray.getClosest:8 of
msgid ""
"A sequence of a sequence of floats, where each sequence of floats "
"describes the **X**-, **Y**-, and **Z**-coordinates of a point::      >>>"
" r=v.getClosest(coordinates=((20.0, 20.0, 10.0),(-1.0, -15.0, 15), ))"
"     >>> r.keys()     [0, 1]     >>> r[0]     "
"(mdb.models['Model-1'].parts['Part-1'].vertices[0], (15.7090625762939, "
"29.1666641235352, 20.0))"
msgstr ""

#: abaqus.BasicGeometry.VertexArray.VertexArray.getClosest:20 of
msgid ""
"This method returns a dictionary object. The key to the dictionary object"
" is the position of the input point in the tuple specified in the "
"**coordinates** starting at index 0. If a closest vertex could be found "
"then the value is a sequence consisting of two objects. The first object "
"in the sequence is a ConstrainedSketchVertex that is close to the input "
"point referred to by the key. The second object in the sequence is a "
"sequence of floats that specifies the **X**-, **Y**-, and **Z**- location"
" of the ConstrainedSketchVertex. See program listing above."
msgstr ""

#: abaqus.BasicGeometry.VertexArray.VertexArray.getSequenceFromMask:1 of
msgid ""
"This method returns the object or objects in the VertexArray identified "
"using the specified **mask**. This command is generated when the "
"JournalOptions are set to COMPRESSEDINDEX. When a large number of objects"
" are involved, this method is highly efficient."
msgstr ""

#: abaqus.BasicGeometry.VertexArray.VertexArray.getSequenceFromMask:7 of
msgid ""
"Check `VertexArray.getSequenceFromMask on help.3ds.com/2017 "
"<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-vertexarraypyc.htm?contextscope=all"
"#simaker-vertexarraygetsequencefrommaskpyc>`__."
msgstr ""

#~ msgid ""
#~ "Check `Cell on help.3ds.com/2017 "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-cellpyc.htm?contextscope=all>`_."
#~ msgstr ""

#~ msgid ""
#~ "Check `Cell.getSize() on help.3ds.com/2017 "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-cellpyc.htm?contextscope=all"
#~ "#simaker-cellgetsizepyc>`_."
#~ msgstr ""

#~ msgid ""
#~ "Check `CellArray on help.3ds.com/2017 "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-cellarraypyc.htm?contextscope=all>`_."
#~ msgstr ""

#~ msgid ""
#~ "Check `CellArray.findAt() on help.3ds.com/2017 "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-cellarraypyc.htm?contextscope=all"
#~ "#simaker-cellarrayfindatpyc>`_."
#~ msgstr ""

#~ msgid ""
#~ "Check `CellArray.getByBoundingBox() on "
#~ "help.3ds.com/2017 "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-cellarraypyc.htm?contextscope=all"
#~ "#simaker-cellarraygetbyboundingboxpyc>`_."
#~ msgstr ""

#~ msgid ""
#~ "Check `CellArray.getByBoundingCylinder() on "
#~ "help.3ds.com/2017 "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-cellarraypyc.htm?contextscope=all"
#~ "#simaker-cellarraygetbyboundingcylinderpyc>`_."
#~ msgstr ""

#~ msgid ""
#~ "Check `CellArray.getByBoundingSphere() on "
#~ "help.3ds.com/2017 "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-cellarraypyc.htm?contextscope=all"
#~ "#simaker-cellarraygetbyboundingspherepyc>`_."
#~ msgstr ""

#~ msgid ""
#~ "Check `CellArray.getSequenceFromMask() on "
#~ "help.3ds.com/2017 "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-cellarraypyc.htm?contextscope=all"
#~ "#simaker-cellarraygetsequencefrommaskpyc>`_."
#~ msgstr ""

#~ msgid ""
#~ "Check `Edge on help.3ds.com/2017 "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-edgepyc.htm?contextscope=all>`_."
#~ msgstr ""

#~ msgid ""
#~ "Check `Edge.getCurvature() on help.3ds.com/2017 "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-edgepyc.htm?contextscope=all"
#~ "#simaker-edgegetcurvaturepyc>`_."
#~ msgstr ""

#~ msgid ""
#~ "Check `Edge.getEdgesByEdgeAngle() on "
#~ "help.3ds.com/2017 "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-edgepyc.htm?contextscope=all"
#~ "#simaker-edgegetedgesbyedgeanglepyc>`_."
#~ msgstr ""

#~ msgid ""
#~ "Check `Edge.getSize() on help.3ds.com/2017 "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-edgepyc.htm?contextscope=all"
#~ "#simaker-edgegetsizepyc>`_."
#~ msgstr ""

#~ msgid ""
#~ "Check `EdgeArray on help.3ds.com/2017 "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-edgearraypyc.htm?contextscope=all>`_."
#~ msgstr ""

#~ msgid ""
#~ "Check `EdgeArray.findAt() on help.3ds.com/2017 "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-edgearraypyc.htm?contextscope=all"
#~ "#simaker-edgearrayfindatpyc>`_."
#~ msgstr ""

#~ msgid ""
#~ "Check `EdgeArray.getByBoundingBox() on "
#~ "help.3ds.com/2017 "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-edgearraypyc.htm?contextscope=all"
#~ "#simaker-edgearraygetbyboundingboxpyc>`_."
#~ msgstr ""

#~ msgid ""
#~ "Check `EdgeArray.getByBoundingCylinder() on "
#~ "help.3ds.com/2017 "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-edgearraypyc.htm?contextscope=all"
#~ "#simaker-edgearraygetbyboundingcylinderpyc>`_."
#~ msgstr ""

#~ msgid ""
#~ "Check `EdgeArray.getByBoundingSphere() on "
#~ "help.3ds.com/2017 "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-edgearraypyc.htm?contextscope=all"
#~ "#simaker-edgearraygetbyboundingspherepyc>`_."
#~ msgstr ""

#~ msgid ""
#~ "Check `EdgeArray.getClosest() on help.3ds.com/2017"
#~ " "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-edgearraypyc.htm?contextscope=all"
#~ "#simaker-edgearraygetclosestpyc>`_."
#~ msgstr ""

#~ msgid ""
#~ "This method returns a dictionary object."
#~ " The key to the dictionary object "
#~ "is the position of the input point"
#~ " in the tuple specified in the "
#~ "**coordinates** starting at index 0. If"
#~ " a closest edge could be found "
#~ "then the value is a sequence "
#~ "consisting of two objects. The first "
#~ "object in the sequence is an Edge"
#~ " that is close to the input "
#~ "point referred to by the key. The"
#~ " second object in the sequence is "
#~ "a sequence of floats that specifies "
#~ "the **X**-, **Y**-, and **Z**-location "
#~ "of the closest point on the Edge"
#~ " to the given point. See program "
#~ "listing above."
#~ msgstr ""

#~ msgid ""
#~ "Check `EdgeArray.getSequenceFromMask() on "
#~ "help.3ds.com/2017 "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-edgearraypyc.htm?contextscope=all"
#~ "#simaker-edgearraygetsequencefrommaskpyc>`_."
#~ msgstr ""

#~ msgid ""
#~ "Check `Face on help.3ds.com/2017 "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-facepyc.htm?contextscope=all>`_."
#~ msgstr ""

#~ msgid ""
#~ "Check `Face.getCurvature() on help.3ds.com/2017 "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-facepyc.htm?contextscope=all"
#~ "#simaker-facegetcurvaturepyc>`_."
#~ msgstr ""

#~ msgid ""
#~ "Check `Face.getElementFaces() on help.3ds.com/2017"
#~ " "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-facepyc.htm?contextscope=all"
#~ "#simaker-facegetelementfacespyc>`_."
#~ msgstr ""

#~ msgid ""
#~ "Check `Face.getFacesByFaceAngle() on "
#~ "help.3ds.com/2017 "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-facepyc.htm?contextscope=all"
#~ "#simaker-facegetfacesbyfaceanglepyc>`_."
#~ msgstr ""

#~ msgid ""
#~ "Check `Face.getNodes() on help.3ds.com/2017 "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-facepyc.htm?contextscope=all"
#~ "#simaker-facegetnodespyc>`_."
#~ msgstr ""

#~ msgid ""
#~ "Check `Face.getNormal() on help.3ds.com/2017 "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-facepyc.htm?contextscope=all"
#~ "#simaker-facegetnormalpyc>`_."
#~ msgstr ""

#~ msgid ""
#~ "Check `Face.getSize() on help.3ds.com/2017 "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-facepyc.htm?contextscope=all"
#~ "#simaker-facegetsizepyc>`_."
#~ msgstr ""

#~ msgid ""
#~ "Check `FaceArray on help.3ds.com/2017 "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-facearraypyc.htm?contextscope=all>`_."
#~ msgstr ""

#~ msgid ""
#~ "Check `FaceArray.findAt() on help.3ds.com/2017 "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-facearraypyc.htm?contextscope=all"
#~ "#simaker-facearrayfindatpyc>`_."
#~ msgstr ""

#~ msgid ""
#~ "Check `FaceArray.getByBoundingBox() on "
#~ "help.3ds.com/2017 "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-facearraypyc.htm?contextscope=all"
#~ "#simaker-facearraygetbyboundingboxpyc>`_."
#~ msgstr ""

#~ msgid ""
#~ "Check `FaceArray.getByBoundingCylinder() on "
#~ "help.3ds.com/2017 "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-facearraypyc.htm?contextscope=all"
#~ "#simaker-facearraygetbyboundingcylinderpyc>`_."
#~ msgstr ""

#~ msgid ""
#~ "Check `FaceArray.getByBoundingSphere() on "
#~ "help.3ds.com/2017 "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-facearraypyc.htm?contextscope=all"
#~ "#simaker-facearraygetbyboundingspherepyc>`_."
#~ msgstr ""

#~ msgid ""
#~ "Check `FaceArray.getClosest() on help.3ds.com/2017"
#~ " "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-facearraypyc.htm?contextscope=all"
#~ "#simaker-facearraygetclosestpyc>`_."
#~ msgstr ""

#~ msgid ""
#~ "This method returns a dictionary object."
#~ " The key to the dictionary object "
#~ "is the position of the input point"
#~ " in the tuple specified in the "
#~ "**coordinates** starting at index 0. If"
#~ " a closest face could be found "
#~ "then the value is a sequence "
#~ "consisting of two objects. The first "
#~ "object in the sequence is a Face"
#~ " that is close to the input "
#~ "point referred to by the key. The"
#~ " second object in the sequence is "
#~ "a sequence of floats that specifies "
#~ "the **X**-, **Y**-, and **Z**-location "
#~ "of the closest point on the Face"
#~ " to the given point. See program "
#~ "listing above."
#~ msgstr ""

#~ msgid ""
#~ "Check `FaceArray.getSequenceFromMask() on "
#~ "help.3ds.com/2017 "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-facearraypyc.htm?contextscope=all"
#~ "#simaker-facearraygetsequencefrommaskpyc>`_."
#~ msgstr ""

#~ msgid ""
#~ "Check `IgnoredEdge on help.3ds.com/2017 "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-ignorededgepyc.htm?contextscope=all>`_."
#~ msgstr ""

#~ msgid ""
#~ "Check `IgnoredEdge.getCurvature() on "
#~ "help.3ds.com/2017 "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-ignorededgepyc.htm?contextscope=all"
#~ "#simaker-ignorededgegetcurvaturepyc>`_."
#~ msgstr ""

#~ msgid ""
#~ "Check `IgnoredEdge.getSize() on help.3ds.com/2017"
#~ " "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-ignorededgepyc.htm?contextscope=all"
#~ "#simaker-ignorededgegetsizepyc>`_."
#~ msgstr ""

#~ msgid ""
#~ "Check `IgnoredEdgeArray on help.3ds.com/2017 "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-ignorededgearraypyc.htm?contextscope=all>`_."
#~ msgstr ""

#~ msgid ""
#~ "Check `IgnoredEdgeArray.findAt() on "
#~ "help.3ds.com/2017 "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-ignorededgearraypyc.htm?contextscope=all"
#~ "#simaker-ignorededgearrayfindatpyc>`_."
#~ msgstr ""

#~ msgid ""
#~ "A sequence of Floats specifying the "
#~ "**X**-, **Y**-, and **Z**-coordinates of "
#~ "the object to find.findAt returns either"
#~ " an IgnoredEdge object or a sequence"
#~ " of IgnoredEdge objects based on the"
#~ " type of input.If **coordinates** is "
#~ "a sequence of Floats, findAt returns "
#~ "the IgnoredEdge object at that point.If"
#~ " you omit the **coordinates** keyword "
#~ "argument, findAt accepts as arguments a"
#~ " sequence of sequence of floats in"
#~ " the following format:"
#~ msgstr ""

#~ msgid "ignoredEdges = e.findAt(((20.19686, -169.513997, 27.798593), ),"
#~ msgstr ""

#~ msgid ""
#~ "((19.657627, -167.295749, 27.056402), ), "
#~ "((18.274129, -157.144741, 25.15218), ))"
#~ msgstr ""

#~ msgid ""
#~ "Check `IgnoredEdgeArray.getClosest() on "
#~ "help.3ds.com/2017 "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-ignorededgearraypyc.htm?contextscope=all"
#~ "#simaker-ignorededgearraygetclosestpyc>`_."
#~ msgstr ""

#~ msgid ""
#~ "This method returns a dictionary object."
#~ " The key to the dictionary object "
#~ "is the position of the input point"
#~ " in the tuple specified in the "
#~ "**coordinates** starting at index 0. If"
#~ " a closest IgnoredEdge could be found"
#~ " then the value is a sequence "
#~ "consisting of two objects. The first "
#~ "object in the sequence is an "
#~ "IgnoredEdge that is close to the "
#~ "input point referred to by the "
#~ "key. The second object in the "
#~ "sequence, is a sequence of floats "
#~ "which specify the **X**-, **Y**-, and"
#~ " **Z**-location of the closest point "
#~ "on the IgnoredEdge to the given "
#~ "point. See program listing above."
#~ msgstr ""

#~ msgid ""
#~ "Check `IgnoredEdgeArray.getSequenceFromMask() on "
#~ "help.3ds.com/2017 "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-ignorededgearraypyc.htm?contextscope=all"
#~ "#simaker-ignorededgearraygetsequencefrommaskpyc>`_."
#~ msgstr ""

#~ msgid ""
#~ "Check `IgnoredVertex on help.3ds.com/2017 "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-ignoredvertexpyc.htm?contextscope=all>`_."
#~ msgstr ""

#~ msgid ""
#~ "Check `IgnoredVertexArray on help.3ds.com/2017 "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-ignoredvertexarraypyc.htm?contextscope=all>`_."
#~ msgstr ""

#~ msgid ""
#~ "Check `IgnoredVertexArray.findAt() on "
#~ "help.3ds.com/2017 "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-ignoredvertexarraypyc.htm?contextscope=all"
#~ "#simaker-ignoredvertexarrayfindatpyc>`_."
#~ msgstr ""

#~ msgid "verts = v.findAt(((20.19686, -169.513997, 27.798593), ),"
#~ msgstr ""

#~ msgid ""
#~ "Check `IgnoredVertexArray.getClosest() on "
#~ "help.3ds.com/2017 "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-ignoredvertexarraypyc.htm?contextscope=all"
#~ "#simaker-ignoredvertexarraygetclosestpyc>`_."
#~ msgstr ""

#~ msgid ""
#~ "This method returns a dictionary object."
#~ " The key to the dictionary object "
#~ "is the position of the input point"
#~ " in the tuple specified in the "
#~ "**coordinates** starting at index 0. If"
#~ " a closest IgnoredVertex could be "
#~ "found then the value is a sequence"
#~ " consisting of two objects. The first"
#~ " object in the sequence is a "
#~ "IgnoredVertex that is close to the "
#~ "input point referred to by the "
#~ "key. The second object in the "
#~ "sequence, is a sequence of floats "
#~ "which specify the **X**-, **Y**-, and"
#~ " **Z**-location of the IgnoredVertex. See"
#~ " program listing above."
#~ msgstr ""

#~ msgid ""
#~ "Check `IgnoredVertexArray.getSequenceFromMask() on "
#~ "help.3ds.com/2017 "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-ignoredvertexarraypyc.htm?contextscope=all"
#~ "#simaker-ignoredvertexarraygetsequencefrommaskpyc>`_."
#~ msgstr ""

#~ msgid ""
#~ "Check `InterestingPoint on help.3ds.com/2017 "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-interestingpointpyc.htm?contextscope=all>`_."
#~ msgstr ""

#~ msgid ""
#~ "Check `ModelDot on help.3ds.com/2017 "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-modeldotpyc.htm?contextscope=all>`_."
#~ msgstr ""

#~ msgid ""
#~ "Check `ReferencePoint on help.3ds.com/2017 "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-referencepointpyc.htm?contextscope=all>`_."
#~ msgstr ""

#~ msgid ""
#~ "Check `Transform on help.3ds.com/2017 "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-transformpyc.htm?contextscope=all>`_."
#~ msgstr ""

#~ msgid ""
#~ "Check `Vertex on help.3ds.com/2017 "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-vertexpyc.htm?contextscope=all>`_."
#~ msgstr ""

#~ msgid ""
#~ "Check `VertexArray on help.3ds.com/2017 "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-vertexarraypyc.htm?contextscope=all>`_."
#~ msgstr ""

#~ msgid ""
#~ "Check `VertexArray.findAt() on help.3ds.com/2017 "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-vertexarraypyc.htm?contextscope=all"
#~ "#simaker-vertexarrayfindatpyc>`_."
#~ msgstr ""

#~ msgid ""
#~ "A sequence of Floats specifying the "
#~ "**X**-, **Y**-, and **Z**-coordinates of "
#~ "the object to find.findAt returns either"
#~ " a ConstrainedSketchVertex object or a "
#~ "sequence of ConstrainedSketchVertex objects "
#~ "based on the type of input.If "
#~ "**coordinates** is a sequence of Floats,"
#~ " findAt returns the ConstrainedSketchVertex "
#~ "object at that point.If you omit "
#~ "the **coordinates** keyword argument, findAt"
#~ " accepts as arguments a sequence of"
#~ " sequence of floats in the following"
#~ " format:`verts = v.findAt(((20.19686, "
#~ "-169.513997, 27.798593), ),                 "
#~ "((19.657627, -167.295749, 27.056402), ),"
#~ "                 ((18.274129, -157.144741, 25.15218),"
#~ " ))`"
#~ msgstr ""

#~ msgid ""
#~ "Check `VertexArray.getByBoundingBox() on "
#~ "help.3ds.com/2017 "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-vertexarraypyc.htm?contextscope=all"
#~ "#simaker-vertexarraygetbyboundingboxpyc>`_."
#~ msgstr ""

#~ msgid ""
#~ "Check `VertexArray.getByBoundingCylinder() on "
#~ "help.3ds.com/2017 "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-vertexarraypyc.htm?contextscope=all"
#~ "#simaker-vertexarraygetbyboundingcylinderpyc>`_."
#~ msgstr ""

#~ msgid ""
#~ "Check `VertexArray.getByBoundingSphere() on "
#~ "help.3ds.com/2017 "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-vertexarraypyc.htm?contextscope=all"
#~ "#simaker-vertexarraygetbyboundingspherepyc>`_."
#~ msgstr ""

#~ msgid ""
#~ "Check `VertexArray.getClosest() on help.3ds.com/2017"
#~ " "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-vertexarraypyc.htm?contextscope=all"
#~ "#simaker-vertexarraygetclosestpyc>`_."
#~ msgstr ""

#~ msgid ""
#~ "This method returns a dictionary object."
#~ " The key to the dictionary object "
#~ "is the position of the input point"
#~ " in the tuple specified in the "
#~ "**coordinates** starting at index 0. If"
#~ " a closest vertex could be found "
#~ "then the value is a sequence "
#~ "consisting of two objects. The first "
#~ "object in the sequence is a "
#~ "ConstrainedSketchVertex that is close to "
#~ "the input point referred to by the"
#~ " key. The second object in the "
#~ "sequence is a sequence of floats "
#~ "that specifies the **X**-, **Y**-, and"
#~ " **Z**-location of the ConstrainedSketchVertex."
#~ " See program listing above."
#~ msgstr ""

#~ msgid ""
#~ "Check `VertexArray.getSequenceFromMask() on "
#~ "help.3ds.com/2017 "
#~ "<https://help.3ds.com/2017/English/DSSIMULIA_Established/SIMACAEKERRefMap/simaker-c-vertexarraypyc.htm?contextscope=all"
#~ "#simaker-vertexarraygetsequencefrommaskpyc>`_."
#~ msgstr ""

#~ msgid "This object can be accessed by:"
#~ msgstr ""

#~ msgid ""
#~ "A sequence of Floats specifying the "
#~ "**X**-, **Y**-, and **Z**-coordinates of "
#~ "the object to find.findAt returns either"
#~ " a Cell object or a sequence of"
#~ " Cell objects based on the type "
#~ "of input. If **coordinates** is a "
#~ "sequence of Floats, findAt returns the"
#~ " Cell object at that point. If "
#~ "**coordinates** is a sequence of "
#~ "sequence of Floats, findAt returns a "
#~ "sequence of Cell objects at the "
#~ "given locations. The sequence of "
#~ "sequence of Floats must be a "
#~ "sequence of sequence of point and "
#~ "normal data, not a sequence of "
#~ "point data. For example,"
#~ msgstr ""

#~ msgid ""
#~ "A sequence of Floats specifying the "
#~ "**X**-, **Y**-, and **Z**-coordinates of "
#~ "the object to find. findAt returns "
#~ "either an Edge object or a "
#~ "sequence of Edge objects based on "
#~ "the type of input. If **coordinates**"
#~ " is a sequence of Floats, findAt "
#~ "returns the Edge object at that "
#~ "point. If you omit the **coordinates**"
#~ " keyword argument, findAt accepts as "
#~ "arguments a sequence of sequence of "
#~ "floats in the following format:"
#~ msgstr ""

#~ msgid ""
#~ "A sequence of a sequence of "
#~ "floats, where each sequence of floats"
#~ " describes the **X**-, **Y**-, and "
#~ "**Z**- coordinates of a point."
#~ msgstr ""

#~ msgid ""
#~ "A sequence of a sequence of "
#~ "floats, where each sequence of floats"
#~ " describes the **X**-, **Y**-, and "
#~ "**Z**-coordinates of a point."
#~ msgstr ""

#~ msgid ""
#~ "A sequence of Floats specifying the "
#~ "**X**-, **Y**-, and **Z**- coordinates "
#~ "of the object to find.findAt returns "
#~ "either an IgnoredEdge object or a "
#~ "sequence of IgnoredEdge objects based on"
#~ " the type of input.If **coordinates** "
#~ "is a sequence of Floats, findAt "
#~ "returns the IgnoredEdge object at that"
#~ " point.If you omit the **coordinates** "
#~ "keyword argument, findAt accepts as "
#~ "arguments a sequence of sequence of "
#~ "floats in the following format:"
#~ msgstr ""

#~ msgid ""
#~ "A sequence of a sequence of "
#~ "floats, where each sequence of floats"
#~ " describes the **X**-, **Y**-, and "
#~ "**Z**-coordinates of a point"
#~ msgstr ""

#~ msgid ""
#~ "A sequence of Floats specifying the "
#~ "**X**-, **Y**-, and **Z**-coordinates of "
#~ "the object to find.findAt returns either"
#~ " a IgnoredVertex object or a sequence"
#~ " of IgnoredVertex objects based on "
#~ "the type of input.If **coordinates** is"
#~ " a sequence of Floats, findAt returns"
#~ " the IgnoredVertex object at that "
#~ "point.If you omit the **coordinates** "
#~ "keyword argument, findAt accepts as "
#~ "arguments a sequence of sequence of "
#~ "floats in the following format:"
#~ msgstr ""

#~ msgid ""
#~ "A sequence of Floats specifying the "
#~ "**X**-, **Y**-, and **Z**-coordinates of "
#~ "the object to find.findAt returns either"
#~ " a ConstrainedSketchVertex object or a "
#~ "sequence of ConstrainedSketchVertex objects "
#~ "based on the type of input.If "
#~ "**coordinates** is a sequence of Floats,"
#~ " findAt returns the ConstrainedSketchVertex "
#~ "object at that point.If you omit "
#~ "the **coordinates** keyword argument, findAt"
#~ " accepts as arguments a sequence of"
#~ " sequence of floats in the following"
#~ " format:"
#~ msgstr ""

#~ msgid ""
#~ "A sequence of Floats specifying the "
#~ "**X**-, **Y**-, and **Z**-coordinates of "
#~ "the object to find.findAt returns either"
#~ " a Cell object or a sequence of"
#~ " Cell objects based on the type "
#~ "of input. If **coordinates** is a "
#~ "sequence of Floats, findAt returns the"
#~ " Cell object at that point. If "
#~ "**coordinates** is a sequence of "
#~ "sequence of Floats, findAt returns a "
#~ "sequence of Cell objects at the "
#~ "given locations. The sequence of "
#~ "sequence of Floats must be a "
#~ "sequence of sequence of point and "
#~ "normal data, not a sequence of "
#~ "point data. For example::"
#~ msgstr ""

#~ msgid ""
#~ ":obj:`typing.Dict`\\[:class:`python:str`, "
#~ ":obj:`typing.Tuple`\\[:class:`python:float`, "
#~ ":class:`python:float`, :class:`python:float`]]"
#~ msgstr ""

#~ msgid ""
#~ "A sequence of Floats specifying the "
#~ "**X**-, **Y**-, and **Z**-coordinates of "
#~ "the object to find.findAt returns either"
#~ " a Face object or a sequence of"
#~ " Face objects based on the type "
#~ "of input.If **coordinates** is a "
#~ "sequence of Floats, findAt returns the"
#~ " Face object at that point.If you "
#~ "omit the **coordinates** keyword argument, "
#~ "findAt accepts as arguments a sequence"
#~ " of pairs of sequences describing "
#~ "each face's coordinate and normal, and"
#~ " findAt returns a sequence of Face"
#~ " objects at the given locations. If"
#~ " you omit the **coordinates** keyword "
#~ "argument, you must also omit the "
#~ "**normal** argument. `faces = "
#~ "f.findAt(((-16.438578, -41.835673, -24.19804), ),"
#~ " ((25.210364, -35.689868, 1.860314), ), "
#~ "((26.727683, -38.207055, 4.164759), ))`"
#~ msgstr ""

#~ msgid ""
#~ ":obj:`typing.Dict`\\[:class:`python:str`, "
#~ ":obj:`typing.Tuple`\\[:class:`python:float`, ...]]"
#~ msgstr ""

#~ msgid ":obj:`CellArray`"
#~ msgstr ""

#~ msgid ":obj:`typing.Tuple`\\[:class:`python:int`, ...]"
#~ msgstr ""

#~ msgid ":obj:`MeshElementArray`"
#~ msgstr ""

#~ msgid ":obj:`MeshNodeArray`"
#~ msgstr ""

#~ msgid "**printResults**"
#~ msgstr ""

#~ msgid ":class:`python:float`"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`__repr__ "
#~ "<abaqus.BasicGeometry.CellArray.CellArray.__repr__>`\\ \\(\\/\\)"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`__iter__ "
#~ "<abaqus.BasicGeometry.CellArray.CellArray.__iter__>`\\ \\(\\/\\)"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`__len__ "
#~ "<abaqus.BasicGeometry.CellArray.CellArray.__len__>`\\ \\(\\/\\)"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`__reversed__ "
#~ "<abaqus.BasicGeometry.CellArray.CellArray.__reversed__>`\\ "
#~ "\\(\\/\\)"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`__sizeof__ "
#~ "<abaqus.BasicGeometry.CellArray.CellArray.__sizeof__>`\\ "
#~ "\\(\\/\\)"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`clear "
#~ "<abaqus.BasicGeometry.CellArray.CellArray.clear>`\\ \\(\\/\\)"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`copy <abaqus.BasicGeometry.CellArray.CellArray.copy>`\\"
#~ " \\(\\/\\)"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`reverse "
#~ "<abaqus.BasicGeometry.CellArray.CellArray.reverse>`\\ \\(\\/\\)"
#~ msgstr ""

#~ msgid "**coordinates**"
#~ msgstr ""

#~ msgid ""
#~ "If **coordinates** is a sequence of "
#~ "sequence of Floats, findAt returns a "
#~ "sequence of Cell objects at the "
#~ "given locations. The sequence of "
#~ "sequence of Floats must be a "
#~ "sequence of  sequence of point and "
#~ "normal data, not a sequence of "
#~ "point data. For example::"
#~ msgstr ""

#~ msgid "**printWarning**"
#~ msgstr ""

#~ msgid ":obj:`Cell`"
#~ msgstr ""

#~ msgid ""
#~ ":obj:`Dict`\\[:class:`python:str`, "
#~ ":obj:`Tuple`\\[:class:`python:float`, :class:`python:float`, "
#~ ":class:`python:float`]]"
#~ msgstr ""

#~ msgid "**xMin**"
#~ msgstr ""

#~ msgid "**yMin**"
#~ msgstr ""

#~ msgid "**zMin**"
#~ msgstr ""

#~ msgid "**xMax**"
#~ msgstr ""

#~ msgid "**yMax**"
#~ msgstr ""

#~ msgid "**zMax**"
#~ msgstr ""

#~ msgid "**center1**"
#~ msgstr ""

#~ msgid "**center2**"
#~ msgstr ""

#~ msgid "**radius**"
#~ msgstr ""

#~ msgid "**center**"
#~ msgstr ""

#~ msgid ":class:`python:str`"
#~ msgstr ""

#~ msgid "**mask**"
#~ msgstr ""

#~ msgid ""
#~ "Error: :obj:`The` :obj:`mask` :obj:`results` "
#~ ":obj:`in` :obj:`an` :obj:`empty` "
#~ ":term:`python:sequence`"
#~ msgstr ""

#~ msgid ":obj:`EdgeArray`"
#~ msgstr ""

#~ msgid "**parameter**"
#~ msgstr ""

#~ msgid "**point**"
#~ msgstr ""

#~ msgid ":class:`python:dict`"
#~ msgstr ""

#~ msgid ":obj:`The` :obj:`given` :obj:`edge` :obj:`is` :obj:`straight`"
#~ msgstr ""

#~ msgid "**angle**"
#~ msgstr ""

#~ msgid ""
#~ ":obj:`The` :obj:`given` :obj:`edges` :obj:`is` "
#~ ":obj:`not` :obj:`circular`"
#~ msgstr ""

#~ msgid ":obj:`Boolean`"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`__repr__ "
#~ "<abaqus.BasicGeometry.EdgeArray.EdgeArray.__repr__>`\\ \\(\\/\\)"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`__iter__ "
#~ "<abaqus.BasicGeometry.EdgeArray.EdgeArray.__iter__>`\\ \\(\\/\\)"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`__len__ "
#~ "<abaqus.BasicGeometry.EdgeArray.EdgeArray.__len__>`\\ \\(\\/\\)"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`__reversed__ "
#~ "<abaqus.BasicGeometry.EdgeArray.EdgeArray.__reversed__>`\\ "
#~ "\\(\\/\\)"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`__sizeof__ "
#~ "<abaqus.BasicGeometry.EdgeArray.EdgeArray.__sizeof__>`\\ "
#~ "\\(\\/\\)"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`clear "
#~ "<abaqus.BasicGeometry.EdgeArray.EdgeArray.clear>`\\ \\(\\/\\)"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`copy <abaqus.BasicGeometry.EdgeArray.EdgeArray.copy>`\\"
#~ " \\(\\/\\)"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`reverse "
#~ "<abaqus.BasicGeometry.EdgeArray.EdgeArray.reverse>`\\ \\(\\/\\)"
#~ msgstr ""

#~ msgid ":obj:`Edge`"
#~ msgstr ""

#~ msgid "**searchTolerance**"
#~ msgstr ""

#~ msgid ":obj:`FaceArray`"
#~ msgstr ""

#~ msgid ":obj:`typing.Tuple`\\[:class:`python:float`, ...]"
#~ msgstr ""

#~ msgid "**uParam**"
#~ msgstr ""

#~ msgid "**vParam**"
#~ msgstr ""

#~ msgid ":obj:`A` :class:`python:tuple` :obj:`of` integers."
#~ msgstr ""

#~ msgid "**faceSide**"
#~ msgstr ""

#~ msgid ":obj:`MeshFaceArray`"
#~ msgstr ""

#~ msgid ""
#~ ":obj:`An` :obj:`exception` :obj:`is` :obj:`raised`"
#~ " :obj:`if` :obj:`the` :obj:`optional` "
#~ ":obj:`argument` **point** :obj:`is` :obj:`provided`"
#~ " :obj:`but` :obj:`the` :obj:`point` :obj:`cannot`"
#~ msgstr ""

#~ msgid ":obj:`be` :obj:`projected` :obj:`onto` :obj:`the` face."
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`__repr__ "
#~ "<abaqus.BasicGeometry.FaceArray.FaceArray.__repr__>`\\ \\(\\/\\)"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`__iter__ "
#~ "<abaqus.BasicGeometry.FaceArray.FaceArray.__iter__>`\\ \\(\\/\\)"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`__len__ "
#~ "<abaqus.BasicGeometry.FaceArray.FaceArray.__len__>`\\ \\(\\/\\)"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`__reversed__ "
#~ "<abaqus.BasicGeometry.FaceArray.FaceArray.__reversed__>`\\ "
#~ "\\(\\/\\)"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`__sizeof__ "
#~ "<abaqus.BasicGeometry.FaceArray.FaceArray.__sizeof__>`\\ "
#~ "\\(\\/\\)"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`clear "
#~ "<abaqus.BasicGeometry.FaceArray.FaceArray.clear>`\\ \\(\\/\\)"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`copy <abaqus.BasicGeometry.FaceArray.FaceArray.copy>`\\"
#~ " \\(\\/\\)"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`reverse "
#~ "<abaqus.BasicGeometry.FaceArray.FaceArray.reverse>`\\ \\(\\/\\)"
#~ msgstr ""

#~ msgid "**normal**"
#~ msgstr ""

#~ msgid ":obj:`Face`"
#~ msgstr ""

#~ msgid ""
#~ ":obj:`Dict`\\[:class:`python:str`, "
#~ ":obj:`Tuple`\\[:class:`python:float`, ...]]"
#~ msgstr ""

#~ msgid ":obj:`The` :obj:`given` :obj:`IgnoredEdge` :obj:`is` :obj:`straight`"
#~ msgstr ""

#~ msgid ""
#~ ":obj:`The` :obj:`given` :obj:`IgnoredEdge` "
#~ ":obj:`object` :obj:`is` :obj:`not` :obj:`circular`"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`__repr__ "
#~ "<abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.__repr__>`\\"
#~ " \\(\\/\\)"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`__iter__ "
#~ "<abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.__iter__>`\\"
#~ " \\(\\/\\)"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`__len__ "
#~ "<abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.__len__>`\\"
#~ " \\(\\/\\)"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`__reversed__ "
#~ "<abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.__reversed__>`\\"
#~ " \\(\\/\\)"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`__sizeof__ "
#~ "<abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.__sizeof__>`\\"
#~ " \\(\\/\\)"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`clear "
#~ "<abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.clear>`\\ "
#~ "\\(\\/\\)"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`copy "
#~ "<abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.copy>`\\ "
#~ "\\(\\/\\)"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`reverse "
#~ "<abaqus.BasicGeometry.IgnoredEdgeArray.IgnoredEdgeArray.reverse>`\\"
#~ " \\(\\/\\)"
#~ msgstr ""

#~ msgid ":obj:`IgnoredEdge`"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`__repr__ "
#~ "<abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.__repr__>`\\"
#~ " \\(\\/\\)"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`__iter__ "
#~ "<abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.__iter__>`\\"
#~ " \\(\\/\\)"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`__len__ "
#~ "<abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.__len__>`\\"
#~ " \\(\\/\\)"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`__reversed__ "
#~ "<abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.__reversed__>`\\"
#~ " \\(\\/\\)"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`__sizeof__ "
#~ "<abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.__sizeof__>`\\"
#~ " \\(\\/\\)"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`clear "
#~ "<abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.clear>`\\"
#~ " \\(\\/\\)"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`copy "
#~ "<abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.copy>`\\"
#~ " \\(\\/\\)"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`reverse "
#~ "<abaqus.BasicGeometry.IgnoredVertexArray.IgnoredVertexArray.reverse>`\\"
#~ " \\(\\/\\)"
#~ msgstr ""

#~ msgid ":obj:`IgnoredVertex`"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`__repr__ "
#~ "<abaqus.BasicGeometry.ReferencePoints.ReferencePoints.__repr__>`\\ "
#~ "\\(\\/\\)"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`__iter__ "
#~ "<abaqus.BasicGeometry.ReferencePoints.ReferencePoints.__iter__>`\\ "
#~ "\\(\\/\\)"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`__len__ "
#~ "<abaqus.BasicGeometry.ReferencePoints.ReferencePoints.__len__>`\\ "
#~ "\\(\\/\\)"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`pop "
#~ "<abaqus.BasicGeometry.ReferencePoints.ReferencePoints.pop>`\\ "
#~ "\\(key\\[\\, default\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`popitem "
#~ "<abaqus.BasicGeometry.ReferencePoints.ReferencePoints.popitem>`\\ "
#~ "\\(\\/\\)"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`fromkeys "
#~ "<abaqus.BasicGeometry.ReferencePoints.ReferencePoints.fromkeys>`\\ "
#~ "\\(iterable\\[\\, value\\]\\)"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`__reversed__ "
#~ "<abaqus.BasicGeometry.ReferencePoints.ReferencePoints.__reversed__>`\\"
#~ " \\(\\/\\)"
#~ msgstr ""

#~ msgid ""
#~ ":obj:`typing.Tuple`\\[:class:`python:float`, "
#~ ":class:`python:float`, :class:`python:float`, "
#~ ":class:`python:float`, :class:`python:float`, "
#~ ":class:`python:float`, :class:`python:float`, "
#~ ":class:`python:float`, :class:`python:float`, "
#~ ":class:`python:float`, :class:`python:float`, "
#~ ":class:`python:float`]"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`__repr__ "
#~ "<abaqus.BasicGeometry.VertexArray.VertexArray.__repr__>`\\ "
#~ "\\(\\/\\)"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`__iter__ "
#~ "<abaqus.BasicGeometry.VertexArray.VertexArray.__iter__>`\\ "
#~ "\\(\\/\\)"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`__len__ "
#~ "<abaqus.BasicGeometry.VertexArray.VertexArray.__len__>`\\ "
#~ "\\(\\/\\)"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`__reversed__ "
#~ "<abaqus.BasicGeometry.VertexArray.VertexArray.__reversed__>`\\ "
#~ "\\(\\/\\)"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`__sizeof__ "
#~ "<abaqus.BasicGeometry.VertexArray.VertexArray.__sizeof__>`\\ "
#~ "\\(\\/\\)"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`clear "
#~ "<abaqus.BasicGeometry.VertexArray.VertexArray.clear>`\\ "
#~ "\\(\\/\\)"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`copy "
#~ "<abaqus.BasicGeometry.VertexArray.VertexArray.copy>`\\ \\(\\/\\)"
#~ msgstr ""

#~ msgid ""
#~ ":py:obj:`reverse "
#~ "<abaqus.BasicGeometry.VertexArray.VertexArray.reverse>`\\ "
#~ "\\(\\/\\)"
#~ msgstr ""

#~ msgid ":obj:`ConstrainedSketchVertex`"
#~ msgstr ""

#~ msgid ":obj:`VertexArray`"
#~ msgstr ""

#~ msgid ""
#~ "Interesting points can be located at "
#~ "the following: - The middle of an"
#~ " edge. - The middle of an arc."
#~ " - The center of an arc. An "
#~ ":py:class:`~abaqus.BasicGeometry.InterestingPoint.InterestingPoint`"
#~ " object is a temporary object and "
#~ "cannot be accessed from the Mdb "
#~ "object."
#~ msgstr ""

